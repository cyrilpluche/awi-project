{"version":3,"sources":["public/images/bg-singin.png","public/images/download-picture.png","public/images/prello-logo-2.png","helpers/Request.helper.js","helpers/History.helper.js","helpers/Method.helper.js","services/Api.js","services/Action.service.js","services/Card.service.js","services/List.service.js","services/Member.service.js","services/Permission.service.js","services/Project.service.js","services/Team.service.js","services/Task.service.js","services/Label.service.js","services/index.js","actions/Dashboard.action.js","reducers/Dashboard.reducer.js","actions/Signin.action.js","actions/Signup.action.js","actions/Navbar.action.js","actions/Notification.action.js","actions/Profile.action.js","actions/Project.action.js","actions/List.action.js","actions/Card.action.js","actions/Searchbar.action.js","actions/Invitation.action.js","actions/Team.action.js","actions/DashboardFix.action.js","actions/index.js","actions/Member.action.js","reducers/Signin.reducer.js","reducers/Signup.reducer.js","reducers/Navbar.reducer.js","reducers/Profile.reducer.js","helpers/SocketIo.helper.js","reducers/Project.reducer.js","reducers/Card.reducer.js","reducers/Searchbar.reducer.js","reducers/Invitation.reducer.js","reducers/DashboardFix.reducer.js","reducers/index.js","helpers/Store.helper.js","helpers/index.js","components/waveIt/WaveIt.js","components/waveIt/Style.js","components/signin/Signin.js","components/signin/Style.js","components/ui/loader/Loader.js","components/loaderPage/LoaderPage.js","components/loaderPage/Style.js","components/signup/Signup.js","components/signup/Style.js","components/invitation/Invitation.js","components/invitation/Style.js","components/ui/menu/Menu.js","components/ui/palette/Palette.js","components/ui/snackbar/Snackbar.js","components/profile/password/Password.js","components/profile/password/Style.js","components/ui/loader/MiniLoader.js","components/profile/overview/Overview.js","components/profile/overview/Style.js","components/profile/Profile.js","components/profile/Style.js","components/ui/notification/Notification.js","components/ui/notification/NotificationList.js","components/layout/navbar/searchResults/SearchResults.js","components/layout/navbar/searchResults/Style.js","components/layout/navbar/Navbar.js","components/layout/navbar/Style.js","components/transitionGithub/TransitionGithub.js","components/card/Style.js","components/card/checklist/StyleChecklist.js","components/card/checklist/ChecklistDialog.js","components/card/label/Style.js","components/card/label/LabelDialog.js","components/card/confirmation/ConfirmationDialog.js","components/card/membersOnCard/MembersOnCard.js","components/card/membersOnCard/Style.js","components/card/Card.js","components/project/card/Card.js","components/project/card/Style.js","components/ui/dialog/Style.js","components/ui/dialog/SimpleDialog.js","components/project/list/Style.js","components/project/list/List.js","components/project/list/Lists.js","components/ui/activity/ActivityList.js","components/ui/dialog/MemberDialog.js","components/ui/dialog/VisibilityDialog.js","components/project/Project.js","components/project/Style.js","components/signup/accountConfirmation/Style.js","components/signup/accountConfirmation/AccountConfirmation.js","components/signup/accountConfirmation/TokenVerification.js","components/signin/passwordForgotten/PasswordForgotten.js","components/signin/passwordForgotten/Style.js","components/dashboardFix/DashboardFix.js","components/dashboardFix/Style.js","components/download/Download.js","components/download/Style.js","components/App.js","components/Style.js","index.js"],"names":["module","exports","__webpack_require__","p","Request","urlFromObject","object","keys","Object","values","url","i","length","History","createBrowserHistory","method","copy","o","JSON","parse","stringify","isTypeEmail","str","strSplit","split","strAfterA","strEnd","err","computeListOrder","lists","listsOrder","index","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","element","listId","value","listFather","push","return","computeCardOrder","cardsOrder","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","l","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","CardListFks","cardId","cardFather","BASE_URL","apiMethods","SOCKET_URL","headers","Authorization","localStorage","getItem","get","token","arguments","axios","defaults","common","post","payload","put","delete","Action","getAll","where","helper","Api","then","res","data","getNonArchived","updateMultiple","array","body","memberHasAction","createActivityForAllMembers","projectId","Card","create","createLinkLabel","deleteLinkLabel","query","update","searchbarCards","findAllMembers","addMember","removeMember","updateCardOrder","cards","List","idProject","searchbarLists","updateListOrder","Member","createIfNotExist","memberEmail","signIn","signInWithGithub","signUp","memberPseudo","updateMemberInvitation","validateAccount","memberToken","isLogged","member","catch","removeItem","memberId","updatePassword","attributes","memberPassword","newMemberPassword","sendNewPassword","decrpytInvitation","getInvitation","updateInvitation","deleteInvitation","updateProfilePicture","createMemberProjectPermission","permissionId","mhppState","r","getAllOnProject","updateOnProject","deleteForMemberOnProject","Project","getAllProjectsForMember","getAllWithCards","getAllProjectsMember","member_id","e","error","getAllMembers","getAllActions","getOne","createProject","projectTitle","projectVisibility","projectStatus","projectDateTarget","createMemberHasProject","memberhasprojectStatus","projectIsFavorite","updateMemberHasProject","params","concat","searchbarProjects","getMemberHasProject","getLabels","sendInvitation","createAndSendInvitation","getMemberStatus","createProjectForMember","createProjectFix","updateFix","getActivity","Team","teamId","Task","Label","service","Permission","labels","LOAD_DASHBOARD","SELECT_PROJECT","FIND_ONE_PROJECT","RECEIVE_PROJECT","SELECT_ALL_PROJECT","SELECT_ALL_PROJECT_MEMBER","SELECT_ALL_TEAM_MEMBER","CREATE_NEW_PROJECT","UPDATE_MEMBER_HAS_PROJECT","DASHBOARD_ACTION_ERROR","DASHBOARD_HIDE_ERROR_MSG","findOneProject","type","receivedProject","json","project","dashboardAction","fetchProject","dispatch","_service","console","log","projects","errorMsg","permission","actionType","actionTitle","actionDescription","actionDateCreation","moment","mhaStatus","_helper","dataObject","id","hideErrorMessage","getAllTeams","teams","initialState","LOGIN","ERROR","CREATE_USER","IS_LOGGED","IS_NOT_LOGGED","NEW_PASSWORD_SENT","NEW_PASSWORD_FAILED","RESET_FIELD","signSuccess","signError","signinAction","signin","redirection","setItem","signinWithGithub","window","location","assign","confirmSigninGithub","isMemberLoggedGithub","isMemberLogged","resetField","LOAD_SIGNUP","LOAD_INVITATION","SIGN_UP","SIGN_UP_ERROR","LOADING","VALIDATE_ACCOUNT_TOKEN","VALIDATE_ACCOUNT_TOKEN_ERROR","INVITATION_ACCEPTED","INVITATION_ACCEPTED_ERROR","msg","signupAction","signup","isDirectlyValidate","checking","fields","isEmpty","_arr","_i","field","isFieldsOk","memberCheckPassword","checkSignupFields","finalBody","memberStatus","response","validateAccountWithToken","LOG_OFF","GET_ALL_NOTIFICATIONS","GET_ALL_NOTIFICATIONS_ERROR","UPDATE_NOTIFICATION","UPDATE_NOTIFICATIONS__DB_ERROR","UPDATE_NOTIFICATIONS_DB","navbarAction","logOff","getAllNonArchivedNotifications","handleCheckboxNotification","notifications","newNotification","isRead","nbUnread","notificationsUnread","updateNotifications","CHANGE_NOTIFICATION_READ_STATE","FILTER_ONLY_UNREAD","DISABLED_FILTER","notificationAction","showOnlyUnreadAction","notificationsUnarchived","onlyUnread","cloneDeep","newNotifications","item","actionStatus","LOAD_PROFILE_PICTURE","UPDATE_MEMBER","UPDATE_MEMBER_ERROR","UPDATE_PASSWORD","UPDATE_PASSWORD_ERROR","profileAction","updateMember","updateMemberPassword","passwords","updatePasswordMsg","updateMemberPicture","LOAD_PROJECT","GET_ALL_LISTS","CREATE_LIST","CREATE_LIST_ERROR","UPDATE_LIST","UPDATE_LIST_ERROR","GET_PROJECT_INFO","GET_PROJECT_INFO_ERROR","GET_ALL_MEMBERS","GET_ALL_MEMBERS_ERROR","INVITATION_SUCCESS","INVITATION_ERROR","GET_MEMBER_STATUS","GET_MEMBER_STATUS_ERROR","REMOVE_MEMBER_FROM_PROJECT","REMOVE_MEMBER_FROM_PROJECT_ERROR","SET_MEMBER_ADMIN","GET_ACTIVITY","GET_ACTIVITY_ERROR","MEMBER_HAS_PROJECT","MEMBER_HAS_PROJECT_ERROR","LOAD","GET_ALL_PERMISSIONS","GET_ALL_PERMISSIONS_ERROR","UPDATE_PERMISSION_MEMBER","UPDATE_PERMISSION_MEMBER_ERROR","UPDATE_PROJECT_INFO","projectAction","findAllLists","createList","listTitle","listStatus","updateLists","fatherListId","getProjectInfo","updateProjectTitle","newProjectTitle","updateProjectVisibility","visibilityValue","sendInvitationProject","newMember","memberLastname","memberFirstname","removeMemberFromProject","isDeleted","GET_ALL_LABELS","updatePermissionMember","storeMembers","getAllPermissions","loadLists","loadProjectInfo","projectInfo","GET_ALL_CARDS","GET_ALL_CARDS_ERROR","CREATE_CARD","UPDATE_LIST_TITLE","UPDATE_LIST_TITLE_ERROR","DELETE_LIST","DELETE_LIST_ERROR","UPDATE_CARD","UPDATE_CARD_ERROR","UPDATE_LIST_STATUS","UPDATE_LIST_STATUS_ERROR","UPDATE_POSITION_LISTS","RESTORE_CARD","RESTORE_CARD_ERROR","UPDATE_DATE_CARD","UPDATE_DATE_CARD_ERROR","UPDATE_DESCRIPTION_CARD","UPDATE_DESCRIPTION_CARD_ERROR","UPDATE_TITLE_CARD","UPDATE_TITLE_CARD_ERROR","CREATE_CARD_ERROR","listAction","createCard","cardTitle","cardStatus","cardDescription","card","objectSpread","findAllCards","updateCard","newLists","updateListTitle","newListTitle","setDispacth","deleteList","updateListStatus","status","updatePositionLists","newOrderedArray","restoreCard","updateDueDateCard","dueDate","cardDateTarget","updateDescription","description","updateCardTitle","title","GET_CARD","GET_CARD_ERROR","UPDATE_POSITION_CARD","ERROR_UPDATE_CARD","DELETE_CARD","DELETE_CARD_ERROR","ADD_MEMBER_ON_CARD","ADD_MEMBER_ON_CARD_ERROR","DELETE_MEMBER","DELETE_MEMBER_ERROR","UPDATE_TASK","UPDATE_TASK_ERROR","DELETE_TASK","DELETE_TASK_ERROR","CREATE_TASK","CREATE_TASK_ERROR","LOAD_CARD","GET_ALL_LABEL","GET_ALL_LABEL_ERROR","CREATE_LINK_LABEL","CREATE_LINK_LABEL_ERROR","DELETE_LINK_LABEL","DELETE_LINK_LABEL_ERROR","ARCHIVE_CARD","FIND_ALL_MEMBERS_ON_CARD","FIND_ALL_MEMBERS_ON_CARD_ERROR","FIND_ALL_COMMENTS_ON_CARD","ADD_COMMENTS_ON_CARD","cardAction","getCard","updatecard","listIndex","cardIndex","updateTask","taskId","isUpdated","deleteCard","deleteTask","createTask","newTask","TaskCardFks","membersOnCard","membersOffCard","mhc","elementIndex","getMembersOnCard","members","findAllComments","Comments","getAllComments","comments","addComments","text","comment","updatePositionCard","SEARCH_PROJECTS","SEARCH_PROJECTS_ERROR","SEARCH_CARDS","SEARCH_CARDS_ERROR","SEARCH_LISTS","SEARCH_LISTS_ERROR","SEARCH_RESET","searchbarAction","searchProjects","searchLists","searchCards","resetSearchArrays","MEMBER_EXIST","MEMBER_NOT_EXIST","DECRYPT_ERROR","INVITATION_REPLY","INVITATION_REPLY_ERROR","invitationAction","isMemberExist","isExist","memberProject","isAccountValid","informations","isAccountExist","replyToInvitation","accept","LOAD_ALL_PROJECTS_FOR_MEMBER","LOAD_ALL_PROJECTS_FOR_MEMBER_ERROR","CREATE_PROJECT","CREATE_PROJECT_ERROR","SET_PROJECT_FAVORITE","SET_PROJECT_FAVORITE_ERROR","_action","memberAction","searchMember","search_word","teamAction","CREATE_TEAM","CREATE_TEAM_ERROR","createTeam","dashboardFixAction","findAllProjectsMember","mhp","contributors","setAsProjectFavorite","labelsNavbar","labelsProfile","isLoading","isPasswordReset","isAccountValidNow","msgError","isInvitation","notificationLabels","isPasswordUpdated","isPasswordError","socket","io","projectLabels","listLabels","cardLabels","activities","permissions","maj","cardDateEnd","cardChild","projectsFound","listsFound","cardsFound","labelsSignup","rootReducer","combineReducers","dashboard","state","action","loading","newProjects","Helper","Method","resetPasswordMsg","navbar","profile","newList","toConsumableArray","emit","listWithCard","Array","from","findList","find","list","findListIndex","findIndex","notarchivedCardsCreate","filter","archivedCardsCreate","newCreatedCard","ActionCardFks","AttachmentCardFks","HaslabelCardFks","MemberhascardCardFks","splice","cardIndexx","listsCards","maj2","listIndex1","cardIndex1","listsCards1","maj3","maj1","updateList","updateListIndex","allList","updateListStatusIndex","newListStatus","deletedListIndex","newlists","info","SEND_INVITATION","isAdmin","loggedHasProject","updatedLists","archivedCards","notarchivedCardsArray","archivedCardsArray","arrayOfList","listWithCardIndex","notarchivedCards","archiveCards","listsOld","listDueDateIndex","cardDueDateIndex","oldLists","listDescriptionIndex","cardDescriptionIndex","listsArray","listTitleIndex","cardTitleIndex","cd","searchbar","invitation","dashboardFix","newProjects1","Store","createStore","composeWithDevTools","applyMiddleware","thunk","WaveIt","classes","this","props","react_default","a","createElement","Grid_default","container","justify","alignItems","className","fullScreen","waveScreen","src","React","Component","connect","withStyles","theme","bottom","top","position","padding","spacing","unit","height","width","Signin","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","submit","bind","assertThisInitialized","onLogin","onSigninWithGithub","event","_event$target","target","name","setState","defineProperty","_this$props","layout","xs","sm","md","leftLayout","rightLayout","xsMarginBottom","TextField_default","required","disabled","textfield","label","margin","variant","fullWidth","onChange","handleChange","Button_default","size","onClick","goToForgottenPassword","color","lg","logo","alt","Typography_default","gutterBottom","button","goToSignUp","HowToReg_default","rightIcon","Cloud_default","goToDownloadPage","GetApp_default","errorLabel","mapDispatchToProps","marginTop","paper","display","flexDirection","avatar","backgroundColor","palette","secondary","main","backgroundImage","bg","cardPresentation","marginLeft","minWidth","bullet","transform","fontSize","pos","marginBottom","typography","useNextVariants","paddingSide","paddingLeft","paddingRight","marginRight","progress","CircularProgress_default","LoaderPage","core_Grid_default","loader_Loader","paddingTop","Signup","generateTextfields","labelsForClient","textfields","key","trim","toLowerCase","onAdd","loaderPage_LoaderPage","core_Typography_default","component","form","goBackToLogin","Invitation","componentDidMount","acceptInvitation","refuseInvitation","pathname","onDecryptInvitation","onReplyToInvitation","isLoadingGlobal","Button_Button_default","Done_default","Close_default","signin_Signin","parent","signup_Signup","Menu","displayComponent","route","currentTarget","history","buildLinks","menuList","links","link","MenuItem_default","menuItem","ListItemIcon_default","icon","ListItemText_default","primary","inset","Paper_default","MenuList_default","&:focus","& $primary, & $icon","white","Theme","classic","createMuiTheme","successWarningError","SimpleSnackbar","Snackbar_default","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","handleSnackbarClose","ContentProps","aria-describedby","message","IconButton_default","aria-label","close","Password","reason","openSnackbar","oldPassword","newPassword","newPasswordConfirmation","TextField_TextField_default","textField","checkFields","onUpdateMemberPassword","MuiThemeProvider","Save_default","leftIcon","iconSmall","noValidate","autoComplete","snackbar_Snackbar","flexWrap","dense","menu","Overview","handleIsEditable","checked","changePicture","handleProfilePicture","isEditable","onUpdateMember","file","files","formData","FormData","append","onUpdateMemberPicture","_this2","logoContainer","loader_MiniLoader","Avatar_default","memberPicture","classNames","bigAvatar","react_filepond","maxFiles","upload","onupdatefiles","fileItems","map","fileItem","AddAPhoto_default","Divider_default","FormControlLabel_default","control","Switch_default","memberIsLinkWithGithub","Profile","AccountBox_default","Fingerprint_default","index_es","menu_Menu","Router","Switch","Route","exact","path","render","Redirect","to","Notification","notification","indexOf","onHandleCheckbox","computeBackground","cardUnread","updatedNotifications","Card_default","CardContent_default","content","align","Tooltip_default","TransitionComponent","Fade","TransitionProps","timeout","placement","Checkbox_default","paddingBottom","NotificationList","List_default","unreadFilter","ListItem_default","notification_Notification","fullList","SearchResults","fetchSuggestions","onSearchProjects","onSearchLists","onSearchCards","getSuggestions","setWrapperRef","handleClickOutside","renderSuggestion","handleClickSuggestion","propTypes","highlightedIndex","PropTypes","number","itemProps","selectedItem","string","suggestion","shape","isRequired","searchInput","isOpen","document","addEventListener","removeEventListener","_ref","isSelected","highlight","style","fontWeight","node","wrapperRef","contains","inputValue","deburr","inputValueLower","inputValueCapitalize","charAt","toUpperCase","slice","inputLength","count","keep","includes","onResetSearchArrays","root","ref","downshift_esm","_ref2","getInputProps","getItemProps","getMenuProps","InputProps","inputRoot","input","inputInput","square","labelSearchTitle","flexGrow","zIndex","opacity","left","right","chip","transition","transitions","breakpoints","up","divider","Navbar","handleProfileMenuOpen","anchorEl","handleMenuClose","handleMobileMenuClose","handleMobileMenuOpen","mobileMoreAnchorEl","toggleDrawer","side","handleFilterChange","handleFilter","handleSearchResultsOpen","showSearchResults","handleSearchResultsClose","goToWaveIt","resultsAnchorEl","filterOnlyUnread","onGetAllNonArchivedNotifications","onUpdateNotifications","onLogOff","_this$state","isMenuOpen","Boolean","isMobileMenuOpen","isSearchResultsOpen","renderMenu","Menu_default","transformOrigin","openedMenu","renderNotifications","Drawer_default","anchor","tabIndex","role","onKeyDown","ChevronLeft_default","notificationList","notification_NotificationList","renderMobileMenu","CalendarToday_default","Badge_default","badgeContent","Notifications_default","coloar","AccountCircle_default","renderSearchResults","searchResults_SearchResults","AppBar_default","Toolbar_default","Link","menuButton","Logo","search","searchIcon","Search_default","grow","sectionDesktop","aria-owns","aria-haspopup","sectionMobile","MoreVert_default","onShowOnlyUnread","borderRadius","fade","&:hover","pointerEvents","justifyContent","textDecoration","openedNotifications","overflowY","filterRow","TransitionGithub","onIsMemberLogged","styles","media","actions","expand","duration","shortest","expandOpen","boxShadow","shadows","clear","marginCard","row","rowRight","float","sizeButtonModal","maxWidth","maxHeight","minHeight","column","buttonIcon","editButton","border","textArea","buttonModal","iconComments","markdown","mdeSize","buttonLabel","heigth","orangeAvatar","fontStyle","littleAvatar","moreIcon","firstRow","scrollContainer","noMargin","deleteIcon","formLabel","addIcon","dialogTitle","textAlign","memberList","memberItem","validIcon","marginSide","ChecklistDialog","handleClose","selectedValue","handleChangeCheckbox","chtState","onUpdateTask","handleCreateTask","querySelector","taskTitle","onCreateTask","handleRemoveTask","onDeleteTask","other","objectWithoutProperties","Dialog_default","aria-labelledby","dialog","DialogTitle_default","List_List_default","marginBottomTop","task","ListItem_ListItem_default","ListItemText_ListItemText_default","IconButton_IconButton_default","icons_index_es","AddCircle_default","ChecklistDialogWrapped","Checklist","handleClickOpen","_this3","LabelDialog","labelId","newCard","onCreateLinkLabel","indexLink","onDeleteLinkLabel","selectedIndex","DialogContent_default","selected","labelColor","LabelDialogWrapped","onGetLabels","ConfirmationDialog","changeStatusArchived","onUpdateCard","handleParentClose","onDeleteCard","keepMounted","core_DialogContent_default","DialogContentText_default","DialogActions_default","MemberOnCard","handleOpenDialog","handleCloseDialog","onRemoveMember","listindex","cardindex","handleChangeNewMember","onGetMembersOnCard","newMemberIndex","_this$props2","onAddMember","_this$props3","activeMembersList","modalWidth","isloading","core_Checkbox_default","otherMembers","FormControl_default","formControl","InputLabel_default","htmlFor","Select_default","inputProps","MenuItem_MenuItem_default","toString","Cardboard","handleOpen","handleChangeTitle","handleChangeDueDate","handleChangeDescription","getInstance","instance","togglePreview","handleEditDueDate","handleValidDueDate","handleCancelDueDate","editDescription","validEditDescription","handleEditTitle","validEditTitle","cardid","currentCard","editDueDate","editTitle","init","onUpdateTitle","onUpdateDate","onUpdateDescription","listen","cardDialog","Dialog_Dialog_default","Label_default","refresh","defaultValue","InputLabelProps","shrink","react_simplemde_editor_lib_default","getMdeInstance","options","autofocus","MembersOnCard","label_LabelDialog","checklist_ChecklistDialog","confirmation_ConfirmationDialog","onGetCard","listElement","react_beautiful_dnd_esm","draggableId","provided","snapshot","draggableProps","dragHandleProps","innerRef","card_Card","wordWrap","whiteSpace","paragraph","memberDialog","SimpleDialog","newTitle","submitted","handleSubmit","multiline","rows","listArea","listHeight","borderTopLeftRadius","borderTopRightRadius","borderRadiusBottom","borderBottomLeftRadius","borderBottomRightRadius","wordBreak","buttonList","dropSpace","textField2","dialogBox","badge","listsGrid","listTitle2","noPadding","TexfieldGrid","cardSlot","whiteText","widthMax","gridList","buttonAddList","listItem","horizontalScrollWrapper","overflowX","ListPrello","newCardTitle","createNewCard","handleClickMenu","handleCloseMenu","handleDeleteList","isOpenDeleteDialog","handleOpenMenu","editListTitle","isOpenAddCardDialog","handleArchivedList","handleCloseDeleteListDialog","handleConfirmDeleteList","cardName","archiveList","confirmDeleteDialog","MenuList","ListItemSecondaryAction_default","PaperProps","ITEM_HEIGHT","disablePadding","droppableId","project_card_Card","placeholder","Add_default","dialog_SimpleDialog","Lists","newListname","createNewList","listName","createListCallback","direction","droppableProps","list_List","ActivityList","activity","MemberDialog","currentmemberid","HaspermissionprojectMember1Fks","onUpdatePermission","handleRemoveFromProject","setAsAdministrator","submitInvitation","core_Divider_default","VisibilityDialog","visibility","prevProps","updateVisibility","onDragEnd","result","source","destination","notArchivedList","archivedList","dragId","Number","parseInt","indexOfList","newArrayList","sourceListId","sourceList","destinationListId","destinationList","draggedCard","notArchivedCardsSource","archivedCardsSource","deleteSourceList","notArchivedCardsDestination","archivedCardsDestination","addDestinationList","sourceListIndex","destinationListIndex","onUpdatePositionCard","newSourceList","openMemberDialog","handleClickOpenVisibility","openVisibilityDialog","handleRestoreArchived","restoreList","editProjectTitle","openActivity","openFilter","openArchived","on","socketUpdateLists","socketUpdateProject","match","currentMemberId","logged","getAllListsWithCards","onGetAllPermissions","hasProject","currentMember","updateTitle","_this$props4","renderActivity","core_Drawer_default","drawer","drawerList","activity_ActivityList","renderArchived","expandPanel","ExpansionPanel_default","ExpansionPanelSummary_default","expandIcon","ExpandMore_default","heading","ExpansionPanelDetails_default","wrap","restoreButton","header","projectHeader","handleValidationEditTitle","dialog_MemberDialog","dialog_VisibilityDialog","dndArea","list_Lists","projectBody","fullHeight","moveList","updateCardsPosition","updateCardPosition","fontFamily","alignText","cusor","cancelIcon","accountConfirmation","goToLogin","TokenVerification","onValidateAccountWithToken","PasswordForgotten","onResetField","onSendNewPassword","paddingText","DashboardFix","goToProject","handleProjectFavorite","isPublic","onFindAllProjectsMember","onCreateProject","onSetProjectAsFavorite","createProjectDialog","dialogCreation","projectList","maxWidth2","projectArea","Paper_Paper_default","personalBtn","FolderOpen_default","addFavoriteButtonIcon","StarBorder_default","favoriteList","favorite","favoriteBtn","Star_default","creationButton","mainContainer","overflow","background","favoriteButtonIcon","projectContainer","light","titleBar","projectContent","Download","marginBottomXs","goToLink","download","downloadPicture","leavePage","App","LoginContainer","AccountConfirmation","LoaderPageContainer","DefaultContainer","navbar_Navbar","routesAuthorization","es","store","components_App","getElementById"],"mappings":"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","file":"static/js/main.f8899e58.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg-singin.b181f506.png\";","module.exports = __webpack_public_path__ + \"static/media/download-picture.0c0e7e11.png\";","module.exports = __webpack_public_path__ + \"static/media/prello-logo-2.2fc2e951.png\";","const Request = {\n\n    /*\n     *  Return : url based on keys and values of the object (?idKey=idValue&titleKey=titleValue...)\n     */\n    urlFromObject (object) {\n        if (object) {\n            let keys = Object.keys(object)\n            let values = Object.values(object)\n            let url = '?'\n            for (let i = 0; i < keys.length; i++) {\n                url += keys[i] + '=' + values[i]\n                if (i < keys.length - 1) url += '&'\n            }\n            return url\n        }\n        else return ''\n    }\n\n}\n\nexport default Request","import { createBrowserHistory } from 'history';\n\nconst History = createBrowserHistory();\n\nexport default History","const method = {\n    copy (o) {\n        return JSON.parse( JSON.stringify( o ) )\n    },\n\n    isTypeEmail (str) {\n        try {\n            let strSplit = str.split('@')\n            let strAfterA = strSplit[1].split('.')\n            let strEnd = str.split('.')\n\n            return (strSplit.length === 2 && strAfterA.length === 2 && strEnd.length > 1)\n        } catch (err) {\n            return false\n        }\n    },\n\n    computeListOrder (lists) {\n        let listsOrder = []\n        let index = 0\n        for (let l of lists) {\n            //let element = { listId: l.listId, listFather: -1 }\n            let element = { listId: l.listId, listFather: index }\n\n            /*if (index === 0) element.listFather = null\n            else element.listFather = lists[index - 1].listId*/\n\n            listsOrder.push(element)\n            index += 1\n        }\n        return listsOrder\n    },\n\n    computeCardOrder (lists) {\n        let cardsOrder = []\n        let index = 0\n        for (let l of lists) {\n            for (let c of l.CardListFks) {\n                let element = { cardId: c.cardId, cardFather: index }\n\n                /*let element = { cardId: c.cardId, cardFather: null }\n                if (index > 0) element.cardFather = l.CardListFks[index - 1].cardId\n                */\n                cardsOrder.push(element)\n                index += 1\n            }\n            index = 0//\n        }\n        return cardsOrder\n    }\n}\n\n\nexport default method","import axios from 'axios';\n\n// axios.defaults.headers.common['Authorization'] = localStorage.getItem('memberToken')\n\nconst BASE_URL = 'https://prello-ig.herokuapp.com/api/'\nconst SOCKET_URL = \"https://prello-ig.herokuapp.com\"\n\n/*\nWhy use Api instead of axios\napi use axios but it is centralised therefore the server url is set only one time and\nwe only need to change the BASE_URL if we want to change the server\n */\n\nconst apiMethods = {\n    BASE_URL,\n    SOCKET_URL,\n    headers: {\n        Authorization: localStorage.getItem('memberToken')\n    },\n    get (url, token = localStorage.getItem('memberToken')) {\n        axios.defaults.headers.common['Authorization'] = token\n        return axios.get(BASE_URL + url)\n    },\n\n    post (url, payload, token = localStorage.getItem('memberToken')) {\n        axios.defaults.headers.common['Authorization'] = token\n        return axios.post(BASE_URL + url, payload)\n    },\n\n    put (url, payload, token = localStorage.getItem('memberToken')) {\n        axios.defaults.headers.common['Authorization'] = token\n        return axios.put(BASE_URL + url, payload)\n    },\n\n    delete (url, token = localStorage.getItem('memberToken')) {\n        axios.defaults.headers.common['Authorization'] = token\n        return axios.delete(BASE_URL + url)\n    },\n}\n\nexport default apiMethods\n","import helper from '../helpers'\nimport Api from './Api'\n\n// axios.defaults.headers.common['Authorization'] = localStorage.getItem('memberToken')\n\nconst url = 'action/'\n\nconst Action = {\n\n    getAll (object) {\n        let where = helper.Request.urlFromObject(object)\n        return Api.get(url + 'find_all' + where).then(res => res.data)\n    },\n\n    get (object) {\n        let where = helper.Request.urlFromObject(object)\n        return Api.get(url + 'find_one' + where).then(res => res.data)\n    },\n\n    getNonArchived () {\n        return Api.get(url + 'find_all_unarchived').then(res => res.data)\n    },\n\n    updateMultiple (array) {\n        let body = {memberHasAction: array}\n        return Api.put(url + 'update_multiple', body).then(res => res.data)\n        //return axios.put(url + 'update/' + array[0].actionId, array[0]).then(res => res.data)\n    },\n\n    /** Generate project activity for all members of an array */\n    createActivityForAllMembers (body) {\n        let where = helper.Request.urlFromObject({projectId: body.projectId})\n        return Api.post(url + 'create_mha_from_array' + where, body).then(res => res.data)\n    }\n\n}\n\nexport default Action","// import axios from 'axios';\nimport helper from '../helpers'\n// axios.defaults.headers.common['Authorization'] = localStorage.getItem('memberToken')\nimport Api from './Api'\n\nconst url = 'card/'\n\nconst Card = {\n\n    getAll () {\n        return Api.get(url + 'find_all').then(res => res.data)\n    },\n\n    get (object) {\n        let where = helper.Request.urlFromObject(object)\n        return Api.get(url + 'find_one' + where).then(res => res.data)\n    },\n\n    create(body){\n        return Api.post(url + 'create', body).then(res => res.data)\n    },\n\n    createLinkLabel(body){\n        return Api.post(url + 'create_card_has_label', body).then(res => res.data)\n    },\n\n    deleteLinkLabel(query) {\n        let where = helper.Request.urlFromObject(query)\n        return Api.delete(url + 'delete_card_has_label' + where).then(res => res.data)\n    },\n\n    update(cardId,body){\n        return Api.put(url + 'update/'+cardId ,body).then(res => res.data)\n    },\n\n    searchbarCards (str) {\n        let where = helper.Request.urlFromObject(str)\n        return Api.get(url + 'find_all_searchbar' + where).then(res => res.data)\n    },\n\n    delete(query) {\n        let where = helper.Request.urlFromObject(query)\n        return Api.delete(url + 'delete' + where).then(res => res.data)\n    },\n\n    findAllMembers (query) {\n        let where = helper.Request.urlFromObject(query)\n        return Api.get(url + 'find_all_members' + where).then(res => res.data)\n    },\n\n    addMember(body) {\n        return Api.post(url + 'create_member_has_card', body).then(res => res.data)\n    },\n\n    removeMember(query) {\n        let where = helper.Request.urlFromObject(query)\n        return Api.delete(url + 'delete_member_has_card' + where).then(res => res.data)\n    },\n\n    updateCardOrder (cardsOrder) {\n        return Api.put(url + 'update_card_order', {cards: cardsOrder}).then(res => res.data)\n    }\n\n}\n\nexport default Card","// import axios from 'axios';\nimport helper from '../helpers'\n// axios.defaults.headers.common['Authorization'] = localStorage.getItem('memberToken')\nimport Api from './Api'\n\nconst url = 'list/'\n\nconst List = {\n\n\n    getAll (idProject) {\n        return Api.get(url + 'find_all/'+ idProject).then(res => res.data)\n    },\n\n\n    get (object) {\n        let where = helper.Request.urlFromObject(object)\n        return Api.get(url + 'find_one/1' + where).then(res => res.data)\n    },\n\n    create(body){\n\n        return Api.post(url + 'create', body).then(res => res.data)\n    },\n\n    update(listId,body){\n        return Api.put(url + 'update/'+listId, body).then(res => res.data)\n    },\n\n    delete(listId){\n        return Api.delete(url + 'delete/'+listId).then(res => res.data)\n    },\n\n    searchbarLists (str) {\n        let where = helper.Request.urlFromObject(str)\n        return Api.get(url + 'find_all_searchbar' + where).then(res => res.data)\n    },\n\n    updateListOrder (listsOrder) {\n        return Api.put(url + 'update_list_order', {lists: listsOrder}).then(res => res.data)\n    }\n\n}\n\nexport default List","// import axios from 'axios';\nimport helper from \"../helpers\";\nimport Api from './Api'\nimport axios from 'axios';\n\nconst url = 'member/'\n// axios.defaults.headers.common['Authorization'] = localStorage.getItem('memberToken')\n\nconst Member = {\n\n    createIfNotExist (body) {\n        let where = helper.Request.urlFromObject({ memberEmail: body.memberEmail })\n        return Api.post(url + 'create_if_not_exist' + where, body).then(res => res.data)\n    },\n\n    signIn (body) {\n        return Api.post(url + 'sign_in', body).then(res => res.data)\n    },\n\n    signInWithGithub () {\n        return Api.get(url + 'sign_in_with_github').then(res => res.data)\n    },\n\n    signUp (body) {\n        let where = helper.Request.urlFromObject({\n            memberEmail: body.memberEmail,\n            memberPseudo: body.memberPseudo\n        })\n        return Api.post(url + 'sign_up' + where, body).then(res => res.data)\n    },\n\n    updateMemberInvitation (body) {\n        return Api.put(url + 'update_sign_up?memberEmail=' + body.memberEmail, body).then(res => res.data)\n    },\n\n    /* Set the status of a member to 1 if the token is valid */\n    validateAccount (memberToken) {\n        return Api.put(url + 'validate_account',null , memberToken).then(res => res.data)\n    },\n\n    /* Retrieve member's token and check if he is connected are not */\n    isLogged () {\n        const memberToken = localStorage.getItem('memberToken')\n\n        if (memberToken) {\n            // eslint-disable-next-line\n            return Api.get(url + 'is_logged' + '?memberToken=' + memberToken)\n                .then(res => {\n                    return {\n                        member: res.data.member,\n                        isLogged: true\n                    }\n                })\n                .catch(err => {\n                    localStorage.removeItem('memberToken')\n                    return { isLogged: false }\n                })\n        } else {\n            return { isLogged: false }\n        }\n    },\n\n    get (object) {\n        let where = helper.Request.urlFromObject(object)\n        return Api.get(url + 'find_one' + where).then(res => res.data)\n    },\n\n    update (body) {\n        let where = helper.Request.urlFromObject({memberId: body.memberId})\n        return Api.put(url + 'update' + where, body).then(res => res.data)\n    },\n\n    updatePassword (attributes) {\n        let where = helper.Request.urlFromObject({memberId: attributes.memberId, memberPassword: attributes.memberPassword})\n        let body = {\n            memberPassword: attributes.newMemberPassword\n        }\n        return Api.put(url + 'update_password' + where, body).then(res => res.data)\n    },\n\n    /* Send a random new password when a member forgot his password */\n    sendNewPassword (memberEmail) {\n        let body = {\n            memberEmail: memberEmail\n        }\n        return Api.post(url + 'password_forgotten', body).then(res => res.data)\n    },\n\n    /** ==================== INVITATIONS ==================== */\n\n    /** Check if the token contains a member that exist */\n    decrpytInvitation (memberToken) {\n        return Api.get(url + 'decrypt_invitation', memberToken).then(res => res.data)\n    },\n\n    getInvitation (object) {\n        let where = helper.Request.urlFromObject(object)\n        return Api.get(url + 'find_one_invitation' + where).then(res => res.data)\n    },\n\n    updateInvitation (body, query) {\n        let where = helper.Request.urlFromObject(query)\n        return Api.put(url + 'update_invitation' + where, body).then(res => res.data)\n    },\n\n    deleteInvitation (query) {\n        let where = helper.Request.urlFromObject(query)\n        return Api.delete(url + 'delete_invitation' + where).then(res => res.data)\n    },\n\n    /** ==================== CLOUDINARY ==================== */\n    updateProfilePicture (body, query) {\n        axios.defaults.headers.common['Authorization'] = localStorage.getItem('memberToken')\n        axios.defaults.headers.common['Content-Type'] = 'multipart/form-data'\n        let where = helper.Request.urlFromObject({memberId: query})\n        return axios.put(Api.BASE_URL + url + 'update_picture' + where, body).then(res => res.data)\n    },\n}\n\nexport default Member","import helper from '../helpers'\nimport Api from './Api'\n\nconst url = 'permission/';\n\nconst Action = {\n\n    createMemberProjectPermission (memberId, projectId, permissionId, mhppState) {\n        let payload = {\n            memberId, projectId, permissionId, mhppState\n        };\n        return Api.post(url + 'create_for_project', payload).then(r => r.data)\n    },\n    \n    /** get the permissions of the member on the project\n     *\n     *  object = { projectId: id }\n     */\n    getAllOnProject (object) {\n        let where = helper.Request.urlFromObject(object)\n        return Api.get(url + 'find_all_for_project' + where).then(res => res.data)\n    },\n\n    updateOnProject (object, body) {\n        let where = helper.Request.urlFromObject(object)\n        return Api.put(url + 'update_for_project' + where, body).then(res => res.data)\n    },\n\n    deleteForMemberOnProject (object) {\n        let where = helper.Request.urlFromObject(object)\n        return Api.delete(url + 'delete_for_project' + where).then(res => res.data)\n    }\n\n\n}\n\nexport default Action","//import axios from 'axios';\nimport helper from '../helpers'\n//axios.defaults.headers.common['Authorization'] = localStorage.getItem('memberToken')\nimport Api from './Api'\n\nconst url = 'project/'\n\nconst Project = {\n\n    getAll () {\n        return Api.get(url + 'find_all').then(res => res.data)\n    },\n\n    getAllProjectsForMember (query) {\n        let where = helper.Request.urlFromObject(query)\n        return Api.get(url + 'find_all_projects_member' + where).then(res => res.data)\n    },\n\n    getAllWithCards (object) {\n        let where = helper.Request.urlFromObject(object)\n        return Api.get(url + 'find_all_lists_cards' +where).then(res => res.data)\n    },\n\n    getAllProjectsMember (member_id) { // get all member that member is involved in\n        return Api.get(url + 'find_all_member/' + member_id).then(res => res.data).catch(e => e.error)\n    },\n\n    /** Use for project component */\n    getAllMembers(object){\n        let where = helper.Request.urlFromObject(object)\n        return Api.get(url + 'find_all_members' + where).then(res => res.data)\n    },\n\n    getAllActions(object){\n        let where = helper.Request.urlFromObject(object)\n\n        return Api.get(url + 'find_all_actions' + where).then(res => res.data)\n    },\n\n    get (object) {\n        let where = helper.Request.urlFromObject(object)\n        return Api.get(url + 'find_one' + where).then(res => res.data)\n    },\n\n    getOne (projectId) {\n        return Api.get(url + 'find_one/' +projectId).then(res => res.data)\n    },\n\n    update(projectId,body){\n        return Api.put(url + 'update/' + projectId, body).then(res => res.data)\n    },\n\n    createProject (projectTitle, projectVisibility, projectStatus = 0, projectDateTarget = null) {\n        let payload = {\n            projectTitle, projectVisibility, projectStatus, projectDateTarget\n        }\n\n        return Api.post(url + 'create', payload).then(res => res.data)\n    },\n\n    createMemberHasProject (memberId, projectId, memberhasprojectStatus, projectIsFavorite = false) {\n        let payload = {\n            memberId, projectId, memberhasprojectStatus, projectIsFavorite\n        }\n        return Api.post(url + 'createMemberHasProject', payload).then(res => res.data)\n    },\n\n    updateMemberHasProject (params) {\n      return Api.put(`${url}update_memberhasProject${helper.Request.urlFromObject(params)}`).then(res => res.data)\n    },\n\n    searchbarProjects (str) {\n        let where = helper.Request.urlFromObject(str)\n        return Api.get(url + 'find_all_searchbar' + where).then(res => res.data)\n    },\n    getMemberHasProject(object){\n        let where = helper.Request.urlFromObject(object)\n        return Api.get(url + 'member_has_project' + where).then(res => res.data)\n    },\n\n    getLabels(){\n        /**\n         * return all labels for a specific project\n         */\n    },\n\n    sendInvitation(object){\n        //let where = helper.Request.urlFromObject(object)\n       /**\n        * object = {\n            * memberId :..\n            * memberEmail:...\n            * projectId: ...\n        * }\n        */\n\n        /**\n        * send an invitation to user to join the project (user exist in DB)\n        * -> we create a row in the table memberhasproject with status = 0 (in validation) \n        * -> we send an email with a link to update his status = 1 (accepted to join) \n        */\n\n    },  \n    createAndSendInvitation(body){\n        /**\n        * object = {\n            * memberEmail:...\n            * projectId: ...\n        * }\n        */\n\n        /** email doesnt exist in DB so we have to :\n         * Create an account with the specified email and send an email invitation to user to join the project\n         * -> we create an account \n         * -> we create a row in the table memberhasproject with status = 0 (in validation)\n         * -> we send an email with a link to update his password and information and update his status = 1 (accepted to join)\n         */\n        return Api.post(url + 'create_invitation', body).then(res => res.data)\n    },\n    getMemberStatus(object){\n        /**\n         * object = {\n            * memberId: ..\n            * projectId: ...\n         * } \n         */\n\n        /***Return the status for a member of a specific project:\n         * True if he is admin of this project, else false\n         */\n        let where = helper.Request.urlFromObject(object)\n        return Api.get(url + 'member_is_admin' + where).then(res => res.data)\n    },\n\n    createProjectForMember(body){\n         return Api.post(url + 'create_mhp', body).then(res => res.data)\n    },\n\n    createProjectFix(body){\n        return Api.post(url + 'create', body).then(res => res.data)\n    },\n\n    updateFix (query, body) {\n        let where = helper.Request.urlFromObject(query)\n        return Api.put(url + 'update_mhp' + where, body).then(res => res.data)\n    },\n\n    getActivity(projectId){\n        /**\n         * Return all activities related to this project \n         * in the DB -> Table \"action\"\n         */\n    }\n}\n\nexport default Project","// import axios from 'axios';\nimport helper from '../helpers'\n// axios.defaults.headers.common['Authorization'] = localStorage.getItem('memberToken')\nimport Api from './Api'\n\nconst url = 'team/'\n\nconst Team = {\n\n    getAll (memberId = null) {\n        // if there is no parameter memberId select all team\n        // otherwise return all team that the member is involved in\n        if (!memberId ||memberId == null)\n            return Api.get(url + 'find_all').then(res => res.data);\n        else\n            return Api.get(url + 'find_all/' + memberId).then(res => res.data)\n\n    },\n\n    get (object) {\n        let where = helper.Request.urlFromObject(object)\n        return Api.get(url + 'find_one' + where).then(res => res.data)\n    },\n\n    create(body){\n        return Api.post(url + 'create', body).then(res => res.data)\n    },\n\n    update(teamId, body){\n        return Api.put(url + 'update/' + teamId, body).then(res => res.data)\n    },\n\n\n\n}\n\nexport default Team","// import axios from 'axios';\nimport helper from '../helpers'\n// axios.defaults.headers.common['Authorization'] = localStorage.getItem('memberToken')\nimport Api from './Api'\n\nconst url = 'task/'\n\nconst Task = {\n\n    create(body){\n        return Api.post(url + 'create', body).then(res => res.data)\n    },\n\n    update(query, body){\n        let where = helper.Request.urlFromObject(query)\n        return Api.put(url + 'update' + where, body).then(res => res.data)\n    },\n\n    delete(query) {\n        let where = helper.Request.urlFromObject(query)\n        return Api.delete(url + 'delete' + where).then(res => res.data)\n    }\n\n}\n\nexport default Task","// import axios from 'axios';\nimport helper from '../helpers'\n// axios.defaults.headers.common['Authorization'] = localStorage.getItem('memberToken')\nimport Api from './Api'\n\nconst url = 'label/'\n\nconst Label = {\n\n    getAll (query) {\n        let where = helper.Request.urlFromObject(query)\n        return Api.get(url + 'find_all' + where).then(res => res.data)\n    }\n\n}\n\nexport default Label","import Action from './Action.service';\nimport Api from './Api'\nimport Card from './Card.service';\nimport List from './List.service';\nimport Member from './Member.service';\nimport Permission from './Permission.service';\nimport Project from './Project.service';\nimport Team from './Team.service';\nimport Task from './Task.service';\nimport Label from './Label.service'\n//import Comments from './Comments.service'\n// TODO Push comment service\n\nconst service = {\n    Api,\n    Action,\n    Card,\n    List,\n    Member,\n    Permission,\n    Project,\n    Team,\n    Task,\n    Label,\n    //Comments\n}\n\nexport default service","import _service from '../services'\nimport _helper from '../helpers'\nimport moment from \"moment\";\n\nconst labels = {\n    LOAD_DASHBOARD: \"LOAD_DASHBOARD\",\n    SELECT_PROJECT: 'project:select_one',\n    FIND_ONE_PROJECT: 'project:find_one',\n    RECEIVE_PROJECT: 'project:received',\n    SELECT_ALL_PROJECT: 'project:select_all', // at the begin\n    SELECT_ALL_PROJECT_MEMBER: 'project:select_all_project_member',\n    SELECT_ALL_TEAM_MEMBER: 'project:select_all_team_member',\n    CREATE_NEW_PROJECT: 'project:create_new',\n    UPDATE_MEMBER_HAS_PROJECT: 'project:update_member_has_project',\n    DASHBOARD_ACTION_ERROR: 'project:dashboard_error',\n    DASHBOARD_HIDE_ERROR_MSG: 'project:hide_error_msg' // to hide the error message\n}\n\n/**Find one project\n * \n */\nconst findOneProject = () => ({\n    type: labels.FIND_ONE_PROJECT,\n})\n\n/** Receive a project\n * @param json a project object\n */\nconst receivedProject = json => ({\n    type: labels.RECEIVE_PROJECT,\n    payload: json.project,\n})\n\n/** Fetch a project\n * @param attributes project attributes\n */\nfunction fetchProject(attributes) {\n    return (dispatch) => {\n\n        dispatch(findOneProject())\n\n        _service.Project.get(attributes)\n            .then(res => {\n                dispatch(receivedProject({project: res}));\n            })\n            .catch((err) => {\n                console.log('Error : ', err)\n            });\n    };\n}\n\n/** Get all project of a member\n * @param member_id member id\n */\nfunction getAllProjectsMember (member_id) {\n    return dispatch => {\n        dispatch({\n            type: labels.LOAD_DASHBOARD\n        })\n        _service.Project.getAllProjectsMember(member_id)\n            .then(projects => {\n                dispatch({\n                    type: labels.SELECT_ALL_PROJECT_MEMBER,\n                    payload: projects\n                })\n            })\n            .catch (e => {\n                console.log(e)\n                dispatch({\n                    type: labels.DASHBOARD_ACTION_ERROR,\n                    errorMsg: 'We can\\'t load your project for the moment, please try later or contact an administrator.'\n                })\n            })\n    }\n}\n\n/** Get all team of a member\n * @param member_id member id\n */\nfunction getAllTeams(member_id) {\n    return dispatch => {\n        _service.Team.getAll(member_id).then(teams => {\n            dispatch({\n                type: labels.SELECT_ALL_TEAM_MEMBER,\n                payload: teams\n            })\n        }).catch( () => dispatch({\n            type: labels.DASHBOARD_ACTION_ERROR,\n            errorMsg: 'Impossible to load your team for the moment. Please try later or contact an administrator.'\n        }))\n    }\n}\n\n/** Update status of a member project\n * @param projectId project id\n * @param memberId member id\n * @param projectIsFavorite \n */\nfunction updateMemberHasProject (projectId, memberId, projectIsFavorite) {\n    let dataObject = {\n        projectId, memberId, projectIsFavorite\n    }\n\n    return dispatch => _service.Project.updateMemberHasProject(dataObject)\n        .then(id => {\n            dispatch({\n                type: labels.UPDATE_MEMBER_HAS_PROJECT,\n                payload: {\n                    projectId, projectIsFavorite\n                }\n            })\n        })\n        .catch (e => {\n            dispatch({\n                type: labels.DASHBOARD_ACTION_ERROR,\n                errorMsg: 'impossible to execute this action'\n            })\n        })\n}\n\n/** Create a project\n * @param projectTitle new project title\n * @param projectVisibility visibility set on the new project\n * @param projectStatus status of the new project\n * @param projectDateTarget target date of the new project\n * @param memberId member id \n * @param memberhasprojectStatus \n * @param member\n */\nfunction createProject (projectTitle, projectVisibility, projectStatus = 0, projectDateTarget,\n                        memberId, memberhasprojectStatus = 0, member) {\n\n    return dispatch => _service.Project.createProject( projectTitle, projectVisibility, projectStatus, projectDateTarget)\n        .then(project => {\n            const projectId = project.projectId\n\n            _service.Project.createMemberHasProject(memberId, projectId, memberhasprojectStatus)\n                .then( () => {\n                    let project = {\n                        projectId,\n                        projectTitle,\n                        projectVisibility,\n                        projectStatus,\n                        projectDateTarget\n                    }\n\n\n                    /*\n                        permissionId = 3 because this member is the admin of the project\n                     */\n                    let permissionId = 3\n                    let mhppState = true\n                    _service.Permission\n                        .createMemberProjectPermission(memberId, projectId, permissionId, mhppState)\n                        .then(permission => {\n\n                            _service.Action.createActivityForAllMembers({\n                                actionType: 0,\n                                actionTitle: \"Project was created\",\n                                actionDescription: member.memberPseudo + \" has create the project '\" + projectTitle + \"'.\",\n                                memberId: memberId,\n                                projectId: projectId,\n                                actionDateCreation: moment(),\n                                mhaStatus: 0\n                            })\n                                .then(res => {\n                                    dispatch({\n                                        type: labels.CREATE_NEW_PROJECT,\n                                        payload: project\n                                    })\n                                    _helper.History.push('/project/' + projectId)\n                                })\n                                .catch(err => {\n                                    console.log(err)\n                                })\n\n\n                        })\n\n                })\n    }).catch (e => {\n            dispatch({\n                type: labels.DASHBOARD_ACTION_ERROR,\n                errorMsg: 'The project wasn`t able to be created. Please try later or contact an administrator.'\n            })\n        })\n}\n\n/**\n * Hide error message\n */\nfunction hideErrorMessage() {\n    return dispatch => dispatch({\n        type: labels.DASHBOARD_HIDE_ERROR_MSG\n    })\n}\n\nexport const dashboardAction = {\n    labels,\n    fetchProject,\n    getAllProjectsMember,\n    createProject,\n    updateMemberHasProject,\n    hideErrorMessage,\n    getAllTeams\n}","import { dashboardAction } from '../actions/Dashboard.action';\nimport Helper from '../helpers'\n\nconst labels = dashboardAction.labels\n\nconst initialState = {\n    /*project: {\n        projectTitle: 'Hello Moto'\n    },*/\n    projects: [],\n    teams: []\n};\n\nexport function dashboard (state = initialState, action) {\n    switch (action.type) {\n        case labels.LOAD_DASHBOARD:\n            return { ...state, isLoading: true, errorMsg: '' };\n\n        case labels.SELECT_PROJECT:\n            return { ...state, project: action.project, errorMsg: '' };\n\n        case labels.FIND_ONE_PROJECT:\n            return { ...state, loading: true, errorMsg:'' };\n\n        case labels.RECEIVE_PROJECT:\n            return { ...state, project: action.json, loading: false, errorMsg:'' };\n\n        case labels.SELECT_ALL_PROJECT_MEMBER:\n            return { ...state, projects:action.payload, errorMsg: '', isLoading: false };\n\n        case labels.SELECT_ALL_TEAM_MEMBER:\n            return { ...state, teams:action.payload, errorMsg: '' };\n\n        case labels.UPDATE_MEMBER_HAS_PROJECT:\n            let newProjects = Helper.Method.copy(state.projects)\n            //let found = false\n\n            for (let i =0; i < newProjects.length; i++) {\n                if (action.payload.projectId === newProjects[i].projectId) {\n                    //found = true\n                    newProjects[i].projectIsFavorite = action.payload.projectIsFavorite\n                }\n            }\n            return { ...state, projects:newProjects, errorMsg:'' };\n\n        case labels.CREATE_NEW_PROJECT:\n            return state // TODO\n\n        case labels.DASHBOARD_ACTION_ERROR:\n            return {...state, errorMsg: action.errorMsg}\n\n        case labels.DASHBOARD_HIDE_ERROR_MSG:\n            return { ...state, errorMsg:'' }\n        default:\n            return state\n    }\n};\n","import _service from '../services'\nimport _helper from '../helpers';\n\nconst labels = {\n    LOGIN : \"LOGIN\",\n    ERROR : \"ERROR\",\n    CREATE_USER : \"CREATE_USER\",\n    IS_LOGGED: \"IS_LOGGED\",\n    IS_NOT_LOGGED: \"IS_NOT_LOGGED\",\n    NEW_PASSWORD_SENT: \"NEW_PASSWORD_SENT\",\n    NEW_PASSWORD_FAILED: \"NEW_PASSWORD_FAILED\",\n    RESET_FIELD: \"RESET_FIELD\"\n}\n\nconst signSuccess = member => ({\n    type: labels.LOGIN,\n    payload: {\n        member: member\n    }\n})\n\nconst signError = {\n    type: labels.ERROR,\n    payload: \"Email or password is incorrect.\",\n}\n\nfunction signin (memberEmail, memberPassword, redirection) {\n    const body = {\n        memberEmail: memberEmail,\n        memberPassword: memberPassword\n    }\n\n\n\n    return dispatch => {\n        _service.Member.signIn(body)\n            .then(res => {\n                localStorage.setItem('memberToken', res.memberToken)\n                dispatch(signSuccess(res));\n                if (redirection) _helper.History.push(redirection);\n            })\n            .catch((err) => {\n                dispatch(signError)\n            });\n    }\n}\n\nfunction isMemberLogged () {\n    return (dispatch) => {\n        var memberToken = localStorage.getItem('memberToken')\n        if (memberToken) {\n            _service.Member.isLogged()\n                .then(res => {\n                    dispatch({\n                        type: labels.IS_LOGGED,\n                        payload: res\n                    })\n                })\n        } else {\n            dispatch({\n                type: labels.IS_NOT_LOGGED,\n                payload: { isLogged: false }\n            })\n        }\n    }\n}\n\nfunction isMemberLoggedGithub () {\n    return (dispatch) => {\n        var memberToken = localStorage.getItem('memberToken')\n        if (memberToken) {\n            _service.Member.isLogged()\n                .then(res => {\n                    dispatch({\n                        type: labels.IS_LOGGED,\n                        payload: res\n                    })\n                    _helper.History.push('/home')\n                })\n        } else {\n            dispatch({\n                type: labels.IS_NOT_LOGGED,\n                payload: { isLogged: false }\n            })\n            _helper.History.push('/home')\n        }\n    }\n}\n\nfunction sendNewPassword (memberEmail) {\n    return dispatch => {\n        _service.Member.sendNewPassword(memberEmail)\n            .then(res => {\n                dispatch({\n                    type: labels.NEW_PASSWORD_SENT\n                });\n            })\n            .catch((err) => {\n                dispatch({\n                    type: labels.NEW_PASSWORD_FAILED\n                })\n            });\n    }\n}\n\nfunction resetField () {\n    return dispatch => {\n        dispatch({\n            type: labels.RESET_FIELD\n\n        })\n    }\n}\n\nfunction signinWithGithub () {\n    return dispatch => {\n\n        _service.Member.signInWithGithub()\n            .then(res => {\n                //localStorage.setItem('memberToken', res.token)\n                //_helper.History.push('/home');\n                window.location.assign(res)\n            })\n            .catch((err) => {\n                dispatch(signError)\n            });\n\n    }\n}\n\nfunction confirmSigninGithub (memberEmail, token) {\n    const body={\n        memberEmail: memberEmail,\n        //memberToken: token,\n    }\n    localStorage.setItem('memberToken', token)\n    return dispatch => {\n        _service.Member.get(body)\n            .then(res => {\n                console.log(\"res get \\n\", res);\n\n                _helper.History.push('/home');\n                dispatch(signSuccess(res));\n            })\n            .catch((err) => {\n                dispatch(signError)\n            });\n    }\n\n}\n\nexport const signinAction = {\n    labels,\n    signin,\n    signinWithGithub,\n    confirmSigninGithub,\n    isMemberLoggedGithub,\n    isMemberLogged,\n    sendNewPassword,\n    resetField\n}","import _service from '../services'\nimport _helper from '../helpers';\n\nconst labels = {\n    //LOGIN : \"LOGIN\",\n    LOAD_SIGNUP: \"LOAD_SIGNUP\",\n    LOAD_INVITATION: \"LOAD_INVITATION\",\n    SIGN_UP : \"SIGN_UP\",\n    SIGN_UP_ERROR : \"SIGN_UP_ERROR\",\n    CREATE_USER : \"CREATE_USER\",\n    LOADING: \"LOADING\",\n    VALIDATE_ACCOUNT_TOKEN: \"VALIDATE_ACCOUNT_TOKEN\",\n    VALIDATE_ACCOUNT_TOKEN_ERROR: \"VALIDATE_ACCOUNT_TOKEN_ERROR\",\n    INVITATION_ACCEPTED: \"INVITATION_ACCEPTED\",\n    INVITATION_ACCEPTED_ERROR: \"INVITATION_ACCEPTED\"\n}\n\nconst signSuccess = token => ({\n    type: labels.SIGN_UP,\n    payload: token,\n})\n\nconst signError = msg => ({\n    type: labels.SIGN_UP_ERROR,\n    payload: msg || ['Failed to create the account.', ''],\n})\n\nfunction signup (body, isDirectlyValidate) {\n    return dispatch => {\n        dispatch({\n            type: labels.LOAD_INVITATION\n        })\n        let checking = checkSignupFields(body)\n        if (checking.isFieldsOk) {\n            let finalBody = Object.assign({memberStatus: 0}, body)\n\n            if (isDirectlyValidate) {\n                // A new member answered to an invitation\n                finalBody.memberStatus = 1\n                console.log(finalBody)\n                _service.Member.updateMemberInvitation(finalBody)\n                    .then(res => {\n                        dispatch({\n                            type: labels.INVITATION_ACCEPTED,\n                            payload: {member: res}\n                        });\n                    })\n                    .catch((err) => {\n                        dispatch(signError(err.response.data))\n                    });\n            } else {\n                _service.Member.signUp(finalBody)\n                    .then(res => {\n                        dispatch(signSuccess(res));\n                        _helper.History.push('/home');\n                    })\n                    .catch((err) => {\n                        dispatch(signError(err.response.data))\n                    });\n            }\n        } else {\n            console.log(checking.payload)\n            dispatch(signError(checking.payload))\n        }\n    }\n}\n\nfunction checkSignupFields (fields) {\n    let isEmpty = false\n    for (let field of Object.values(fields)) {\n        if (field === '') isEmpty = true\n    }\n    if (isEmpty) {\n        return { isFieldsOk: false, payload: [\"Some required fields are empty.\", \"all\"] }\n    }\n    else if (fields.memberPassword.length < 6) {\n        return { isFieldsOk: false, payload: [\"Password should be at least 6 characters.\", \"memberPassword\"] }\n    } else if (fields.memberPassword !== fields.memberCheckPassword) {\n        return {isFieldsOk: false, payload: [\"Password confirmation failed.\", \"memberCheckPassword\"]}\n    } else {\n        return { isFieldsOk: true }\n    }\n}\n\nfunction validateAccountWithToken (memberToken) {\n    return dispatch => {\n        _service.Member.validateAccount(memberToken)\n            .then(res => {\n                dispatch({\n                    type: labels.VALIDATE_ACCOUNT_TOKEN\n                });\n                _helper.History.push('/account-confirmation');\n            })\n            .catch((err) => {\n                _helper.History.push('/login');\n                dispatch({\n                    type: labels.VALIDATE_ACCOUNT_TOKEN_ERROR\n                })\n            });\n    }\n}\n\nexport const signupAction = {\n    labels,\n    signup,\n    validateAccountWithToken\n}","import _helper from '../helpers';\nimport _service from \"../services\";\n\nconst labels = {\n    LOG_OFF : \"LOG_OFF\",\n    GET_ALL_NOTIFICATIONS: \"GET_ALL_NOTIFICATIONS\",\n    GET_ALL_NOTIFICATIONS_ERROR: \"GET_ALL_NOTIFICATIONS_ERROR\",\n    UPDATE_NOTIFICATION: \"UPDATE_NOTIFICATION\",\n    UPDATE_NOTIFICATIONS__DB_ERROR: \"UPDATE_NOTIFICATIONS_DB_ERROR\",\n    UPDATE_NOTIFICATIONS_DB: \"UPDATE_NOTIFICATIONS_DB\",\n\n}\n\n/** Logg off, remove token from local storage\n * \n */\nfunction logOff () {\n    localStorage.removeItem('memberToken')\n    _helper.History.push('/')\n    return dispatch => {\n        dispatch({\n            type: labels.LOG_OFF\n        });\n    }\n}\n\n/* =============== NOTIFICATIONS =============== */\n/** Get all non archived notifications \n * \n */\nfunction getAllNonArchivedNotifications () {\n    return dispatch => {\n        _service.Action.getNonArchived()\n            .then(res => {\n                dispatch({\n                    type: labels.GET_ALL_NOTIFICATIONS,\n                    payload: res\n                });\n            })\n            .catch((err) => {\n                dispatch({\n                    type: labels.GET_ALL_NOTIFICATIONS_ERROR\n                })\n            });\n    }\n}\n\n/** Change the state of the checkbox locally */\nfunction handleCheckboxNotification (notifications, newNotification, index, isRead, nbUnread) {\n    return dispatch => {\n        var res;\n        notifications[index] = newNotification\n        if (isRead) {\n            res = {\n                notifications: notifications,\n                notificationsUnread: nbUnread -= 1\n            }\n        } else {\n            res = {\n                notifications: notifications,\n                notificationsUnread: nbUnread += 1\n            }\n        }\n        dispatch({\n            type: labels.UPDATE_NOTIFICATION,\n            payload: res\n        });\n    }\n}\n\n/** Update notifications, set as read\n * @param notifications array of notifications\n */\nfunction updateNotifications (notifications) {\n    return dispatch => {\n        _service.Action.updateMultiple(notifications)\n            .then(res => {\n                dispatch({\n                    type: labels.UPDATE_NOTIFICATIONS_DB,\n                    payload: res\n                });\n            })\n            .catch((err) => {\n                dispatch({\n                    type: labels.UPDATE_NOTIFICATIONS__DB_ERROR\n                })\n            });\n    }\n}\n\nexport const navbarAction = {\n    labels,\n    logOff,\n    getAllNonArchivedNotifications,\n    handleCheckboxNotification,\n    updateNotifications\n}","import cloneDeep from 'lodash/cloneDeep';\n\nconst labels = {\n    CHANGE_NOTIFICATION_READ_STATE: 'CHANGE_NOTIFICATION_READ_STATE',\n    FILTER_ONLY_UNREAD: 'FILTER_ONLY_UNREAD',\n    DISABLED_FILTER: 'DISABLED_FILTER'\n}\n\n// WARNING : Don't work, problem with object copy I guess\nfunction showOnlyUnreadAction (notifications, notificationsUnarchived, onlyUnread) {\n    if (onlyUnread) {\n        // We need to get only unread notifications in the store\n        let notificationsUnarchived = []\n        notificationsUnarchived = cloneDeep(notifications);\n        //Object.assign(notificationsUnarchived, notifications)\n        let newNotifications = []\n\n        for (let item of notificationsUnarchived) {\n            if (item.actionStatus === 0) {\n                newNotifications.push(item)\n            }\n        }\n        return (dispatch) => {\n            dispatch({\n                type: labels.FILTER_ONLY_UNREAD,\n                payload: {\n                    notifications: newNotifications,\n                    notificationsUnarchived: notifications\n                }\n            });\n        };\n    } else {\n        return (dispatch) => {\n            dispatch({\n                type: labels.DISABLED_FILTER,\n                payload: {\n                    notifications: notificationsUnarchived,\n                    notificationsUnarchived: []\n                }\n            });\n        }\n    }\n}\n\nexport const notificationAction = {\n    labels,\n    showOnlyUnreadAction\n}","import _service from '../services'\n\nconst labels = {\n    LOAD_PROFILE_PICTURE: 'LOAD_PROFILE_PICTURE',\n    UPDATE_MEMBER: 'UPDATE_MEMBER',\n    UPDATE_MEMBER_ERROR: 'UPDATE_MEMBER_ERROR',\n    UPDATE_PASSWORD: 'UPDATE_PASSWORD',\n    UPDATE_PASSWORD_ERROR: 'UPDATE_PASSWORD_ERROR'\n}\n\n/** Update a member\n * @param attributes Object contains data to update with\n */\nfunction updateMember(attributes) {\n    return (dispatch) => {\n        _service.Member.update(attributes)\n            .then(res => {\n                if (res) {\n                    localStorage.setItem('memberToken', res.memberToken)\n                    dispatch({\n                        type: labels.UPDATE_MEMBER,\n                        payload: {\n                            member: res\n                        }\n                    })\n                } else {\n                    dispatch({\n                        type: labels.UPDATE_MEMBER_ERROR,\n                    })\n                }\n\n            })\n            .catch((err) => {\n                dispatch({\n                    type: labels.UPDATE_MEMBER_ERROR,\n                })\n            });\n    };\n}\n\n/** Update member picture profile\n * @param attributes\n * @param memebrId\n */\nfunction updateMemberPicture (attributes, memberId) {\n    return (dispatch) => {\n        dispatch({\n            type: labels.LOAD_PROFILE_PICTURE,\n        })\n        _service.Member.updateProfilePicture(attributes, memberId)\n            .then(res => {\n                if (res) {\n                    localStorage.setItem('memberToken', res.memberToken)\n                    dispatch({\n                        type: labels.UPDATE_MEMBER,\n                        payload: {\n                            member: res\n                        }\n                    })\n                } else {\n                    dispatch({\n                        type: labels.UPDATE_MEMBER_ERROR,\n                    })\n                }\n\n            })\n            .catch((err) => {\n                dispatch({\n                    type: labels.UPDATE_MEMBER_ERROR,\n                })\n            });\n    };\n}\n\n/**Update member password\n * @param password\n */\nfunction updateMemberPassword (passwords) {\n    return (dispatch) => {\n        _service.Member.updatePassword(passwords)\n            .then(res => {\n                if (res) {\n                    localStorage.setItem('memberToken', res.memberToken)\n                    dispatch({\n                        type: labels.UPDATE_PASSWORD,\n                        payload: {\n                            updatePasswordMsg: 'Password updated.',\n                        }\n                    })\n                } else {\n                    dispatch({\n                        type: labels.UPDATE_PASSWORD_ERROR,\n                        payload: {\n                            updatePasswordMsg: 'Wrong password. Please, provide the right password for your account.',\n                        }\n                    })\n                }\n\n            })\n            .catch((err) => {\n                dispatch({\n                    type: labels.UPDATE_PASSWORD_ERROR,\n                    payload: {\n                        updatePasswordMsg: 'Wrong password. Please, provide the right password for your account.',\n                    }\n                })\n            });\n    }\n}\n\nexport const profileAction = {\n    labels,\n    updateMember,\n    updateMemberPassword,\n    updateMemberPicture\n}","import _service from '../services'\nimport moment from \"moment\";\nimport _helper from '../helpers'\n\nconst labels = {\n    LOAD_PROJECT: \"LOAD_PROJECT\",\n    GET_ALL_LISTS :\"GET_ALL_LISTS\",\n    CREATE_LIST : \"CREATE_LIST\",\n    CREATE_LIST_ERROR: \"CREATE_LIST_ERROR\",\n    UPDATE_LIST : \"UPDATE_LIST\",\n    UPDATE_LIST_ERROR : \"UPDATE_LIST_ERROR\",\n    GET_PROJECT_INFO : \"GET_PROJECT_INFO\",\n    GET_PROJECT_INFO_ERROR:\"GET_PROJECT_INFO_ERROR\",\n    GET_ALL_MEMBERS:\"GET_ALL_MEMBERS\",\n    GET_ALL_MEMBERS_ERROR:\"GET_ALL_MEMBERS_ERROR\",\n    INVITATION_SUCCESS: \"INVITATION_SUCCESS\",\n    INVITATION_ERROR: \"INVITATION_ERROR\",\n    GET_MEMBER_STATUS:\"GET_MEMBER_STATUS\",\n    GET_MEMBER_STATUS_ERROR: \"GET_MEMBER_STATUS_ERROR\",\n    REMOVE_MEMBER_FROM_PROJECT:\"REMOVE_MEMBER_FROM_PROJECT\",\n    REMOVE_MEMBER_FROM_PROJECT_ERROR:\"REMOVE_MEMBER_FROM_PROJECT_ERROR\",\n    SET_MEMBER_ADMIN : \"SET_MEMBER_ADMIN\",\n    GET_ACTIVITY:\"GET_ACTIVITY\",\n    GET_ACTIVITY_ERROR: \"GET_ACTIVITY_ERROR\",\n    MEMBER_HAS_PROJECT:\"MEMBER_HAS_PROJECT\",\n    MEMBER_HAS_PROJECT_ERROR:\"MEMBER_HAS_PROJECT_ERROR\",\n    LOAD: \"LOAD\",\n    GET_ALL_PERMISSIONS: \"GET_ALL_PERMISSIONS\",\n    GET_ALL_PERMISSIONS_ERROR: \"GET_ALL_PERMISSIONS_ERROR\",\n    UPDATE_PERMISSION_MEMBER: \"UPDATE_PERMISSION_MEMBER\",\n    UPDATE_PERMISSION_MEMBER_ERROR: \"UPDATE_PERMISSION_MEMBER_ERROR\",\n    UPDATE_PROJECT_INFO:\"UPDATE_PROJECT_INFO\"\n}\n\n/** Find all list of a project\n * Get all list with cards of a project\n * @param idProject project id to search lists for\n */\nfunction findAllLists (idProject) {\n    return dispatch => {\n        dispatch({ type: labels.LOAD_PROJECT })\n        const body ={\n            projectId: idProject\n        }\n        _service.Project.getAllWithCards(body)\n        .then(res => {\n            dispatch({\n                type: labels.GET_ALL_LISTS,\n                payload: res\n            });\n        })\n    }\n}\n\n/**Update store when receiving lists from socket\n * @param lists lists received from socket event\n */\nfunction loadLists(lists){\n    return dispatch => {\n        dispatch({\n            type: labels.GET_ALL_LISTS,\n            payload: lists\n        });\n    }\n}\n\n/**Update store when receiving new info from socket\n * @param projectInfo received from socket event\n */\nfunction loadProjectInfo(projectInfo){\n    return dispatch => {\n        dispatch({\n            type: labels.UPDATE_PROJECT_INFO,\n            payload: projectInfo\n        });\n    }\n}\n\n/**Find all member of a project\n * @param projectId project Id\n */\nfunction findAllMembers (projectId) {\n    return dispatch => {\n        _service.Project.getAllMembers({ projectId: projectId })\n            .then(res => {\n                dispatch({\n                    type: labels.GET_ALL_MEMBERS,\n                    payload: res\n                });\n            })\n            .catch((err) => {\n                dispatch({\n                    type: labels.GET_ALL_MEMBERS_ERROR,\n                    payload: err\n                });\n            });\n    }\n}\n\n/**Create a new list\n * @param listTitle new list title\n * @param projectId project Id of the list\n * @param member member that has created the list\n */\nfunction createList (listTitle, projectId, listFather, member) {\n\n    const body = {\n        listTitle: listTitle,\n        listStatus : 0,\n        projectId: projectId,\n        listFather:listFather\n    }\n        return dispatch => {\n            _service.List.create(body)\n            .then(res => { \n                dispatch({\n                    type: labels.CREATE_LIST,\n                    payload: res\n                });\n                _service.Action.createActivityForAllMembers({\n                    actionType: 0,\n                    actionTitle: \"List was created\",\n                    actionDescription: member.memberPseudo + \" has create the list '\" + listTitle + \"'.\",\n                    memberId: member.memberId,\n                    projectId: projectId,\n                    actionDateCreation: moment(),\n                    mhaStatus: 0\n                })\n            })\n            .catch((err) => {\n                console.log(err)\n                dispatch({\n                    type: labels.CREATE_LIST_ERROR,\n                    payload: err\n                });\n            });\n    }\n}\n\n/** Update a list\n * @param listId list Id\n * @param fatherListId list father id\n */\nfunction updateLists (listId,fatherListId) {\n    let body = {\n        listFather : fatherListId\n    }\n\n    return dispatch => {\n        _service.List.update(listId,body)\n            .then(res => {\n                dispatch({\n                    type: labels.UPDATE_LIST,\n                    payload: res\n                })\n            })\n            .catch((err) => {\n                dispatch({\n                    type: labels.UPDATE_LIST_ERROR,\n                    payload: err\n                })\n            });\n    }\n}\n\n/** Get all information about a project\n * @param projectId project Id\n */\nfunction getProjectInfo(projectId){\n    return dispatch => {\n        _service.Project.getOne(projectId)\n            .then(res => {\n                if (res.length > 0) {\n                    dispatch({\n                        type: labels.GET_PROJECT_INFO,\n                        payload: res\n                    });\n                } else {\n                    dispatch({\n                        type: labels.GET_PROJECT_INFO_ERROR\n                    });\n                    _helper.History.push('/home')\n                }\n\n            })\n            .catch((err) => {\n                dispatch({\n                    type: labels.GET_PROJECT_INFO_ERROR,\n                    payload: err\n                });\n            });\n    }\n}\n\n/**Update Project Title\n * @param newProjectTitle new title of the project\n * @param projectId project Id \n */\nfunction updateProjectTitle(newProjectTitle, projectId){\n    const body = {\n        projectTitle : newProjectTitle\n    }\n    return dispatch => {\n        _service.Project.update(projectId,body)\n            .then(res => {\n                _service.Project.getOne(projectId)\n                    .then(res => {\n                        dispatch({\n                            type: labels.GET_PROJECT_INFO,\n                            payload: res\n                        });\n                    })\n                    .catch((err) => {\n                        dispatch({\n                            type: labels.GET_PROJECT_INFO_ERROR,\n                            payload: err\n                        });\n                    });\n            })\n            .catch((err) => {\n                dispatch({\n                    type: labels.GET_PROJECT_INFO_ERROR,\n                    payload: err\n                });\n            });\n    }\n}\n\n/** Update visibility of a project\n * @param visibilityValue status of visibility, 0 is public, 1 is private\n * @param projectId project id\n */\nfunction updateProjectVisibility(visibilityValue, projectId){\n    const body = {\n        projectVisibility : visibilityValue\n    }\n    return dispatch => {\n        _service.Project.update(projectId,body)\n            .then(res => {\n                _service.Project.getOne(projectId)\n                    .then(res => {\n                        dispatch({\n                            type: labels.GET_PROJECT_INFO,\n                            payload: res\n                        });\n                    })\n                    .catch((err) => {\n                        dispatch({\n                            type: labels.GET_PROJECT_INFO_ERROR,\n                            payload: err\n                        });\n                    });\n            })\n            .catch((err) => {\n                dispatch({\n                    type: labels.GET_PROJECT_INFO_ERROR,\n                    payload: err\n                });\n            });\n    }\n}\n\n/** Check if user is a project member\n * @param memberId member id\n * @param projectId project id\n */\nfunction getMemberHasProject(memberId, projectId){\n    const body = {\n        memberId : memberId,\n        projectId: projectId,\n        memberhasprojectStatus: 1        \n    }\n    return dispatch => {\n        _service.Project.getMemberHasProject(body)\n        .then(res => {\n            dispatch({\n                type: labels.MEMBER_HAS_PROJECT,\n                payload: res\n            });\n        })\n        .catch((err) => {\n            dispatch({\n                type: labels.MEMBER_HAS_PROJECT_ERROR,\n                payload: err\n            });\n        });\n    }\n\n\n}\n\n/** Send an invitation to a member for a specific project.\n * @param body Object that contains member id and project id\n */\nfunction sendInvitationProject(body){\n    return dispatch => {\n\n        dispatch({\n            type: labels.LOAD\n        });\n\n        let newMember = {\n            memberLastname: 'unknow',\n            memberFirstname: 'unknow',\n            memberPseudo: 'unknow',\n            memberStatus: 2,\n            memberEmail: body.memberEmail\n        }\n        _service.Member.createIfNotExist(newMember)\n            .then(member => {\n                body.memberId = member.memberId\n                body.memberhasprojectStatus = 0\n                body.projectIsFavorite = false\n\n                _service.Project.createAndSendInvitation(body)\n                    .then(res => {\n                        _service.Project.getAllMembers({ projectId: body.projectId })\n                            .then(res => {\n                                dispatch({\n                                    type: labels.GET_ALL_MEMBERS,\n                                    payload: res\n                                });\n                            })\n                            .catch((err) => {\n                                dispatch({\n                                    type: labels.GET_ALL_MEMBERS_ERROR,\n                                    payload: err\n                                });\n                            });\n                    })\n                    .catch((err) => {\n                        dispatch({\n                            type: labels.INVITATION_ERROR\n                        })\n                    });\n            })\n            .catch((err) => {\n                dispatch({\n                    type: labels.INVITATION_ERROR\n                })\n            });\n\n\n    }\n}\n\n/** Get the status of a member for a specific project (if he is admin or not)\n * @param projectId project Id\n * @param memberId member Id\n */\nfunction getMemberStatus(projectId, memberId){\n    return dispatch => {\n        _service.Project.getMemberStatus(({projectId: projectId, memberId: memberId}))\n        .then(res => {\n            dispatch({\n                type: labels.GET_MEMBER_STATUS,\n                payload: res.mhppState\n            });\n        })\n        .catch((err) => {\n            dispatch({\n                type: labels.GET_MEMBER_STATUS_ERROR,\n                payload: false\n            });\n        });\n    }\n}\n\n/** Remove a member from a project\n * @param query Contains member Id and project id\n */\nfunction removeMemberFromProject(query){\n    return dispatch => {\n        dispatch({\n            type: labels.LOAD\n        });\n        _service.Member.deleteInvitation(query)\n            .then(res => {\n                _service.Permission.deleteForMemberOnProject(query)\n                    .then(isDeleted => {\n                        dispatch({\n                            type: labels.REMOVE_MEMBER_FROM_PROJECT\n                        })\n                        dispatch({ type: labels.LOAD_PROJECT })\n                        const body ={\n                            projectId: query.projectId\n                        }\n                        _service.Project.getAllWithCards(body)\n                            .then(res => {\n                                dispatch({\n                                    type: labels.GET_ALL_LISTS,\n                                    payload: res\n                                });\n                            })\n                        _service.Project.getAllMembers({ projectId: query.projectId })\n                            .then(res => {\n                                dispatch({\n                                    type: labels.GET_ALL_MEMBERS,\n                                    payload: res\n                                });\n                            })\n                            .catch((err) => {\n                                dispatch({\n                                    type: labels.GET_ALL_MEMBERS_ERROR,\n                                    payload: err\n                                });\n                            });\n                    })\n                    .catch((err) => {\n                        dispatch({\n                            type: labels.REMOVE_MEMBER_FROM_PROJECT_ERROR\n                        })\n                    });\n            })\n            .catch((err) => {\n                dispatch({\n                    type: labels.REMOVE_MEMBER_FROM_PROJECT_ERROR\n                })\n            });\n    }\n}\n\n/** Get all activities related to a project (Limit 15)\n * @param projectId project Id\n */\nfunction getActivity(projectId){\n    return dispatch => {\n        _service.Project.getAllActions({ projectId: projectId })\n            .then(res => {\n                dispatch({\n                    type: labels.GET_ACTIVITY,\n                    payload: res\n                });\n            })\n            .catch(err => {\n                dispatch({\n                    type: labels.GET_ACTIVITY_ERROR\n                });\n            })\n    }\n}\n\n/**Get all labels related to a project\n */\nfunction getLabels(){\n    return dispatch => {\n        _service.Project.getLabels()\n            .then(res => {\n                dispatch({\n                    type: labels.GET_ALL_LABELS,\n                    payload: res\n                });\n            })\n            .catch((err) => {\n                dispatch(err)\n            });\n    }\n}\n\n/** Fetch all permissions of all members of a project\n * @param projectId project Id\n */\nfunction getAllPermissions (projectId) {\n    return dispatch => {\n        _service.Permission.getAllOnProject({ projectId: projectId })\n            .then(res => {\n                dispatch({\n                    type: labels.GET_ALL_PERMISSIONS,\n                    payload: res\n                });\n            })\n            .catch((err) => {\n                dispatch({\n                    type: labels.GET_ALL_PERMISSIONS_ERROR\n                });\n            });\n    }\n}\n\n/** Update permission of a member in a project (store and db permissions)\n * @param projectId project Id\n * @param memberId member Id\n * @param permissionId permission Id\n * @param mhppState \n * @param storeMembers\n */\nfunction updatePermissionMember (projectId, memberId, permissionId, mhppState, storeMembers) {\n    let query = {\n        projectId: projectId,\n        memberId: memberId,\n        permissionId: permissionId\n    }\n    let body = {\n        mhppState: mhppState\n    }\n    return dispatch => {\n        _service.Permission.updateOnProject(query, body)\n            .then(res => {\n                if (res) {\n                    dispatch({\n                        type: labels.UPDATE_PERMISSION_MEMBER,\n                        payload: storeMembers\n                    });\n                } else {\n                    dispatch({\n                        type: labels.UPDATE_PERMISSION_MEMBER_ERROR\n                    });\n                }\n            })\n            .catch((err) => {\n                dispatch({\n                    type: labels.UPDATE_PERMISSION_MEMBER_ERROR\n                });\n            });\n    }\n}\n\nexport const projectAction = {\n    labels,\n    findAllLists,\n    createList,\n    updateLists,\n    getProjectInfo,\n    updateProjectTitle,\n    findAllMembers,\n    updateProjectVisibility,\n    sendInvitationProject,\n    getMemberStatus,\n    removeMemberFromProject,\n    getActivity,\n    getLabels,\n    updatePermissionMember,\n    getMemberHasProject,\n    getAllPermissions,\n    loadLists,\n    loadProjectInfo\n}","import _service from '../services'\nimport moment from \"moment\";\n\nconst labels = {\n    GET_ALL_CARDS :\"GET_ALL_CARDS\",\n    GET_ALL_CARDS_ERROR:\"GET_ALL_CARDS_ERROR\",\n    CREATE_CARD:\"CREATE_CARD\",\n    UPDATE_LIST_TITLE:\"UPDATE_LIST_TITLE\",\n    UPDATE_LIST_TITLE_ERROR:\"UPDATE_LIST_TITLE_ERROR\",\n    DELETE_LIST:\"DELETE_LIST\",\n    DELETE_LIST_ERROR:\"DELETE_LIST_ERROR\",\n    UPDATE_CARD: \"UPDATE_CARD\",\n    UPDATE_CARD_ERROR:\"UPDATE_CARD_ERROR\",\n    UPDATE_LIST_STATUS: \"UPDATE_LIST_STATUS\",\n    UPDATE_LIST_STATUS_ERROR:\"UPDATE_LIST_STATUS_ERROR\",\n    UPDATE_POSITION_LISTS:\"UPDATE_POSITION_LISTS\",\n    LOAD_PROJECT:\"LOAD_PROJECT\",\n    RESTORE_CARD:\"RESTORE_CARD\",\n    RESTORE_CARD_ERROR:\"RESTORE_CARD_ERROR\",\n    UPDATE_DATE_CARD:\"UPDATE_DATE_CARD\",\n    UPDATE_DATE_CARD_ERROR:\"UPDATE_DATE_CARD_ERROR\",\n    UPDATE_DESCRIPTION_CARD:\"UPDATE_DESCRIPTION_CARD\",\n    UPDATE_DESCRIPTION_CARD_ERROR:\"UPDATE_DESCRIPTION_CARD_ERROR\",\n    UPDATE_TITLE_CARD:\"UPDATE_TITLE_CARD\",\n    UPDATE_TITLE_CARD_ERROR:\"UPDATE_TITLE_CARD_ERROR\",\n    CREATE_CARD_ERROR: \"CREATE_CARD_ERROR\"\n\n}\n\n/** Create a new card\n * @param cardTitle new card title\n * @param listId list id linked to the new card\n * @param projectId project id linked to the new card\n * @param member member that created the card\n * @param cardFather card father to keep card order\n */\nfunction createCard(cardTitle,listId,projectId, member, cardFather) {\n    console.log(cardFather)\n    const body = {\n        cardTitle: cardTitle,\n        cardStatus : 0,\n        listId: listId,\n        cardDescription: '',\n        cardFather: cardFather\n    }\n    return dispatch => {\n        dispatch({ type: labels.LOAD_PROJECT })\n        _service.Card.create(body)\n            .then(res => {\n                const card = {\n                    ...res,\n                    CardListFks : []\n                }\n                _service.Action.createActivityForAllMembers({\n                    actionType: 0,\n                    actionTitle: \"Card was created\",\n                    actionDescription: member.memberPseudo + \" has create the card '\" + cardTitle + \"'.\",\n                    memberId: member.memberId,\n                    projectId: projectId,\n                    actionDateCreation: moment(),\n                    mhaStatus: 0\n                })\n                dispatch({\n                    type: labels.CREATE_CARD,\n                    payload: card\n                });\n            })\n            .catch((err) => {\n                console.log(err)\n                dispatch({\n                    type: labels.CREATE_CARD_ERROR\n                })\n            });\n    }\n}\n\n/** Find all cards\n * \n */\nfunction findAllCards() {\n\n    return dispatch => {\n        _service.Card.getAll()\n            .then(res => {\n                dispatch({\n                    type: labels.GET_ALL_CARDS,\n                    payload: res\n                });\n            })\n            .catch((err) => {\n                dispatch({\n                    type: labels.GET_ALL_CARDS_ERROR\n                })\n            });\n    }\n}\n\n/** Update a card\n * @param cardId card Id\n * @param listId list Id\n * @param newLists newLists\n */\nfunction updateCard(cardId, listId, newLists){\n    const body={\n        listId : listId\n    }\n    return dispatch => {\n        _service.Card.update(cardId,body)\n            .then(res => {\n\n                dispatch({\n                    type: labels.UPDATE_CARD,\n                    payload: newLists\n                });\n            })\n            .catch((err) => {\n                dispatch({\n                    type: labels.UPDATE_CARD_ERROR\n                })\n            });\n    }\n}\n\n/** Update due date of a card\n * @param card updated card\n * @param body object with data to update\n */\nfunction updateDueDateCard(card, body){\n    return dispatch =>{\n        _service.Card.update(card.cardId, body)\n            .then(res =>{\n                    dispatch({\n                        type: labels.UPDATE_DATE_CARD,\n                        payload: {\n                            card : card,\n                            dueDate : body.cardDateTarget\n                        }\n                    });\n                }\n            ).catch(e => {\n            dispatch({\n                type: labels.UPDATE_DATE_CARD_ERROR\n            })\n        })\n    }\n\n}\n\n/** Update description of a card\n * @param card card to update\n * @param body Object that contains data to update with\n */\nfunction updateDescription(card, body){\n    return dispatch =>{\n        _service.Card.update(card.cardId, body)\n            .then(res =>{\n                    dispatch({\n                        type: labels.UPDATE_DESCRIPTION_CARD,\n                        payload: {\n                            card : card,\n                            description : body.cardDescription\n                        }\n                    });\n                }\n            ).catch(e => {\n            dispatch({\n                type: labels.UPDATE_DESCRIPTION_CARD_ERROR\n            })\n        })\n    }\n}\n\n/** Update card title\n * @param card card to update title\n * @param body Object that contains new title\n */\nfunction updateCardTitle(card, body){\n    return dispatch =>{\n        _service.Card.update(card.cardId, body)\n            .then(res =>{\n                    dispatch({\n                        type: labels.UPDATE_TITLE_CARD,\n                        payload: {\n                            card : card,\n                            title : body.cardTitle\n                        }\n                    });\n                }\n            ).catch(e => {\n            dispatch({\n                type: labels.UPDATE_TITLE_CARD_ERROR\n            })\n        })\n    }\n}\n\n\n/** Update list Title\n * @param newListTitle new list title\n * @param listId list Id\n */\nfunction updateListTitle(newListTitle, listId){\n    const body = {\n        listTitle : newListTitle,\n        listId : listId\n    }\n    const setDispacth = {\n        listTitle : newListTitle,\n        listId : listId,\n        newListTitle : newListTitle\n    }\n\n    return dispatch => {\n        _service.List.update(listId,body)\n            .then(res => {\n                dispatch({\n                    type: labels.UPDATE_LIST_TITLE,\n                    payload: setDispacth\n                });\n            })\n            .catch((err) => {\n                dispatch({\n                    type: labels.UPDATE_LIST_TITLE_ERROR,\n                });\n            });\n    }\n}\n\n/** Delete a list from a project\n * @param listId list id\n * @param projectId project id\n */\nfunction deleteList(listId, projectId) {\n\n\n    return dispatch => {\n        _service.List.delete(listId)\n            .then(res => {\n                dispatch({\n                    type: labels.DELETE_LIST,\n                    payload: listId\n                });\n            })\n            .catch((err) => {\n                dispatch({\n                    type: labels.DELETE_LIST_ERROR,\n                });\n            });\n    }\n}\n\n/** Update list status (archive)\n * @param listId list id\n * @param status status to update\n */\nfunction updateListStatus(listId, status){\n    const body ={\n        listId:listId,\n        listStatus:status\n    }\n    return dispatch => {\n        _service.List.update(listId,body)\n            .then(res => {\n                dispatch({\n                    type: labels.UPDATE_LIST_STATUS,\n                    payload: body\n                });\n            })\n            .catch((err) => {\n                dispatch({\n                    type: labels.UPDATE_LIST_STATUS_ERROR,\n                });\n            });\n    }\n}\n\n/** Update position of lists\n * @param newOrderedArray array of ordered list\n * @param listOrder order of lists\n */\nfunction updatePositionLists(newOrderedArray, listsOrder){\n    return dispatch => {\n        _service.List.updateListOrder(listsOrder)\n        dispatch({\n            type: labels.UPDATE_POSITION_LISTS,\n            payload: newOrderedArray\n        });\n    }\n}\n\n/** Restore a card from archived\n * @param card card to restore\n * @param body information to update\n */\nfunction restoreCard(card, body){\n    return dispatch => {\n        _service.Card.update(card.cardId,body)\n            .then(res => {\n\n                dispatch({\n                    type: labels.RESTORE_CARD,\n                    payload: card\n                });\n            })\n            .catch((err) => {\n                dispatch({\n                    type: labels.RESTORE_CARD_ERROR,\n                });\n            });\n    }\n}\n\n\nexport const listAction = {\n    labels,\n    createCard,\n    findAllCards,\n    updateCard,\n    updateListTitle,\n    deleteList,\n    updateListStatus,\n    updatePositionLists,\n    restoreCard,\n    updateDueDateCard,\n    updateDescription,\n    updateCardTitle\n}\n\n","import _service from \"../services\";\n\nconst labels = {\n    GET_CARD: 'GET_CARD',\n    GET_CARD_ERROR: 'GET_CARD_ERROR',\n    UPDATE_CARD: 'UPDATE_CARD',\n    UPDATE_POSITION_CARD : \"UPDATE_POSITION_CARD\",\n    ERROR_UPDATE_CARD : 'ERROR_UPDATE_CARD',\n    DELETE_CARD: 'DELETE_CARD',\n    DELETE_CARD_ERROR: 'DELETE_CARD_ERROR',\n    ADD_MEMBER_ON_CARD: \"ADD_MEMBER_ON_CARD\",\n    ADD_MEMBER_ON_CARD_ERROR: \"ADD_MEMBER_ON_CARD_ERROR\",\n    DELETE_MEMBER: \"DELETE_MEMBER\",\n    DELETE_MEMBER_ERROR: \"DELETE_MEMBER_ERROR\",\n    UPDATE_TASK: 'UPDATE_TASK',\n    UPDATE_TASK_ERROR: 'UPDATE_TASK_ERROR',\n    DELETE_TASK: 'DELETE_TASK',\n    DELETE_TASK_ERROR: 'DELETE_TASK_ERROR',\n    CREATE_TASK: 'CREATE_TASK',\n    CREATE_TASK_ERROR: 'CREATE_TASK_ERROR',\n    LOAD_CARD: \"LOAD_CARD\",\n    GET_ALL_LABEL: 'GET_ALL_LABEL',\n    GET_ALL_LABEL_ERROR:\"GET_ALL_LABEL_ERROR\",\n    CREATE_LINK_LABEL: 'CREATE_LINK_LABEL',\n    CREATE_LINK_LABEL_ERROR: 'CREATE_LINK_LABEL_ERROR',\n    DELETE_LINK_LABEL: 'CREATE_LINK_LABEL',\n    DELETE_LINK_LABEL_ERROR: 'CREATE_LINK_LABEL_ERROR',\n    LOAD_PROJECT: \"LOAD_PROJECT\",\n    ARCHIVE_CARD:\"ARCHIVE_CARD\",\n    FIND_ALL_MEMBERS_ON_CARD: \"FIND_ALL_MEMBERS_ON_CARD\",\n    FIND_ALL_MEMBERS_ON_CARD_ERROR: \"FIND_ALL_MEMBERS_ON_CARD_ERROR\",\n    FIND_ALL_COMMENTS_ON_CARD: 'FIND_ALL_COMMENTS_ON_CARD',\n    ADD_COMMENTS_ON_CARD: 'ADD_COMMENTS_ON_CARD'\n}\n\n/** Get a card\n * @param cardId card Id\n */\nfunction getCard(cardId) {\n    return dispatch => {\n        _service.Card.get({cardId: cardId})\n            .then(res => {\n                dispatch({\n                    type: labels.GET_CARD,\n                    payload: res\n                });\n            })\n            .catch((err) => {\n                dispatch({\n                    type: labels.GET_CARD_ERROR,\n                });\n            });\n    }\n}\n\n/** Get labels of a specific project\n * @param projectId  project id\n */\nfunction getLabels(projectId) {\n    return dispatch => {\n        _service.Label.getAll({ projectId: projectId })\n            .then(res => {\n                dispatch({\n                    type: labels.GET_ALL_LABEL,\n                    payload: res\n                });\n            })\n            .catch((err) => {\n                dispatch({\n                    type: labels.GET_ALL_LABEL_ERROR,\n                });\n            });\n    }\n}\n\n/**Update a card\n * @param card card to update\n * @param body object containing information to update with\n * @param listIndex index of the list containing this card\n * @param cardIndex index of the card in the list\n */\nfunction updatecard(card, body,listIndex, cardIndex) {\n\n\n    return dispatch => _service.Card.update(card.cardId, body)\n        .then(id => {\n            dispatch({\n                type : labels.ARCHIVE_CARD,\n                payload: {\n                    listIndex: listIndex,\n                    cardIndex: cardIndex\n                }\n            })\n        })\n        .catch (e => {\n            dispatch({\n                type: labels.ERROR_UPDATE_CARD,\n                errorMsg: 'impossible to execute this action'\n            })\n        })\n};\n\n/**Update a task\n * @param taskId task id\n * @param body Object containing updates\n */\nfunction updateTask(taskId, body) {\n    return dispatch => _service.Task.update({taskId: taskId}, body)\n        .then(isUpdated => {\n            if(isUpdated){\n                dispatch({\n                    type: labels.UPDATE_TASK\n                })\n            }else{\n                dispatch({\n                    type: labels.UPDATE_TASK_ERROR\n                })\n            }\n        })\n        .catch (e => {\n            dispatch({\n                type: labels.UPDATE_TASK_ERROR\n            })\n        })\n};\n\n/** Delete a task\n * @param taskId task Id\n * @param card card containing task\n */\nfunction deleteTask(taskId, card) {\n    return dispatch => _service.Task.delete({taskId: taskId})\n        .then(isDeleted => {\n            if(isDeleted){\n                dispatch({\n                    type: labels.DELETE_TASK,\n                    payload: card\n                })\n            }else{\n                dispatch({\n                    type: labels.DELETE_TASK_ERROR\n                })\n            }\n        })\n        .catch (e => {\n            dispatch({\n                type: labels.DELETE_TASK_ERROR\n            })\n        })\n};\n\n/**Delete a card\n * @param cardId card Id\n * @param listIndex list index that contains the card\n * @param cardIndex card index under the list\n */\nfunction deleteCard(cardId, listIndex, cardIndex) {\n    return dispatch => {\n        dispatch({ type: labels.LOAD_PROJECT })\n        _service.Card.delete({cardId: cardId})\n            .then(isDeleted => {\n                if(isDeleted){\n                    dispatch({\n                        type: labels.DELETE_CARD,\n                        payload: {\n                            listIndex: listIndex,\n                            cardIndex: cardIndex\n                        }\n                    })\n                }else{\n                    dispatch({\n                        type: labels.DELETE_CARD_ERROR\n                    })\n                }\n            })\n            .catch (e => {\n                dispatch({\n                    type: labels.DELETE_CARD_ERROR\n                })\n            })\n    }\n};\n\n/** Get all member affected to a card\n * @param cardId card Id\n * @param projectId project Id \n */\nfunction getMembersOnCard (cardId, projectId) {\n    return dispatch => {\n        dispatch({type: labels.LOAD_CARD})\n        _service.Card.findAllMembers({\n            cardId: cardId,\n            projectId: projectId,\n            memberhasprojectStatus: 1\n        })\n            .then(members => {\n                dispatch({\n                    type: labels.FIND_ALL_MEMBERS_ON_CARD,\n                    payload: {\n                        membersOnCard: members.membersOnCard,\n                        membersOffCard: members.membersOffCard\n                    }\n                })\n            })\n            .catch (e => {\n                dispatch({\n                    type: labels.FIND_ALL_MEMBERS_ON_CARD_ERROR\n                })\n            })\n    }\n}\n\n/** Add a member to a card\n * @param memberId\n * @param cardId\n * @param membersOnCard\n * @param membersOffCard\n * @param listIndex\n * @param cardIndex\n * @param member\n */\nfunction addMember(memberId, cardId, membersOnCard, membersOffCard, listIndex, cardIndex, member) {\n    let body = {\n        cardId: cardId,\n        memberId: memberId\n    }\n    return dispatch => {\n        dispatch({ type: labels.LOAD_CARD })\n\n        _service.Card.addMember(body)\n            .then(mhc => {\n                dispatch({\n                    type: labels.ADD_MEMBER_ON_CARD,\n                    payload: {\n                        membersOnCard: membersOnCard,\n                        membersOffCard: membersOffCard,\n                        newMember: member,\n                        cardIndex: cardIndex,\n                        listIndex: listIndex\n                    }\n                })\n            })\n            .catch (e => {\n                dispatch({\n                    type: labels.ADD_MEMBER_ON_CARD_ERROR\n                })\n            })\n    }\n};\n\n/** Remove a member from a card\n * @param memberId\n * @param cardId\n * @param membersOnCard\n * @param membersOffCard\n */\nfunction removeMember (memberId, cardId, membersOnCard, membersOffCard, listIndex, cardIndex, elementIndex) {\n\n    let query = {\n        cardId: cardId,\n        memberId: memberId\n    }\n    return dispatch => {\n        dispatch({ type: labels.LOAD_CARD })\n\n        _service.Card.removeMember(query)\n            .then(isDeleted => {\n                if (isDeleted) {\n                    dispatch({\n                        type: labels.DELETE_MEMBER,\n                        payload: {\n                            membersOnCard: membersOnCard,\n                            membersOffCard: membersOffCard,\n                            listIndex: listIndex,\n                            cardIndex: cardIndex,\n                            elementIndex: elementIndex\n                        }\n                    })\n                } else {\n                    dispatch({\n                        type: labels.DELETE_MEMBER_ERROR\n                    })\n                }\n            })\n            .catch (e => {\n                dispatch({\n                    type: labels.DELETE_MEMBER_ERROR\n                })\n            })\n    }\n};\n\n/**Create a new task\n * @param newTask new task name\n * @param card card that contains the task\n */\nfunction createTask(newTask, card) {\n    return dispatch => {\n        dispatch({\n            type: labels.LOAD_CARD\n        })\n        _service.Task.create(newTask)\n            .then(res => {\n                card.TaskCardFks.push(res)\n                dispatch({\n                    type: labels.CREATE_TASK,\n                    payload : card\n                })\n            }).catch (e => {\n            dispatch({\n                type: labels.CREATE_TASK_ERROR\n            })\n        })\n    }\n};\n\n/** Create label link with a card\n * @param query Object that contains cardId and labelId\n */\nfunction createLinkLabel(query) {\n    return dispatch => {\n        //{cardId: 1, labelId :1}\n        _service.Card.createLinkLabel(query)\n            .then(res => {\n                dispatch({\n                    type: labels.CREATE_LINK_LABEL\n                })\n            }).catch (e => {\n            dispatch({\n                type: labels.CREATE_LINK_LABEL_ERROR\n            })\n        })\n    }\n};\n\n/** Delete a label link with a card\n * @param query Object that contains cardId and labelId\n */\nfunction deleteLinkLabel(query) {\n    return dispatch => _service.Card.deleteLinkLabel(query)\n        .then(isDeleted => {\n            if (isDeleted) {\n                dispatch({\n                    type: labels.DELETE_LINK_LABEL,\n                })\n            } else {\n                dispatch({\n                    type: labels.DELETE_LINK_LABEL_ERROR\n                })\n            }\n        })\n        .catch (e => {\n            dispatch({\n                type: labels.DELETE_LINK_LABEL_ERROR\n            })\n        })\n};\n\n/** Find all comment of a card\n * @param cardId card Id\n */\nfunction findAllComments(cardId) {\n    return dispatch => _service.Comments.getAllComments(cardId).then(comments => dispatch({\n        type: labels.FIND_ALL_COMMENTS_ON_CARD,\n        payload: comments\n    }))\n}\n\n/** Add comments to a card\n * @param cardId card Id\n * @param memberId member id\n * @param text comment text\n */\nfunction addComments (cardId, memberId, text) {\n    return dispatch => _service.Comments.addComments().then(comment => {\n        // TODO trigger notification\n        dispatch({\n            type: labels.ADD_COMMENTS_ON_CARD,\n            payload: comment\n        })\n    })\n}\n\n/**Update position of cards\n * @param cards an array of cards\n */\nfunction updatePositionCard (cards) {\n    return dispatch => {\n        _service.Card.updateCardOrder(cards)\n            .then(res => {\n                dispatch({\n                    type: labels.UPDATE_POSITION_CARD\n                })\n            })\n    }\n}\n\nexport const cardAction = {\n    labels,\n    getCard,\n    updatecard,\n    updateTask,\n    deleteCard,\n    deleteTask,\n    createTask,\n    getLabels,\n    addMember,\n    removeMember,\n    createLinkLabel,\n    deleteLinkLabel,\n    getMembersOnCard,\n    findAllComments,\n    addComments,\n    updatePositionCard\n}","import _service from '../services'\n\nconst labels = {\n    SEARCH_PROJECTS :\"SEARCH_PROJECTS\",\n    SEARCH_PROJECTS_ERROR :\"SEARCH_PROJECTS_ERROR\",\n    SEARCH_CARDS :\"SEARCH_CARDS\",\n    SEARCH_CARDS_ERROR :\"SEARCH_CARDS_ERROR\",\n    SEARCH_LISTS :\"SEARCH_LISTS\",\n    SEARCH_LISTS_ERROR :\"SEARCH_LISTS_ERROR\",\n    SEARCH_RESET: \"SEARCH_RESET\"\n}\n\n/** Search for projects\n * @param value name to search\n * @param memberId member id\n */\nfunction searchProjects (value, memberId) {\n    return dispatch => {\n        if (value !== '') {\n            _service.Project.searchbarProjects({str: value, memberId: memberId})\n                .then(res => {\n                    dispatch({\n                        type: labels.SEARCH_PROJECTS,\n                        payload: res\n                    });\n                })\n                .catch((err) => {\n                    dispatch({\n                        type: labels.SEARCH_PROJECTS_ERROR\n                    });\n                });\n        } else {\n            dispatch({\n                type: labels.SEARCH_PROJECTS,\n                payload: []\n            });\n        }\n    }\n}\n\n/** Search for lists\n * @param value name to search\n * @param memberId member id\n */\nfunction searchLists (value, memberId) {\n    return dispatch => {\n        if (value !== '') {\n            _service.List.searchbarLists({str: value, memberId: memberId})\n                .then(res => {\n                    dispatch({\n                        type: labels.SEARCH_LISTS,\n                        payload: res\n                    });\n                })\n                .catch((err) => {\n                    dispatch({\n                        type: labels.SEARCH_LISTS_ERROR\n                    });\n                });\n        } else {\n            dispatch({\n                type: labels.SEARCH_LISTS,\n                payload: []\n            });\n        }\n    }\n}\n\n/** Search for cards\n * @param value name to search\n * @param memberId member id \n */\nfunction searchCards (value, memberId) {\n    return dispatch => {\n        if (value !== '') {\n            _service.Card.searchbarCards({str: value, memberId: memberId})\n                .then(res => {\n                    dispatch({\n                        type: labels.SEARCH_CARDS,\n                        payload: res\n                    });\n                })\n                .catch((err) => {\n                    dispatch({\n                        type: labels.SEARCH_CARDS_ERROR\n                    });\n                });\n        } else {\n            dispatch({\n                type: labels.SEARCH_CARDS,\n                payload: []\n            });\n        }\n    }\n}\n\nfunction resetSearchArrays () {\n    return dispatch => {\n        dispatch({\n            type: labels.SEARCH_RESET\n        });\n    }\n}\n\nexport const searchbarAction = {\n    labels,\n    searchProjects,\n    searchLists,\n    searchCards,\n    resetSearchArrays\n}\n\n","import _service from '../services'\nimport _helper from '../helpers'\n\nconst labels = {\n    MEMBER_EXIST: 'MEMBER_EXIST',\n    MEMBER_NOT_EXIST: 'MEMBER_NOT_EXIST',\n    DECRYPT_ERROR: 'DECRYPT_ERROR',\n    INVITATION_REPLY: 'INVITATION_REPLY',\n    INVITATION_REPLY_ERROR: 'INVITATION_REPLY_ERROR'\n}\n\n/** Check if member exist in the database\n * @param memberToken member token\n */\nfunction isMemberExist (memberToken) {\n    return (dispatch) => {\n        _service.Member.decrpytInvitation(memberToken)\n            .then(res => {\n                if (res.isExist) {\n                    _service.Member.getInvitation({ projectId: res.projectId, memberId: res.memberId, memberhasprojectStatus: 0 })\n                        .then(memberProject => {\n                            if (memberProject) {\n                                dispatch({\n                                    type: labels.MEMBER_EXIST,\n                                    payload: {\n                                        member: memberProject.Member,\n                                        project: memberProject.Project,\n                                        isAccountValid: res.memberStatus === 1\n                                    }\n                                })\n                            } else {\n                                _helper.History.push('/home')\n                                dispatch({\n                                    type: labels.DECRYPT_ERROR\n                                })\n                            }\n                        })\n                        .catch((err) => {\n                           dispatch({\n                                type: labels.DECRYPT_ERROR\n                            })\n                        });\n                } else {\n                    dispatch({\n                        type: labels.MEMBER_NOT_EXIST,\n                        payload: {\n                            informations: res,\n                            isAccountExist: false,\n                            isAccountValid: false\n                        }\n                    })\n                }\n\n            })\n            .catch((err) => {\n                _helper.History.push('/home')\n                dispatch({\n                    type: labels.DECRYPT_ERROR\n                })\n            });\n    };\n}\n\n/** Reply to an invitation \n * @param accept\n * @param body\n * @param query\n * @param member\n */\nfunction replyToInvitation (accept, body, query, member) {\n    return (dispatch) => {\n        if (accept) {\n            _service.Member.updateInvitation(body, query)\n                .then(isUpdated => {\n                    if (isUpdated) {\n                        _service.Permission.createMemberProjectPermission(member.memberId, query.projectId, 3, true)\n                            .then(res => {\n                                dispatch({\n                                    type: labels.INVITATION_REPLY\n                                })\n                            })\n                        /*_service.Action.createActivityForAllMembers({\n                            actionType: 2,\n                            actionTitle: member.memberPseudo + ' has join the project',\n                            actionDescription: member.memberPseudo + ' has accept the invitation.',\n                            memberId: query.memberId,\n                            projectId: query.projectId,\n                            actionDateCreation: moment(),\n                            mhaStatus: 0\n                        })*/\n                        _helper.History.push('/home')\n                    } else {\n                        dispatch({\n                            type: labels.INVITATION_REPLY_ERROR\n                        })\n                    }\n\n                })\n                .catch((err) => {\n                    dispatch({\n                        type: labels.INVITATION_REPLY_ERROR\n                    })\n                });\n        } else {\n            _service.Member.deleteInvitation(query)\n                .then(isDeleted => {\n                    if (isDeleted) {\n                        dispatch({\n                            type: labels.INVITATION_REPLY\n                        })\n                        _helper.History.push('/home')\n                    } else {\n                        dispatch({\n                            type: labels.INVITATION_REPLY_ERROR\n                        })\n                    }\n\n                })\n                .catch((err) => {\n                    dispatch({\n                        type: labels.INVITATION_REPLY_ERROR\n                    })\n                });\n        }\n    }\n}\n\nexport const invitationAction = {\n    labels,\n    isMemberExist,\n    replyToInvitation\n}","const labels = {\n    CREATE_TEAM: 'CREATE_TEAM',\n    CREATE_TEAM_ERROR: 'CREATE_TEAM_ERROR'\n}\n\nfunction createTeam (memberToken) {\n\n}\n\nexport const teamAction = {\n    labels,\n    createTeam\n}","import _service from \"../services\";\nimport _helper from \"../helpers\";\nimport moment from \"moment\";\n\nconst labels = {\n    LOAD_DASHBOARD: \"LOAD_DASHBOARD\",\n    LOAD_ALL_PROJECTS_FOR_MEMBER: \"LOAD_ALL_PROJECTS_FOR_MEMBER\",\n    LOAD_ALL_PROJECTS_FOR_MEMBER_ERROR: \"LOAD_ALL_PROJECTS_FOR_MEMBER_ERROR\",\n    CREATE_PROJECT: \"CREATE_PROJECT\",\n    CREATE_PROJECT_ERROR: \"CREATE_PROJECT_ERROR\",\n    SET_PROJECT_FAVORITE: \"SET_PROJECT_FAVORITE\",\n    SET_PROJECT_FAVORITE_ERROR: \"SET_PROJECT_FAVORITE_ERROR\"\n}\n\nfunction findAllProjectsMember (memberId) {\n    let query = {\n        memberId: memberId,\n        memberhasprojectStatus: 1\n    }\n    return dispatch => {\n        dispatch({ type: labels.LOAD_DASHBOARD })\n        _service.Project.getAllProjectsForMember(query)\n            .then(res => {\n                dispatch({\n                    type: labels.LOAD_ALL_PROJECTS_FOR_MEMBER,\n                    payload: res\n                });\n            })\n            .catch((err) => {\n                dispatch({\n                    type: labels.LOAD_ALL_PROJECTS_FOR_MEMBER_ERROR,\n                });\n            });\n    }\n}\n\nfunction createProject (memberId, projectTitle, projectVisibility, member) {\n    let body = {\n        projectTitle: projectTitle,\n        projectVisibility: projectVisibility,\n        projectStatus: 0\n    }\n    return dispatch => {\n        dispatch({ type: labels.LOAD_DASHBOARD })\n        _service.Project.createProjectFix(body)\n            .then(project => {\n                body = {\n                    projectId: project.projectId,\n                    memberId: memberId,\n                    memberhasprojectStatus: 1,\n                    projectIsFavorite: false\n                }\n                _service.Project.createProjectForMember(body)\n                    .then(mhp => {\n                        /** Let's create permission */\n                        let permissionId = 3\n                        let mhppState = true\n                        _service.Permission\n                            .createMemberProjectPermission(memberId, project.projectId, permissionId, mhppState)\n                            .then(permission => {\n\n                                _service.Action.createActivityForAllMembers({\n                                    actionType: 0,\n                                    actionTitle: \"Project was created\",\n                                    actionDescription: member.memberPseudo + \" has create the project '\" + projectTitle + \"'.\",\n                                    memberId: memberId,\n                                    projectId: project.projectId,\n                                    actionDateCreation: moment(),\n                                    mhaStatus: 0\n                                })\n                                    .then(res => {\n                                        dispatch({\n                                            type: labels.CREATE_PROJECT,\n                                            payload: {\n                                                project: {\n                                                    Project: project\n                                                },\n                                                contributors: 1\n                                            }\n                                        })\n                                        console.log(project.projectId)\n                                        _helper.History.push('/project/' + project.projectId)\n                                    })\n                                    .catch((err) => {\n                                        console.log(err)\n                                        dispatch({\n                                            type: labels.CREATE_PROJECT_ERROR,\n                                        });\n                                    });\n\n\n                            })\n                    })\n                    .catch((err) => {\n                        console.log(err)\n\n                        dispatch({\n                            type: labels.CREATE_PROJECT_ERROR,\n                        });\n                    });\n            })\n            .catch((err) => {\n                console.log(err)\n\n                dispatch({\n                    type: labels.CREATE_PROJECT_ERROR,\n                });\n            });\n    }\n}\n\nfunction setAsProjectFavorite (memberId, projectId, projectIsFavorite, index) {\n    let query = {\n        memberId: memberId,\n        projectId: projectId\n    }\n    let body = {\n        projectIsFavorite: projectIsFavorite\n    }\n    return dispatch => {\n        _service.Project.updateFix(query, body)\n            .then(res => {\n                dispatch({\n                    type: labels.SET_PROJECT_FAVORITE,\n                    payload: {\n                        projectIsFavorite: projectIsFavorite,\n                        index: index\n                    }\n                });\n            })\n            .catch((err) => {\n                dispatch({\n                    type: labels.SET_PROJECT_FAVORITE_ERROR,\n                });\n            });\n    }\n}\n\nexport const dashboardFixAction = {\n    labels,\n    findAllProjectsMember,\n    createProject,\n    setAsProjectFavorite\n}","import { dashboardAction } from './Dashboard.action';\nimport { signinAction } from './Signin.action';\nimport { signupAction } from './Signup.action';\nimport { navbarAction } from './Navbar.action';\nimport { notificationAction } from './Notification.action';\nimport { profileAction } from './Profile.action';\nimport { projectAction} from './Project.action';\nimport { listAction} from './List.action';\nimport { cardAction} from \"./Card.action\";\nimport { searchbarAction } from \"./Searchbar.action\";\nimport { invitationAction } from \"./Invitation.action\";\nimport { memberAction } from \"./Member.action\";\nimport { teamAction } from \"./Team.action\";\nimport { dashboardFixAction } from './DashboardFix.action';\n\nconst _action = {\n    dashboardAction,\n    signinAction,\n    signupAction,\n    navbarAction,\n    notificationAction,\n    profileAction,\n    projectAction,\n    listAction,\n    cardAction,\n    searchbarAction,\n    invitationAction,\n    memberAction,\n    teamAction,\n    dashboardFixAction\n}\n\nexport default _action","const labels = {\n\n}\n\nfunction searchMember(search_word) {\n    // todo search a member to add him\n}\n\nexport const memberAction = {\n    labels,\n    searchMember\n\n}","import _action from '../actions';\n\nconst labels = _action.signinAction.labels\nconst labelsNavbar = _action.navbarAction.labels\nconst labelsProfile = _action.profileAction.labels\n\n\nconst initialState = {\n    isLoading: true,\n    isPasswordReset: false,\n    member: {\n        memberId: -1,\n        memberFirstname: 'unknow',\n        memberLastname: 'unknow',\n        memberPseudo: 'unknow',\n        memberEmail: 'unknow@gmail.com'\n    }\n}\n\nexport function signin (state = initialState, action){\n    switch (action.type) {\n        case labels.LOGIN:\n            return {\n                ...state,\n                member: action.payload.member,\n                isLogged: true,\n                isLoading: false\n            };\n\n        case labels.ERROR:\n            return {\n                ...state,\n                msgError: action.payload,\n                isLogged: false\n            }\n\n        case labels.IS_LOGGED:\n            return {\n                ...state,\n                member: action.payload.member,\n                isLogged: action.payload.isLogged,\n                isLoading: false\n            }\n\n        case labels.IS_NOT_LOGGED:\n            return {\n                ...state,\n                member: {},\n                isLogged: action.payload.isLogged,\n                isLoading: false\n            }\n\n        case labelsNavbar.LOG_OFF:\n            return {\n                ...state,\n                isLogged: false,\n                member: {},\n                isLoading: false\n            }\n\n        case labelsProfile.UPDATE_MEMBER:\n            return {\n                ...state,\n                member: action.payload.member,\n            }\n\n        case labels.NEW_PASSWORD_SENT:\n            return {\n                ...state,\n                isPasswordReset: true,\n                resetPasswordMsg: 'New password sent.'\n            }\n\n        case labels.NEW_PASSWORD_FAILED:\n            return {\n                ...state,\n                isPasswordReset: true,\n                resetPasswordMsg: 'No email adress found.'\n            }\n\n        case labels.RESET_FIELD:\n            return {\n                ...state,\n                isPasswordReset: false,\n                resetPasswordMsg: ''\n            }\n\n        default:\n            return state\n    }\n}\n","import _action from '../actions';\n\nconst labels = _action.signupAction.labels\n\n\nconst initialState = {\n    isAccountValidNow: false,\n    msgError: ['', ''],\n    isInvitation: false,\n    isLoading: false\n}\n\nexport function signup (state = initialState, action){\n\n    switch (action.type) {\n        case labels.LOAD_SIGNUP:\n            return {\n                ...state,\n                isLoading: true\n            }\n\n        case labels.LOAD_INVITATION:\n            return {\n                ...state,\n                isLoading: true\n            }\n\n        case labels.SIGN_UP:\n            return {\n                ...state,\n                isLoading: false,\n                msgError: ['', '']\n            };\n\n        case labels.SIGN_UP_ERROR:\n            return {\n                ...state,\n                isLoading: false,\n                msgError: action.payload\n            }\n\n        case labels.VALIDATE_ACCOUNT_TOKEN:\n            return {\n                ...state,\n                isAccountValidNow: true\n            }\n\n        case labels.VALIDATE_ACCOUNT_TOKEN_ERROR:\n            return {\n                ...state,\n                isAccountValidNow: false\n            }\n\n        default:\n            return state\n    }\n}\n","import { navbarAction } from '../actions/Navbar.action';\nimport { notificationAction } from '../actions/Notification.action';\n\nconst labels = navbarAction.labels;\nconst notificationLabels = notificationAction.labels\n\nconst initialState = {\n    notifications: [],\n    notificationsUnread: 0\n};\n\nexport function navbar (state = initialState, action) {\n    switch (action.type) {\n        case labels.GET_ALL_NOTIFICATIONS:\n            return {\n                ...state,\n                notifications: action.payload.notifications,\n                notificationsUnread: action.payload.notificationsUnread,\n            };\n\n        case labels.GET_ALL_NOTIFICATIONS_ERROR:\n            return state;\n\n        case labels.UPDATE_NOTIFICATION:\n            return {\n                ...state,\n                notifications: action.payload.notifications,\n                notificationsUnread: action.payload.notificationsUnread\n            };\n\n        case notificationLabels.FILTER_ONLY_UNREAD:\n            return {\n                ...state,\n                notifications: action.payload.notifications,\n                notificationsUnarchived: action.payload.notificationsUnarchived\n            };\n\n        case notificationLabels.DISABLED_FILTER:\n            return {\n                ...state,\n                notifications: action.payload.notifications,\n                notificationsUnarchived: action.payload.notificationsUnarchived\n            };\n\n        default:\n            return state\n    }\n};\n","import { profileAction } from '../actions/Profile.action';\n\nconst labels = profileAction.labels\n\nconst initialState = {\n    updatePasswordMsg: '',\n    isPasswordUpdated: false,\n    isPasswordError: false,\n    isLoading: false\n};\n\nexport function profile (state = initialState, action) {\n    switch (action.type) {\n        case labels.LOAD_PROFILE_PICTURE:\n            return { ...state,\n                isLoading: true\n            };\n\n        case labels.UPDATE_MEMBER:\n            return { ...state,\n                updatePasswordMsg: action.payload.updatePasswordMsg,\n                isPasswordUpdated: true,\n                isPasswordError: false,\n                isLoading: false\n            };\n\n        case labels.UPDATE_PASSWORD:\n            return { ...state,\n                updatePasswordMsg: action.payload.updatePasswordMsg,\n                isPasswordUpdated: true,\n                isPasswordError: false\n            };\n\n        case labels.UPDATE_PASSWORD_ERROR:\n            return {\n                ...state,\n                updatePasswordMsg: action.payload.updatePasswordMsg,\n                isPasswordUpdated: false,\n                isPasswordError: true\n            };\n\n        default:\n            return state\n    }\n};\n","/**SOCKET IO CONFIG\n * Define url from where to listen and emit\n */\n\nimport io from \"socket.io-client\"\n\nconst socket = io('https://prello-ig.herokuapp.com')\n\nexport default socket\n\n","import { projectAction } from '../actions/Project.action';\nimport { listAction } from '../actions/List.action';\nimport { cardAction } from '../actions/Card.action';\nimport socket from '../helpers/SocketIo.helper'\nimport _helper from '../helpers'\n\nconst projectLabels = projectAction.labels\nconst listLabels = listAction.labels\nconst cardLabels = cardAction.labels\n\nconst initialState = {\n    lists: [],\n    members: [],\n    isLoading: false,\n    activities: [],\n    permissions: [],\n    maj: ''\n};\n\nexport function project (state = initialState, action) {\n   \n    switch (action.type) {\n        case projectLabels.LOAD:\n            return {\n                ...state,\n                isLoading: true\n            };\n\n        case projectLabels.LOAD_PROJECT:\n            return {\n                ...state,\n                isLoading: true\n            };\n\n        case cardLabels.LOAD_PROJECT:\n            return {\n                ...state,\n                isLoading: true\n            };\n\n        case projectLabels.GET_ALL_LISTS:\n\n            return {\n                ...state,\n                lists:action.payload,\n                isLoading: false\n            };\n\n        case projectLabels.CREATE_LIST:\n            let newList = action.payload\n            newList.CardListFks = []\n            let lists = [...state.lists,newList]\n             \n            socket.emit(\"updateLists\", {projectId:lists[0].projectId,lists:lists})\n            return {\n                ...state,\n                lists \n            };\n\n        case projectLabels.CREATE_LIST_ERROR:\n            return {\n                ...state,\n                isLoading: false\n            };\n\n        case listLabels.CREATE_CARD:\n            let listWithCard = Array.from(state.lists)\n            let findList = listWithCard.find(list => list.listId === action.payload.listId)\n            let findListIndex = listWithCard.findIndex(list => list.listId === action.payload.listId)\n            let notarchivedCardsCreate = findList.CardListFks.filter(card => card.cardStatus === 0)\n            let archivedCardsCreate = findList.CardListFks.filter(card => card.cardStatus === 1)\n            let newCreatedCard = action.payload\n            newCreatedCard.ActionCardFks = [] \n            newCreatedCard.AttachmentCardFks = [] \n            newCreatedCard.HaslabelCardFks = [] \n            newCreatedCard.MemberhascardCardFks = [] \n            newCreatedCard.TaskCardFks = [] \n            \n            notarchivedCardsCreate.push(action.payload)\n            findList.CardListFks = notarchivedCardsCreate.concat(archivedCardsCreate)\n            listWithCard.splice(findListIndex,1)\n            listWithCard.splice(findListIndex,0,findList)\n            socket.emit(\"updateLists\", {projectId:listWithCard[0].projectId,lists:listWithCard})\n            return {\n                ...state,\n                lists : listWithCard,\n                isLoading:false\n            };\n\n        case cardLabels.ADD_MEMBER_ON_CARD:\n            let newMember = action.payload.newMember\n            let listIndex = action.payload.listIndex\n            let cardIndexx = action.payload.cardIndex\n            let listsCards = Array.from(state.lists)\n\n            let element = {Member: newMember}\n\n            listsCards[listIndex].CardListFks[cardIndexx].MemberhascardCardFks.push(element)\n            socket.emit(\"updateLists\", {projectId:listsCards[0].projectId,lists:listsCards})\n\n            let maj2 = state.maj\n            if (maj2 === '') maj2 = ' '\n            else maj2 = ''\n            return {\n                ...state,\n                lists: listsCards,\n                maj: maj2\n            };\n\n        case cardLabels.DELETE_MEMBER:\n            let listIndex1 = action.payload.listIndex\n            let cardIndex1 = action.payload.cardIndex\n            let elementIndex = action.payload.elementIndex\n\n            let listsCards1 = Array.from(state.lists)\n\n            listsCards1[listIndex1].CardListFks[cardIndex1].MemberhascardCardFks.splice(elementIndex, 1)\n            socket.emit(\"updateLists\", {projectId:listsCards1[0].projectId,lists:listsCards1})\n\n            let maj3 = state.maj\n            if (maj3 === '') maj3 = ' '\n            else maj3 = ''\n\n            return {\n                ...state,\n                lists: listsCards1,\n                maj: maj3\n            };\n\n        case cardLabels.CREATE_LINK_LABEL:\n            let maj = state.maj\n            if (maj === '') maj = ' '\n            else maj = ''\n            return {\n                ...state,\n                maj: maj\n            }\n\n        case cardLabels.DELETE_LINK_LABEL:\n            let maj1 = state.maj\n            if (maj1 === '') maj1 = ' '\n            else maj1 = ''\n            return {\n                ...state,\n                maj: maj1\n            }\n\n        case listLabels.UPDATE_CARD:   \n            socket.emit(\"updateLists\", {projectId:action.payload[0].projectId,lists:action.payload})\n            return {\n                ...state,\n                lists : action.payload\n            }; \n        case listLabels.GET_ALL_CARDS:\n            return {\n                ...state,\n                cards: action.payload,\n            }; \n        case listLabels.UPDATE_LIST_TITLE:\n            let updateList  = state.lists.find(list => list.listId === action.payload.listId)\n            let updateListIndex =  state.lists.findIndex(list => list.listId === action.payload.listId)\n            let newListTitle = {...updateList, listTitle:action.payload.newListTitle}\n            let allList = Array.from(state.lists)\n            allList.splice(updateListIndex,1)\n            allList.splice(updateListIndex,0,newListTitle)\n            socket.emit(\"updateLists\", {projectId:allList[0].projectId,lists:allList})\n            return {\n                ...state,\n                lists: allList\n            };\n        case listLabels.UPDATE_LIST_STATUS:\n            let updateListStatus  = state.lists.find(list => list.listId === action.payload.listId)\n            let updateListStatusIndex =  state.lists.findIndex(list => list.listId === action.payload.listId)\n            let newListStatus = {...updateListStatus, listStatus:action.payload.listStatus}\n            let newLists = Array.from(state.lists)\n            newLists.splice(updateListStatusIndex,1)\n            newLists.splice(updateListStatusIndex,0,newListStatus)\n            socket.emit(\"updateLists\", {projectId:newLists[0].projectId,lists:newLists})\n            return {\n                ...state,\n                lists: newLists\n            };\n        case listLabels.DELETE_LIST:\n\n        const deletedListIndex = state.lists.findIndex(list => list.listId === action.payload )\n        const projectId = state.lists.find(list => list.listId === action.payload ).projectId\n        let newlists = Array.from(state.lists)\n        newlists.splice(deletedListIndex,1)\n        socket.emit(\"updateLists\", {projectId:projectId,lists:newlists})    \n            return {\n                ...state,\n                lists: newlists,\n            };\n        case projectLabels.GET_PROJECT_INFO:\n        socket.emit(\"updateProject\", {projectId:action.payload[0].projectId,info:action.payload[0]})  \n            return {\n                ...state,\n                projectInfo: action.payload[0]\n            };\n\n        case projectLabels.UPDATE_PROJECT_INFO:\n        return {\n            ...state,\n            projectInfo: action.payload\n        };\n        case projectLabels.GET_ALL_MEMBERS:\n            return {\n                ...state,\n                members: action.payload,\n                isLoading: false\n            };\n        //TODO\n        case projectLabels.SEND_INVITATION:\n            return {\n                ...state\n            };\n        case projectLabels.GET_MEMBER_STATUS:\n            return {\n                ...state,\n                isAdmin : action.payload\n            };\n        //TODO\n        case projectLabels.REMOVE_MEMBER_FROM_PROJECT:\n            return {\n                ...state,\n                maj: ''\n            };\n        //TODO\n        case projectLabels.SET_MEMBER_ADMIN:\n            return {\n                ...state,\n            };\n        //TODO\n        case projectLabels.GET_ACTIVITY:\n            return {\n                ...state,\n                activities: action.payload\n            };\n\n        case projectLabels.GET_ACTIVITY_ERROR:\n            return {\n                ...state,\n            };\n\n        case projectLabels.GET_ALL_LABELS:\n            return {\n                 ...state,\n            };\n\n        case projectLabels.INVITATION_SUCCESS:\n            return {\n                ...state,\n                isLoading: false\n            };\n\n        case projectLabels.INVITATION_ERROR || projectLabels.GET_ALL_PERMISSIONS_ERROR || projectLabels.UPDATE_PERMISSION_MEMBER_ERROR:\n            return {\n                ...state,\n                isLoading: false\n            };\n\n        case projectLabels.GET_ALL_PERMISSIONS:\n            return {\n                ...state,\n                permissions: action.payload,\n                isLoading: false\n            };\n        case projectLabels.REMOVE_MEMBER_FROM_PROJECT_ERROR:\n                return {\n                    ...state,\n                    isLoading: false\n                };\n\n        case projectLabels.MEMBER_HAS_PROJECT:\n            return {\n                 ...state,\n                 loggedHasProject : action.payload\n            };\n\n        case projectLabels.UPDATE_PERMISSION_MEMBER:\n            return {\n                ...state,\n                members : action.payload\n            };\n        case listLabels.UPDATE_POSITION_LISTS:\n            socket.emit(\"updateLists\", {projectId:action.payload[0].projectId,lists:action.payload})\n            return {\n                ...state,\n                lists : action.payload\n            };\n\n        case cardLabels.DELETE_CARD:\n\n            let updatedLists = Array.from(state.lists)\n            updatedLists[action.payload.listIndex].CardListFks.splice(action.payload.cardIndex, 1)\n            socket.emit(\"updateLists\", {projectId:updatedLists[0].projectId,lists:updatedLists}) \n            return {\n                ...state,\n                lists : updatedLists,\n                isLoading: false\n            };\n       case cardLabels.ARCHIVE_CARD:\n            //Copy array of list\n            let archivedCards = Array.from(state.lists)\n            // modify card status\n            archivedCards[action.payload.listIndex].CardListFks[action.payload.cardIndex].cardStatus = 1\n            // reorder archived and not archived card of the updated list in order to correspond to good index\n            let notarchivedCardsArray = archivedCards[action.payload.listIndex].CardListFks.filter(card => card.cardStatus === 0)\n            let archivedCardsArray = archivedCards[action.payload.listIndex].CardListFks.filter(card => card.cardStatus === 1)\n            //concat both lists\n            archivedCards[action.payload.listIndex].CardListFks = notarchivedCardsArray.concat(archivedCardsArray)\n            socket.emit(\"updateLists\", {projectId:archivedCards[0].projectId,lists:archivedCards}) \n            return {\n                ...state,\n                lists : archivedCards,\n            };\n            case listLabels.RESTORE_CARD:\n            //Copy array of list\n            let arrayOfList = Array.from(state.lists)\n\n            //Find index of the list \n            let listWithCardIndex = arrayOfList.findIndex(list => list.listId === action.payload.listId)\n            let cardIndex = arrayOfList[listWithCardIndex].CardListFks.findIndex(card => card.cardId === action.payload.cardId)\n\n            // modify card status\n            arrayOfList[listWithCardIndex].CardListFks[cardIndex].cardStatus = 0\n            // reorder archived and not archived card of the updated list in order to correspond to good index\n            let notarchivedCards = arrayOfList[listWithCardIndex].CardListFks.filter(card => card.cardStatus === 0)\n            let archiveCards =  arrayOfList[listWithCardIndex].CardListFks.filter(card => card.cardStatus === 1)\n            \n            //concat both lists\n            arrayOfList[listWithCardIndex].CardListFks = notarchivedCards.concat(archiveCards)\n            socket.emit(\"updateLists\", {projectId:arrayOfList[0].projectId,lists:arrayOfList})  \n            return {\n                ...state,\n                lists : arrayOfList,\n            };\n\n        case listLabels.UPDATE_DATE_CARD:\n            let listsOld = Array.from(state.lists)\n\n            let listDueDateIndex = listsOld.findIndex(list => list.listId === action.payload.card.listId)\n\n            let cardDueDateIndex = listsOld[listDueDateIndex].CardListFks.findIndex(card => card.cardId === action.payload.card.cardId)\n\n            listsOld[listDueDateIndex].CardListFks[cardDueDateIndex].cardDateTarget =  action.payload.dueDate\n            socket.emit(\"updateLists\", {projectId:listsOld[0].projectId,lists:listsOld}) \n            return {\n                ...state,\n                lists : listsOld\n            };\n        case listLabels.UPDATE_DESCRIPTION_CARD:\n            let oldLists = Array.from(state.lists)\n\n            let listDescriptionIndex = oldLists.findIndex(list => list.listId === action.payload.card.listId)\n\n            let cardDescriptionIndex = oldLists[listDescriptionIndex].CardListFks.findIndex(card => card.cardId === action.payload.card.cardId)\n\n            oldLists[listDescriptionIndex].CardListFks[cardDescriptionIndex].cardDescription =  action.payload.description\n            socket.emit(\"updateLists\", {projectId:oldLists[0].projectId,lists:oldLists}) \n            return {\n                ...state,\n                lists : oldLists\n            };\n        case listLabels.UPDATE_TITLE_CARD:\n            let listsArray = Array.from(state.lists)\n\n            let listTitleIndex = listsArray.findIndex(list => list.listId === action.payload.card.listId)\n\n            let cardTitleIndex = listsArray[listTitleIndex].CardListFks.findIndex(card => card.cardId === action.payload.card.cardId)\n\n            listsArray[listTitleIndex].CardListFks[cardTitleIndex].cardTitle=  action.payload.title\n            socket.emit(\"updateLists\", {projectId:listsArray[0].projectId,lists:listsArray}) \n            return {\n                ...state,\n                lists : listsArray\n            };       \n            \n        default:\n            return state\n    }\n}","import { cardAction } from '../actions/Card.action';\n\nconst labels = cardAction.labels\n\nconst initialState = {\n    card: {\n        cardTitle: '',\n        cardDescription: '',\n        cardStatus: -1,\n        cardDateTarget: null,\n        cardDateEnd: null,\n        cardFather: null,\n        cardChild: null,\n        listId: null,\n        comments: []\n    },\n    isLoading: false,\n    membersOnCard: [],\n    membersOffCard: []\n};\n\nexport function card (state = initialState, action) {\n    switch (action.type) {\n        case labels.LOAD_CARD:\n            return { ...state, isLoading: true };\n        case labels.UPDATE_CARD:\n            return { ...state, card: action.payload };\n        case labels.CREATE_TASK:\n            return { ...state,\n                card: action.payload,\n                isLoading: false\n            };\n        case labels.DELETE_TASK:\n            return { ...state, card: action.payload };\n        case labels.GET_CARD:\n            return { ...state, card: action.payload };\n        case labels.GET_ALL_LABEL:\n            return { ...state, labels: action.payload };\n        case labels.UPDATE_TASK:\n            return { ...state, card: action.payload };\n        case labels.DELETE_CARD:\n            return { ...state};\n        case labels.ADD_MEMBER_ON_CARD:\n            return {\n                ...state,\n                membersOnCard: action.payload.membersOnCard,\n                membersOffCard: action.payload.membersOffCard,\n                isLoading: false\n            };\n\n        case labels.DELETE_MEMBER:\n            return {\n                ...state,\n                membersOnCard: action.payload.membersOnCard,\n                membersOffCard: action.payload.membersOffCard,\n                isLoading: false\n            };\n\n        case labels.DELETE_MEMBER_ERROR:\n            return {\n                ...state,\n                isLoading: false\n            };\n\n        case labels.ADD_MEMBER_ON_CARD_ERROR:\n            return {\n                ...state,\n                isLoading: false\n            };\n\n        case labels.FIND_ALL_MEMBERS_ON_CARD_ERROR:\n            return {\n                ...state,\n                isLoading: false\n            };\n\n        case labels.FIND_ALL_MEMBERS_ON_CARD:{\n            return {\n                ...state,\n                membersOnCard: action.payload.membersOnCard,\n                membersOffCard: action.payload.membersOffCard,\n                isLoading: false\n            };\n        }\n\n        case labels.FIND_ALL_COMMENTS_ON_CARD:\n            let card = state.card\n            card.comments = action.payload\n            return { ...state, card: card };\n\n        case labels.ADD_COMMENTS_ON_CARD:\n            let cd = state.card\n            cd.comments.push(action.payload)\n            return { ...state, card: cd };\n\n        default:\n            return state\n    }\n};\n","import { searchbarAction } from '../actions/Searchbar.action';\n\nconst labels = searchbarAction.labels\n\nconst initialState = {\n    projectsFound: [],\n    listsFound: [],\n    cardsFound: []\n};\n\nexport function searchbar (state = initialState, action) {\n    switch (action.type) {\n        case labels.SEARCH_PROJECTS:\n            return { ...state,\n                projectsFound: action.payload\n            };\n\n        case labels.SEARCH_PROJECTS_ERROR:\n            return {\n                ...state,\n                projectsFound: []\n            };\n\n        case labels.SEARCH_LISTS:\n            return { ...state,\n                listsFound: action.payload\n            };\n\n        case labels.SEARCH_LISTS_ERROR:\n            return {\n                ...state,\n                listsFound: []\n            };\n\n        case labels.SEARCH_CARDS:\n            return { ...state,\n                cardsFound: action.payload\n            };\n\n        case labels.SEARCH_CARDS_ERROR:\n            return {\n                ...state,\n                cardsFound: []\n            };\n\n        case labels.SEARCH_RESET:\n            return {\n                ...state,\n                projectsFound: [],\n                listsFound: [],\n                cardsFound: []\n            };\n\n        default:\n            return state\n    }\n};\n","import { invitationAction } from '../actions/Invitation.action';\nimport { signupAction } from '../actions/Signup.action';\n\nconst labels = invitationAction.labels\nconst labelsSignup = signupAction.labels\n\nconst initialState = {\n    isLoading: true,\n};\n\nexport function invitation (state = initialState, action) {\n    switch (action.type) {\n        case labelsSignup.LOAD_INVITATION:\n            return { ...state,\n                isLoading: true\n            };\n\n        case labelsSignup.SIGN_UP_ERROR:\n            return { ...state,\n                isLoading: false\n            };\n\n        case labels.MEMBER_EXIST:\n            return { ...state,\n                project: action.payload.project,\n                member: action.payload.member,\n                isAccountExist: true,\n                isAccountValid: action.payload.isAccountValid,\n                isLoading: false\n            };\n\n        case labels.MEMBER_NOT_EXIST:\n            return {\n                ...state,\n                informations: action.payload.informations,\n                isAccountExist: false,\n                isLoading: false\n            };\n\n        case labels.DECRYPT_ERROR:\n            return {\n                ...state,\n                isLoading: false\n            };\n\n        case labels.INVITATION_REPLY:\n            return {\n                ...state,\n                isLoading: false\n            };\n\n        case labels.INVITATION_REPLY_ERROR:\n            return {\n                ...state,\n                isLoading: false\n            };\n\n        case labelsSignup.INVITATION_ACCEPTED:\n            return {\n                ...state,\n                isAccountValidNow: true,\n                isLoading: false,\n                member: action.payload.member\n            }\n\n        default:\n            return state\n    }\n};\n","import _action from '../actions';\n\nconst labels = _action.dashboardFixAction.labels\n\nconst initialState = {\n    isLoading: false,\n    projects: []\n};\n\nexport function dashboardFix (state = initialState, action) {\n    switch (action.type) {\n        case labels.LOAD_DASHBOARD:\n            return {\n                ...state,\n                isLoading: true\n            };\n\n        case labels.CREATE_PROJECT:\n            let newProjects = Array.from(state.projects)\n            newProjects.push(action.payload)\n\n            return {\n                ...state,\n                isLoading: false,\n                projects: newProjects\n            };\n\n        case labels.CREATE_PROJECT_ERROR:\n            return {\n                ...state,\n                isLoading: false\n            };\n\n        case labels.LOAD_ALL_PROJECTS_FOR_MEMBER:\n            return {\n                ...state,\n                isLoading: false,\n                projects: action.payload\n            };\n\n        case labels.LOAD_ALL_PROJECTS_FOR_MEMBER_ERROR:\n            return {\n                ...state,\n                isLoading: false\n            };\n\n        case labels.SET_PROJECT_FAVORITE:\n            let newProjects1 = Array.from(state.projects)\n            let index = action.payload.index\n            newProjects1[index].project.projectIsFavorite = !newProjects1[index].project.projectIsFavorite\n            return {\n                ...state,\n                isLoading: false,\n                projects: newProjects1\n            };\n\n        case labels.SET_PROJECT_FAVORITE_ERROR:\n            return {\n                ...state,\n                isLoading: false\n            };\n\n        default:\n            return state\n    }\n};\n","import { combineReducers } from 'redux';\nimport { dashboard } from './Dashboard.reducer';\nimport { signin } from './Signin.reducer';\nimport { signup } from './Signup.reducer';\nimport { navbar } from './Navbar.reducer';\nimport { profile } from './Profile.reducer';\nimport { project } from './Project.reducer';\nimport { card } from \"./Card.reducer\";\nimport { searchbar } from \"./Searchbar.reducer\";\nimport { invitation } from \"./Invitation.reducer\";\nimport { dashboardFix } from './DashboardFix.reducer';\n\nconst rootReducer = combineReducers({\n    dashboard,\n    signin,\n    signup,\n    navbar,\n    profile,\n    project,\n    card,\n    searchbar,\n    invitation,\n    dashboardFix\n});\n\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\n\nexport const Store = createStore(\n    rootReducer,\n    composeWithDevTools(\n        applyMiddleware(\n            thunk\n        )\n    )\n);","import Request from './Request.helper';\nimport History from './History.helper';\nimport Method from './Method.helper'\n\nconst helper = {\n    Request,\n    History,\n    Method\n}\n\nexport default helper\n\nexport * from './Store.helper';\n","/** REACT */\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\n/** MATERIAL UI */\nimport { style } from './Style'\nimport Grid from \"@material-ui/core/Grid/Grid\";\n\n/** ICONS */\nclass WaveIt extends React.Component {\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <Grid container justify=\"center\" alignItems=\"center\" className={ classes.fullScreen }>\n                <iframe className={ classes.waveScreen } src=\"https://polytech.wave-it.fr/agenda\"/>\n            </Grid>\n        )\n    }\n}\n\nWaveIt.propTypes = {\n    classes: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n})\n\nconst mapDispatchToProps = {\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(withStyles(style)(WaveIt));","export const style = theme => ({\n    fullScreen: {\n        bottom: 0,\n        top: 48,\n        position: 'absolute',\n        padding: theme.spacing.unit * 2,\n    },\n    waveScreen: {\n        height: '100%',\n        width: '100%',\n    }\n});","import React from 'react'\nimport { connect } from 'react-redux'\nimport _action from '../../actions'\nimport { style } from './Style'\nimport logo from '../../public/images/prello-logo-2.png'\n\n// CSS imports\nimport TextField from '@material-ui/core/TextField';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Grid from \"@material-ui/core/Grid/Grid\";\nimport CloudIcon from '@material-ui/icons/Cloud'\nimport Typography from \"@material-ui/core/Typography/Typography\";\nimport _helper from \"../../helpers\";\nimport HowToRegIcon from \"@material-ui/icons/HowToReg\"\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\nclass Signin extends React.Component {\n    constructor (props) {\n        super(props)\n\n        this.submit = this.submit.bind(this);\n\n        if (props.invitation) {\n            this.state = {\n                memberEmail: props.invitation.memberEmail,\n                memberPassword: '',\n            };\n        } else {\n            this.state = {\n                memberEmail: '',\n                memberPassword: '',\n            };\n        }\n        this.signinWithGithub = this.signinWithGithub.bind(this);\n    }\n    submit () {\n        let memberEmail = this.state.memberEmail\n        let memberPassword = this.state.memberPassword\n\n        if (this.props.invitation) {\n            this.props.onLogin(memberEmail, memberPassword, null)\n        } else {\n            this.props.onLogin(memberEmail, memberPassword, '/home')\n        }\n    }\n\n    signinWithGithub () {\n        this.props.onSigninWithGithub()\n    }\n\n    goToForgottenPassword () {\n        _helper.History.push('/password-forgotten')\n    }\n\n    goToSignUp () {\n        _helper.History.push('/signup')\n    }\n\n    goToDownloadPage () {\n        _helper.History.push('/download')\n    }\n\n    handleChange (event) {\n        var { name, value } = event.target; \n        this.setState({ [name]: value });\n    }\n\n    render() {\n        const { classes, errorMsg } = this.props;\n        return (\n            <Grid container alignItems='flex-start' className={classes.layout}>\n\n                <Grid xs={1} sm={3} md={5} item className={classes.leftLayout}>\n\n                </Grid>\n\n                <Grid xs={10} sm={9} md={7} item className={classes.rightLayout}>\n                    <Grid container justify=\"center\">\n\n                        <Grid xs={12} item className={classes.xsMarginBottom}>\n                            <form>\n                                <Grid spacing={16} alignItems='flex-start' container>\n                                    <Grid xs={6} sm={4} item>\n                                        <TextField\n                                            error={!!errorMsg}\n                                            required\n                                            disabled={this.props.invitation}\n                                            className={classes.textfield}\n                                            name=\"memberEmail\"\n                                            id='email'\n                                            label=\"Email\"\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            type=\"email\"\n                                            value={this.state.memberEmail}\n                                            fullWidth\n                                            onChange={this.handleChange.bind(this)}\n                                        />\n                                    </Grid>\n                                    <Grid xs={6} sm={4} item>\n                                        <TextField\n                                            required\n                                            className={classes.textfield}\n                                            error={!!errorMsg}\n                                            id='password'\n                                            name=\"memberPassword\"\n                                            label=\"Password\"\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            type=\"password\"\n                                            fullWidth\n                                            onChange={this.handleChange.bind(this)}\n                                        />\n                                        <Button\n                                            size=\"small\"\n                                            onClick={this.goToForgottenPassword}\n                                        >\n                                            Forgot password\n                                        </Button>\n                                    </Grid>\n                                    <Grid xs={12} sm={4} item>\n                                        <Button\n                                            variant=\"contained\"\n                                            fullWidth\n                                            size=\"large\"\n                                            color=\"primary\"\n                                            onClick={this.submit}\n                                        >\n                                            Sign In\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n                            </form>\n                        </Grid>\n\n                        <Grid xs={12} item>\n                            <Grid container>\n                                <Grid xs={1} sm={2} lg={3} item>\n                                </Grid>\n                                <Grid xs={11} sm={8} lg={6} item>\n                                    <Grid justify='center' container className={classes.xsMarginBottom}>\n                                        <Grid item>\n                                            <img src={logo} width=\"70\" alt=\"prello logo\"/>\n                                        </Grid>\n                                    </Grid>\n\n                                    <Typography variant=\"h4\" gutterBottom className={classes.xsMarginBottom}>\n                                        Start managing your projects and share them\n                                    </Typography>\n                                    { !this.props.invitation ? (\n                                        <div>\n                                            <Typography variant=\"h6\" gutterBottom>\n                                                Join Prello today\n                                            </Typography>\n\n                                            <Button\n                                            variant=\"outlined\"\n                                            color=\"primary\"\n                                            fullWidth\n                                            className={classes.button}\n                                            onClick={this.goToSignUp}\n                                            >\n                                                Create your account\n                                                <HowToRegIcon className={classes.rightIcon} />\n                                            </Button>\n\n                                            <Button\n                                            variant=\"outlined\"\n                                            color=\"inherit\"\n                                            fullWidth\n                                            className={classes.button}\n                                            onClick={this.signinWithGithub}\n                                            >\n                                                Sign In with Github\n                                                <CloudIcon className={classes.rightIcon} />\n                                            </Button>\n\n                                            <Button\n                                                variant=\"outlined\"\n                                                color=\"inherit\"\n                                                fullWidth\n                                                className={classes.button}\n                                                onClick={this.goToDownloadPage}\n                                            >\n                                                Download desktop app\n                                                <GetAppIcon className={classes.rightIcon} />\n                                            </Button>\n                                        </div>\n                                    ) : null }\n                                </Grid>\n                            </Grid>\n                        </Grid>\n\n\n                        <Grid item>\n\n                        </Grid>\n                    </Grid>\n\n                    <label className={classes.errorLabel}>{errorMsg}</label>\n                </Grid>\n            </Grid>\n        )\n    }\n\n\n}\n\nSignin.propTypes = {\n    classes: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n    errorMsg: state.signin.msgError\n})\nconst mapDispatchToProps = {\n    onLogin : _action.signinAction.signin,\n    onSigninWithGithub: _action.signinAction.signinWithGithub,\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(style)(Signin));","import bg from '../../public/images/bg-singin.png'\n\nexport const style = theme => ({\n    layout: {\n        height: '100%',\n        margin: 0\n    },\n    textfield: {\n        marginTop: 0\n    },\n    paper: {\n        marginTop: theme.spacing.unit * 8,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`,\n    },\n    avatar: {\n        margin: theme.spacing.unit,\n        backgroundColor: theme.palette.secondary.main,\n    },\n    rightLayout: {\n        height: '100%',\n        padding: theme.spacing.unit * 2,\n    },\n    leftLayout: {\n        height: '100%',\n        //backgroundColor: '#2c387e',\n        backgroundImage: `url(${bg})`,\n        padding: theme.spacing.unit * 2,\n    },\n    errorLabel: {\n        marginTop: theme.spacing.unit * 2,\n    },\n    cardPresentation: {\n        marginTop: 200\n    },\n    rightIcon: {\n        marginLeft: theme.spacing.unit,\n    },\n    button: {\n        margin: theme.spacing.unit,\n    },\n    card: {\n        minWidth: 275,\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n    typography: {\n        useNextVariants: true,\n    },\n    paddingSide: {\n        paddingLeft: theme.spacing.unit * 23,\n        paddingRight: theme.spacing.unit * 23,\n    },\n    xsMarginBottom: {\n        marginBottom: theme.spacing.unit * 5\n    },\n    logo: {\n        marginRight: 'auto',\n        marginLeft:'auto'\n    }\n});","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst styles = theme => ({\n    progress: {\n        margin: theme.spacing.unit * 2,\n    },\n});\n\nfunction Loader(props) {\n    const { classes } = props;\n    return (\n        <div>\n            <CircularProgress className={classes.progress} size={150} />\n        </div>\n    );\n}\n\nLoader.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Loader);","import Loader from '../ui/loader/Loader'\nimport React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { withStyles } from \"@material-ui/core\";\nimport { style } from \"./Style\";\nimport PropTypes from 'prop-types';\n\nclass LoaderPage extends Component {\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <Grid container justify=\"center\" className={classes.layout}>\n                <Loader />\n            </Grid>\n        );\n    }\n\n}\n\nLoaderPage.propTypes = {\n    classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(style)(LoaderPage);","export const style = theme => ({\n    layout: {\n        paddingTop: theme.spacing.unit * 10,\n    }\n})","import React from 'react'\nimport { connect } from 'react-redux'\nimport _action from '../../actions'\nimport _helper from '../../helpers'\nimport { style } from './Style'\nimport logo from '../../public/images/prello-logo-2.png'\n\nimport TextField from '@material-ui/core/TextField';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Grid from \"@material-ui/core/Grid/Grid\";\nimport LoaderPage from \"../loaderPage/LoaderPage\";\n\nclass Signup extends React.Component {\n    constructor (props) {\n        super(props)\n        this.handleChange = this.handleChange.bind(this)\n        this.generateTextfields = this.generateTextfields.bind(this)\n        this.submit = this.submit.bind(this);\n\n        this.state = {\n            memberFirstname: '',\n            memberLastname: '',\n            memberPseudo: '',\n            memberEmail: '',\n            memberPassword: '',\n            memberCheckPassword: ''\n        };\n\n        if (props.invitation) {\n            this.state.memberEmail = props.invitation.memberEmail\n        }\n    }\n\n    submit () {\n        let isInvitation = false\n        this.state.memberPseudo.trim().toLowerCase()\n        if (this.props.invitation) isInvitation = true\n        this.props.onAdd(this.state, isInvitation)\n    }\n\n    goBackToLogin () {\n        _helper.History.push('/login')\n    }\n\n    handleChange (event) {\n        var { name, value } = event.target;\n        this.setState({ [name]: value });\n    }\n\n    // Loop that create textfields\n    generateTextfields = () => {\n        const labelsForClient = [\n            'First name',\n            'Last name',\n            'Pseudo',\n            'Email',\n            'Password',\n            'Password confirmation'\n        ]\n        const type = [\n            'text',\n            'text',\n            'text',\n            'email',\n            'password',\n            'password'\n        ]\n\n        let values = Object.values(this.state)\n        let keys = Object.keys(this.state)\n        var textfields = [];\n        let index = 0\n\n        for (let item of values) {\n            textfields.push(\n                <TextField\n                    error={\n                        this.props.errorMsg[1] === keys[index] ||\n                        (this.props.errorMsg[1] === 'all' && item === '')\n                    }\n                    disabled={this.props.invitation && type[index] === 'email'}\n                    required\n                    key={keys[index]}\n                    name={keys[index]}\n                    label={labelsForClient[index]}\n                    value={item}\n                    fullWidth\n                    type={type[index]}\n                    onChange={this.handleChange}\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                />\n            )\n            index += 1\n        }\n        return textfields\n    }\n\n    render() {\n        const {classes} = this.props;\n        return (\n            <div>\n                { this.props.isLoading ? (\n                    <LoaderPage/>\n                ) : (\n                    <Grid justify='center' className={classes.layout} container>\n                        <Grid justify='center' container className={classes.logo}>\n                            <Grid item>\n                                <img src={logo} width=\"60\" alt=\"prello logo\"/>\n                            </Grid>\n                        </Grid>\n                        <Typography component=\"h1\" variant=\"h5\">\n                            Create your account\n                        </Typography>\n\n                        <Grid justify='center' container className={ classes.marginBottom }>\n                            <Grid xs={10} sm={6} md={4} item>\n                                <form className={classes.form}>\n                                    {this.generateTextfields()}\n                                </form>\n\n                                <Grid container>\n                                    <Grid container justify=\"center\" className={ classes.marginBottom }>\n                                        <Typography variant=\"overline\">\n                                            {this.props.errorMsg[0]}\n                                        </Typography>\n                                    </Grid>\n                                    <Grid xs={6} className={ classes.paddingRight } item>\n                                        <Button\n                                            variant=\"outlined\"\n                                            fullWidth color=\"primary\"\n                                            onClick={this.goBackToLogin}\n                                        >\n                                            Back\n                                        </Button>\n                                    </Grid>\n                                    <Grid xs={6} className={ classes.paddingLeft } item>\n                                        <Button\n                                            variant=\"contained\"\n                                            fullWidth color=\"primary\"\n                                            onClick={this.submit}\n                                        >\n                                            Sign Up\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                )}\n\n            </div>\n        )\n    }\n}\n\nSignup.propTypes = {\n    classes: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n    errorMsg: state.signup.msgError,\n    isInvitation: state.signup.isInvitation,\n    isLoading: state.signup.isLoading\n})\n\nconst mapDispatchToProps = {\n    onAdd : _action.signupAction.signup\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(style)(Signup));","export const style = theme => ({\n    layout: {\n        height: '100%',\n    },\n    paper: {\n        marginTop: theme.spacing.unit * 8,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`,\n    },\n    avatar: {\n        margin: theme.spacing.unit,\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing.unit,\n        marginBottom: theme.spacing.unit * 3,\n    },\n    submit: {\n        marginTop: theme.spacing.unit * 3,\n\n    },\n    marginBottom: {\n        marginBottom: theme.spacing.unit * 3,\n    },\n    logo: {\n        marginTop: theme.spacing.unit * 3,\n        marginBottom: theme.spacing.unit * 2,\n    },\n    paddingLeft: {\n        paddingLeft: theme.spacing.unit,\n    },\n    paddingRight: {\n        paddingRight: theme.spacing.unit,\n    }\n});","import React from 'react'\nimport { connect } from 'react-redux'\nimport { withStyles} from \"@material-ui/core\";\nimport { style } from './Style'\nimport _action from \"../../actions\";\n\nimport LoaderPage from \"../loaderPage/LoaderPage\"\nimport Grid from \"@material-ui/core/Grid/Grid\";\nimport logo from \"../../public/images/prello-logo-2.png\";\nimport Typography from \"@material-ui/core/Typography/Typography\";\nimport Button from \"@material-ui/core/Button/Button\";\nimport DoneIcon from \"@material-ui/icons/Done\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport PropTypes from 'prop-types';\nimport Signup from \"../signup/Signup\";\nimport Signin from \"../signin/Signin\";\n\nclass Invitation extends React.Component {\n    constructor(props){\n        super(props)\n        this.componentDidMount = this.componentDidMount.bind(this)\n        this.acceptInvitation = this.acceptInvitation.bind(this)\n        this.refuseInvitation = this.refuseInvitation.bind(this)\n    }\n\n    componentDidMount () {\n        let params = this.props.location.pathname.split('/')\n        let token = params[2]\n        this.props.onDecryptInvitation(token)\n\n    }\n\n    acceptInvitation () {\n        let body = {\n            memberhasprojectStatus: 1,\n            projectIsFavorite: false\n        }\n        let query = {\n            projectId: this.props.project.projectId,\n            memberId: this.props.member.memberId\n        }\n        this.props.onReplyToInvitation(true, body, query, this.props.member)\n    }\n\n    refuseInvitation () {\n        let query = {\n            projectId: this.props.project.projectId,\n            memberId: this.props.member.memberId\n        }\n        this.props.onReplyToInvitation(false, null, query)\n    }\n\n    render() {\n        const {classes} = this.props;\n        console.log(this.props)\n        return (\n            <div className={ classes.layout }>\n                {this.props.isLoading || this.props.isLoadingGlobal ? (\n                    <LoaderPage/>\n                ) : this.props.isLogged ? (\n                    <div>\n                        {this.props.isAccountValid ? (\n                            <Grid container justify=\"center\">\n                                <Grid justify='center' container className={classes.logo}>\n                                    <Grid item>\n                                        <img src={logo} width=\"100\" alt=\"prello logo\"/>\n                                    </Grid>\n                                </Grid>\n\n                                <Grid justify=\"center\" container>\n                                    <Typography variant=\"h5\" gutterBottom className={classes.marginBottom}>\n                                        You received an invitation to join a project.\n                                    </Typography>\n                                </Grid>\n                                <Grid justify=\"center\" container>\n                                    <Typography variant=\"overline\" gutterBottom className={classes.marginBottom}>\n                                        {this.props.project.projectTitle}\n                                    </Typography>\n                                </Grid>\n\n                                <Grid container justify=\"center\">\n                                    <Grid item xs={8} sm={4} md={3}>\n                                        <Button\n                                            fullWidth\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            className={classes.button}\n                                            onClick={this.acceptInvitation}\n                                        >\n                                            join\n                                            <DoneIcon className={classes.rightIcon} />\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n\n                                <Grid container justify=\"center\">\n                                    <Grid item xs={8} sm={4} md={3}>\n                                        <Button\n                                            fullWidth\n                                            variant=\"outlined\"\n                                            color=\"secondary\"\n                                            className={classes.button}\n                                            onClick={this.refuseInvitation}\n                                        >\n                                            Refuse\n                                            <CloseIcon className={classes.rightIcon} />\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        ) : (\n                            <div>Error</div>\n                        )}\n                    </div>\n                ) : this.props.member.memberStatus === 1 ? (\n                    <Signin parent='Invitation' invitation={{memberEmail: this.props.member.memberEmail}} />\n                ) : (\n                    <Signup invitation={{memberEmail: this.props.member.memberEmail}} />\n                )}\n            </div>\n        )\n    }\n}\n\nInvitation.propTypes = {\n    classes: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n    isLoadingGlobal: state.signin.isLoading,\n    isLoading: state.invitation.isLoading,\n    isAccountExist: state.invitation.isAccountExist,\n    isAccountValid: state.invitation.isAccountValid,\n    isLogged: state.signin.isLogged,\n    member: state.invitation.member,\n    project: state.invitation.project\n})\n\nconst mapDispatchToProps = {\n    onDecryptInvitation: _action.invitationAction.isMemberExist,\n    onReplyToInvitation: _action.invitationAction.replyToInvitation\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(withStyles(style)(Invitation));","export const style = theme => ({\n    marginBottom: {\n        marginBottom: theme.spacing.unit * 10\n    },\n    logo: {\n        marginTop: theme.spacing.unit * 5,\n        marginBottom: theme.spacing.unit * 10\n    },\n    rightIcon: {\n        marginLeft: theme.spacing.unit,\n    },\n    button: {\n        margin: theme.spacing.unit,\n    },\n    layout: {\n        height: '100%'\n    }\n});\n\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Paper from '@material-ui/core/Paper';\nimport { withStyles } from '@material-ui/core/styles';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport connect from \"react-redux/es/connect/connect\";\n\nconst styles = theme => ({\n    menuItem: {\n        '&:focus': {\n            backgroundColor: theme.palette.primary.main,\n            '& $primary, & $icon': {\n                color: theme.palette.common.white\n            }\n        },\n    },\n    primary: {},\n    icon: {},\n});\n\nclass Menu extends React.Component {\n    /* Need to get a property links which is an array of objects\n     * object = {label: String, route: String, icon: <Icon/>}\n     */\n\n    constructor (props) {\n        super(props)\n        this.displayComponent = this.displayComponent.bind(this);\n    }\n\n    displayComponent = (event) => {\n        let route = event.currentTarget.id\n        this.props.history.push(route)\n    }\n\n    /* Build the item list of the menu */\n    buildLinks = () => {\n        const {classes} = this.props;\n        let menuList = []\n\n        for (let link of this.props.links) {\n            menuList.push(\n                <MenuItem id={link.route} className={classes.menuItem} key={link.label} onClick={this.displayComponent}>\n                    <ListItemIcon className={classes.icon}>\n                        {link.icon}\n                    </ListItemIcon>\n                    <ListItemText classes={{primary: classes.primary}} inset primary={link.label}/>\n                </MenuItem>\n            )\n        }\n        return menuList\n    }\n\n    render() {\n        return (\n            <Paper>\n                <MenuList>\n                    {this.buildLinks()}\n                </MenuList>\n            </Paper>\n        );\n    }\n}\n\nMenu.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n})\n\nexport default connect(mapStateToProps, null)(withStyles(styles)(Menu));","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst  classic = createMuiTheme({\n    palette: {\n        secondary: {\n            main: '#ffc50a'\n        }\n    },\n});\n\nconst  successWarningError = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#4caf50'\n        }\n    },\n});\n\nexport const Theme = {\n    classic,\n    successWarningError\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst styles = theme => ({\n    close: {\n        padding: theme.spacing.unit / 2,\n    },\n});\n\nclass SimpleSnackbar extends React.Component {\n    /*  You need to add two methods in parent component\n     *\n     *  nameOfTheMethod () = {\n     *      this.setState({ openSnackbar: true })\n     *  }\n     *\n     *  handleSnackbarClose = (event, reason) => {\n     *      if (reason === 'clickaway') {\n     *          return;\n     *      }\n     *      this.setState({ openSnackbar: false });\n     *  };\n     *\n     *  Add this field to the state : openSnackbar: false\n     *\n     *  Call the component like this :\n     *  <Snackbar handleSnackbarClose={this.handleSnackbarClose} open={this.state.openSnackbar} message=\"myMsg\"/>\n     */\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <div>\n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left',\n                    }}\n                    open={this.props.open}\n                    autoHideDuration={6000}\n                    onClose={this.props.handleSnackbarClose}\n                    ContentProps={{\n                        'aria-describedby': 'message-id',\n                    }}\n                    message={<span id=\"message-id\">{this.props.message}</span>}\n                    action={[\n                        <IconButton\n                            key=\"close\"\n                            aria-label=\"Close\"\n                            color=\"inherit\"\n                            className={classes.close}\n                            onClick={this.props.handleSnackbarClose}\n                        >\n                            <CloseIcon />\n                        </IconButton>,\n                    ]}\n                />\n            </div>\n        );\n    }\n}\n\nSimpleSnackbar.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(SimpleSnackbar);","import React from 'react'\nimport { connect } from 'react-redux'\nimport TextField from \"@material-ui/core/TextField/TextField\";\nimport Grid from \"@material-ui/core/Grid/Grid\";\nimport {MuiThemeProvider} from \"@material-ui/core/es\";\nimport {Theme} from \"../../ui/palette/Palette\";\nimport Button from \"@material-ui/core/Button/Button\";\nimport SaveIcon from '@material-ui/icons/Save';\nimport { style } from './Style'\nimport {withStyles} from \"@material-ui/core\";\nimport Snackbar from \"../../ui/snackbar/Snackbar\"\nimport _action from \"../../../actions\";\n\nclass Password extends React.Component {\n    constructor (props) {\n        super(props)\n        this.submit = this.submit.bind(this)\n        this.handleChange = this.handleChange.bind(this)\n        this.generateTextfields = this.generateTextfields.bind(this)\n        this.checkFields = this.checkFields.bind(this)\n        this.handleSnackbarClose = this.handleSnackbarClose.bind(this)\n        this.state = {\n            labelsForClient: ['Current password', 'New password', 'Confirmation'],\n            oldPassword: '',\n            newPassword: '',\n            newPasswordConfirmation: '',\n            openSnackbar: false,\n            updatePasswordMsg: this.props.updatePasswordMsg\n        }\n    }\n\n    // Submit the member form to update db and store\n    submit () {\n        if (this.checkFields()) {\n            this.setState({\n                oldPassword: '',\n                newPassword: '',\n                newPasswordConfirmation: '',\n                openSnackbar: true\n            })\n            this.props.onUpdateMemberPassword({\n                memberId: this.props.memberId,\n                memberPassword: this.state.oldPassword,\n                newMemberPassword: this.state.newPassword\n            })\n        }\n    }\n\n    // Disabled submit button if one field is empty\n    checkFields () {\n        return (\n            this.state.oldPassword !== '' &&\n            this.state.newPassword !== '' &&\n            this.state.newPasswordConfirmation !== '' &&\n            this.state.newPassword === this.state.newPasswordConfirmation\n        )\n    }\n\n    // Update passwords state with new informations of textfields\n    handleChange = name => event => {\n        this.setState({ [name]: event.target.value.trim() });\n    };\n\n    // Handle the snackbar state\n    handleSnackbarClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        this.setState({ openSnackbar: false });\n    };\n\n    // Loop that reate textfields\n    generateTextfields = () => {\n        const { classes } = this.props;\n\n        let attributes = {\n            oldPassword: this.state.oldPassword,\n            newPassword: this.state.newPassword,\n            newPasswordConfirmation: this.state.newPasswordConfirmation\n        }\n\n        let values = Object.values(attributes)\n        let keys = Object.keys(attributes)\n        var textfields = [];\n        let index = 0\n\n        for (let item of values) {\n            textfields.push(\n                <Grid container justify=\"center\" item key={keys[index]}>\n                    <TextField\n                        id={keys[index]}\n                        label={this.state.labelsForClient[index]}\n                        className={classes.textField}\n                        value={item}\n                        onChange={this.handleChange(keys[index])}\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        type=\"password\"\n                    />\n                </Grid>\n            )\n            index += 1\n        }\n        return textfields\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <Grid\n                container\n                alignItems=\"center\"\n                justify=\"center\"\n            >\n                <Grid item>\n                    <MuiThemeProvider theme={Theme.successWarningError}>\n                        <Button\n                            color=\"primary\"\n                            variant=\"contained\"\n                            size=\"small\"\n                            className={classes.button}\n                            onClick={this.submit}\n                        >\n                            <SaveIcon className={(classes.leftIcon, classes.iconSmall)} />\n                             Change\n                        </Button>\n                    </MuiThemeProvider>\n                </Grid>\n                <Grid xs={12} item>\n                    <form className={classes.container} noValidate autoComplete=\"off\">\n                        {this.generateTextfields()}\n                    </form>\n                </Grid>\n\n                <Snackbar\n                    handleSnackbarClose={this.handleSnackbarClose}\n                    open={this.state.openSnackbar}\n                    message={this.props.updatePasswordMsg}\n                />\n            </Grid>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    memberId: state.signin.member.memberId,\n    updatePasswordMsg: state.profile.updatePasswordMsg\n})\n\nconst mapDispatchToProps = {\n    onUpdateMemberPassword: _action.profileAction.updateMemberPassword\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(withStyles(style)(Password));","export const style = theme => ({\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n    },\n    dense: {\n        marginTop: 16,\n    },\n    menu: {\n        width: 200,\n    },\n    button: {\n        margin: theme.spacing.unit,\n        color: '#fff'\n    },\n    leftIcon: {\n        marginRight: theme.spacing.unit,\n    },\n    rightIcon: {\n        marginLeft: theme.spacing.unit,\n    },\n    iconSmall: {\n        fontSize: 20,\n    },\n});","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst styles = theme => ({\n    progress: {\n        margin: theme.spacing.unit * 2,\n    },\n});\n\nfunction MiniLoader(props) {\n    const { classes, size } = props;\n    return (\n        <div>\n            <CircularProgress className={classes.progress} size={size || 30} />\n        </div>\n    );\n}\n\nMiniLoader.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(MiniLoader);","import React from 'react'\nimport { connect } from 'react-redux'\nimport { style } from './Style'\nimport TextField from \"@material-ui/core/TextField/TextField\";\nimport {withStyles} from \"@material-ui/core\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch/Switch\";\nimport Button from \"@material-ui/core/Button/Button\";\nimport SaveIcon from '@material-ui/icons/Save';\nimport { Theme } from \"../../ui/palette/Palette\";\nimport {MuiThemeProvider} from \"@material-ui/core/es\";\nimport Grid from \"@material-ui/core/Grid/Grid\";\nimport _action from \"../../../actions\";\nimport Snackbar from \"../../ui/snackbar/Snackbar\"\nimport Avatar from \"@material-ui/core/Avatar/Avatar\";\nimport MiniLoader from \"../../ui/loader/MiniLoader\"\nimport classNames from 'classnames';\nimport Divider from \"@material-ui/core/Divider/Divider\";\nimport AddAPhotoIcon from '@material-ui/icons/AddAPhoto';\nimport { FilePond } from 'react-filepond';\nimport 'filepond/dist/filepond.min.css';\n\nclass Overview extends React.Component {\n    constructor (props) {\n        super(props)\n        this.handleChange = this.handleChange.bind(this)\n        this.submit = this.submit.bind(this)\n        this.changePicture = this.changePicture.bind(this)\n        this.handleProfilePicture = this.handleProfilePicture.bind(this)\n\n        this.state = {\n            labelsForClient: ['First name', 'Last name', 'Pseudo'],\n            memberFirstname: this.props.member.memberFirstname,\n            memberLastname: this.props.member.memberLastname,\n            memberPseudo: this.props.member.memberPseudo,\n            memberEmail: this.props.member.memberEmail,\n            isEditable: false,\n            openSnackbar: false\n        }\n    }\n\n    // Update member state with new informations of textfields\n    handleChange = name => event => {\n        this.setState({ [name]: event.target.value });\n    };\n\n    // Make textfields editable\n    handleIsEditable = name => event => {\n        this.setState({ [name]: event.target.checked });\n    };\n\n    // Submit the member form to update db and store\n    submit () {\n        let body = {\n            memberId: this.props.member.memberId,\n            memberFirstname: this.state.memberFirstname,\n            memberLastname: this.state.memberLastname,\n            memberEmail: this.state.memberEmail,\n            memberPseudo: this.state.memberPseudo\n        }\n        this.props.onUpdateMember(body)\n        this.setState({\n            openSnackbar: true,\n            isEditable: false\n        })\n    }\n\n    handleProfilePicture (event) {\n        this.setState({\n            file: event.target.files[0]\n        })\n    }\n\n    changePicture () {\n        if (this.state.file) {;\n            const formData = new FormData()\n            formData.append('image', this.state.file[0], this.state.file[0].name)\n\n            this.props.onUpdateMemberPicture(formData, this.props.member.memberId)\n            this.setState({\n                openSnackbar: true,\n                isEditable: false\n            })\n        }\n    }\n\n    // Handle the snackbar state\n    handleSnackbarClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        this.setState({ openSnackbar: false });\n    };\n\n    // Loop that create textfields\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <Grid\n                container\n                alignItems=\"center\"\n                justify=\"center\"\n            >\n                <Grid container justify='center' className={ classes.logoContainer }>\n                    { !this.props.isLoading ? (\n                        <Avatar\n                            alt={this.state.memberFirstname + 'sharp'}\n                            src={this.props.member.memberPicture}\n                            className={classNames(classes.avatar, classes.bigAvatar)}\n                        />\n                    ) : (\n                        <MiniLoader size={200} />\n                    )}\n\n                </Grid>\n                <Grid justify='center' alignItems='center' container>\n                    <Grid xs={4} item>\n                        <FilePond\n                            maxFiles={3}\n                            className={classes.upload }\n                            onupdatefiles={(fileItems) => {\n                                // Set current file objects to this.state\n                                this.setState({\n                                    file: fileItems.map(fileItem => fileItem.file)\n                                });\n                            }}\n                        />\n                    </Grid>\n                    <Button\n                        color=\"primary\"\n                        variant=\"contained\"\n                        size=\"small\"\n                        className={classes.button}\n                        disabled={!this.state.isEditable}\n                        onClick={this.changePicture}\n                    >\n                        <AddAPhotoIcon className={(classes.leftIcon, classes.iconSmall)} />\n                    </Button>\n                </Grid>\n                <Grid justify='center' container>\n                    <Grid item xs={12}>\n                        <Divider/>\n                    </Grid>\n                </Grid>\n                <Grid container justify='flex-start'>\n                    <FormControlLabel\n                        control={\n                            <Switch\n                                checked={this.state.isEditable}\n                                onChange={this.handleIsEditable('isEditable')}\n                                value=\"isEditable\"\n                                color=\"primary\"\n                            />\n                        }\n                        label=\"Edit informations\"\n                    />\n                    <MuiThemeProvider theme={Theme.successWarningError}>\n                        <Button\n                            color=\"primary\"\n                            variant=\"contained\"\n                            size=\"small\"\n                            className={classes.button}\n                            disabled={!this.state.isEditable}\n                            onClick={this.submit}\n                        >\n                            <SaveIcon className={(classes.leftIcon, classes.iconSmall)} />\n                            Save\n                        </Button>\n                    </MuiThemeProvider>\n                </Grid>\n                <Grid item>\n\n                </Grid>\n                <Grid container justify=\"flex-start\">\n                    <form className={classes.container} noValidate autoComplete=\"off\">\n                        <TextField\n                            disabled={!this.state.isEditable}\n                            id='memberFirstname'\n                            label='Firstname'\n                            className={classes.textField}\n                            value={this.state.memberFirstname}\n                            onChange={this.handleChange('memberFirstname')}\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                        />\n                        <TextField\n                            disabled={!this.state.isEditable}\n                            id='memberLastname'\n                            label='Lastname'\n                            className={classes.textField}\n                            value={this.state.memberLastname}\n                            onChange={this.handleChange('memberLastname')}\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                        />\n                        <TextField\n                            disabled={!this.state.isEditable || this.props.member.memberIsLinkWithGithub}\n                            id='memberPseudo'\n                            label='Pseudo'\n                            className={classes.textField}\n                            value={this.state.memberPseudo}\n                            onChange={this.handleChange('memberPseudo')}\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                        />\n                        <TextField\n                            disabled={!this.state.isEditable || this.props.member.memberEmail !== null}\n                            id='memberEmail'\n                            label='Email'\n                            className={classes.textField}\n                            value={this.state.memberEmail}\n                            onChange={this.handleChange('memberEmail')}\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                        />\n                    </form>\n                </Grid>\n                <Snackbar\n                    handleSnackbarClose={this.handleSnackbarClose}\n                    open={this.state.openSnackbar}\n                    message=\"Informations updated.\"\n                />\n            </Grid>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    member: state.signin.member,\n    isLoading: state.profile.isLoading\n})\n\nconst mapDispatchToProps = {\n    onUpdateMember: _action.profileAction.updateMember,\n    onUpdateMemberPicture: _action.profileAction.updateMemberPicture\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(withStyles(style)(Overview));","export const style = theme => ({\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n    },\n    dense: {\n        marginTop: 16,\n    },\n    menu: {\n        width: 200,\n    },\n    button: {\n        margin: theme.spacing.unit,\n        color: '#fff'\n    },\n    leftIcon: {\n        marginRight: theme.spacing.unit,\n    },\n    rightIcon: {\n        marginLeft: theme.spacing.unit,\n    },\n    iconSmall: {\n        fontSize: 20,\n    },\n    avatar: {\n        margin: 10,\n    },\n    bigAvatar: {\n        width: 200,\n        height: 200,\n    },\n    logoContainer: {\n        marginBottom: theme.spacing.unit * 5,\n    },\n    upload: {\n        color: 'black',\n        width: '100%'\n    }\n});","import React from 'react'\nimport { connect } from 'react-redux'\nimport Menu from '../ui/menu/Menu'\nimport {Grid, withStyles} from \"@material-ui/core\";\nimport {Redirect, Route, Router, Switch} from \"react-router-dom\";\nimport Password from './password/Password'\nimport Overview from \"./overview/Overview\";\nimport AccountBoxIcon from '@material-ui/icons/AccountBox'\nimport FingerprintIcon from '@material-ui/icons/Fingerprint'\nimport _helper from '../../helpers'\nimport { style } from './Style'\n\nclass Profile extends React.Component {\n\n    render() {\n\n        const links = [\n            {label: 'Overview', route: '/profile/overview', icon: <AccountBoxIcon/>},\n            {label: 'Change Password', route: '/profile/password', icon: <FingerprintIcon/>}\n        ];\n\n        const { classes } = this.props;\n\n        return (\n            <Grid container spacing={16} className={classes.body}>\n                <Grid item xs={3} >\n                    <Menu links={links} history={_helper.History}/>\n                </Grid>\n\n                <Grid item xs={9}>\n                    <Router history={_helper.History}>\n                        <Switch>\n                            <Route component={Overview} exact path='/profile/overview'/>\n                            <Route component={Password} exact path='/profile/password'/>\n                            <Route component={Overview} exact path='/profile/parameters'/>\n                            <Route path='*' render={() => <Redirect to=\"/profile/overview\" />}/>\n                        </Switch>\n                    </Router>\n                </Grid>\n            </Grid>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n})\n\nconst mapDispatchToProps = {\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(withStyles(style)(Profile));","export const style = theme => ({\n    body: {\n        width: '100%',\n        paddingLeft: 8\n    },\n});\n\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport FormControlLabel from \"@material-ui/core/FormControlLabel/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox/Checkbox\";\nimport _action from \"../../../actions\";\nimport connect from \"react-redux/es/connect/connect\";\nimport Tooltip from \"@material-ui/core/Tooltip/Tooltip\";\nimport Fade from \"@material-ui/core/Fade/Fade\";\n\nconst styles = {\n    card: {\n        width: '100%',\n    },\n    cardUnread: {\n        width: '100%',\n        backgroundColor: '#e7ecff'\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        paddingBottom: 0,\n    },\n    content: {\n        paddingTop: 10,\n        paddingBottom: 0,\n    }\n};\n\nclass Notification extends React.Component {\n    /*  Need to get a property notification which is an objects\n     *  object = {\n     *      actionId: Int,\n     *      actionType: Int,\n     *      actionTitle: String,\n     *      actionDescription: String,\n     *      memberId: Int\n     *  }\n     */\n\n    constructor (props) {\n        super(props)\n        this.handleChange = this.handleChange.bind(this);\n\n        this.state = {\n            isRead: this.props.notification.mhaStatus === 1,\n            updatedNotifications: []\n        }\n    }\n\n    handleChange = name => event => {\n        this.setState({ [name]: event.target.checked });\n        var item = this.props.notification\n        var index = this.props.notifications.indexOf(item)\n        if (event.target.checked) {\n            item.mhaStatus = 1\n        }\n        else item.mhaStatus = 0\n\n        // Update the notification in the store\n        this.props.onHandleCheckbox(this.props.notifications, item, index, event.target.checked, this.props.notificationsUnread)\n\n        // Store the new item in navbar array, which will update the database\n        // this.props.updateNotification(item)\n    };\n\n    computeBackground = () => {\n        const { classes } = this.props;\n        if (this.props.notification.mhaStatus === 1) return classes.card\n        else return classes.cardUnread\n    }\n\n    render() {\n        const { classes } = this.props;\n        const notification = this.props.notification\n\n        return (\n            <Card className={this.computeBackground()}>\n                <CardContent className={classes.content}>\n                    <Typography align='right' variant=\"caption\" className={classes.pos}>\n                        {notification.Action.actionDateCreation}\n                    </Typography>\n                    <Tooltip\n                        TransitionComponent={Fade}\n                        TransitionProps={{ timeout: 600 }}\n                        title=\"Mark as read\"\n                        placement=\"top-start\">\n                        <FormControlLabel\n                            control={\n                                <Checkbox\n                                    checked={this.state.isRead}\n                                    onChange={this.handleChange('isRead')}\n                                    value=\"isRead\"\n                                    color=\"primary\"\n                                />\n                            }\n                            label={notification.Action.actionTitle}\n                        />\n                    </Tooltip>\n                    <Typography className={classes.pos} variant=\"caption\">\n                        {notification.Action.actionDescription}\n                    </Typography>\n                </CardContent>\n            </Card>\n        );\n    }\n}\n\nNotification.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    notifications: state.navbar.notifications,\n    notificationsUnread: state.navbar.notificationsUnread\n})\n\nconst mapDispatchToProps = {\n    onHandleCheckbox: _action.navbarAction.handleCheckboxNotification\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(withStyles(styles)(Notification));","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Notification from \"./Notification\"\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\n\nconst styles = theme => ({\n    menuItem: {},\n    primary: {},\n    icon: {},\n    list: {\n        width: 300,\n    },\n    fullList: {\n        width: 'auto',\n    }\n});\n\nclass NotificationList extends React.Component {\n    /*  Need to get a property notifications which is an array of objects\n     *  object = {\n     *      actionId: Int,\n     *      actionType: Int,\n     *      actionTitle: String,\n     *      actionDescription: String,\n     *      memberId: Int\n     *  }\n     */\n    constructor (props) {\n        super(props)\n        this.state = {\n\n        }\n    }\n\n    render() {\n        const {classes} = this.props;\n\n        return (\n            <div className={classes.list}>\n                <List>\n                    {this.props.notifications.map((notification, index) =>\n                        this.props.unreadFilter ?\n                            notification.mhaStatus === 0 ?\n                                <ListItem key={index}>\n                                    <Notification\n                                        notification={notification}\n                                        notifications={this.props.notifications}\n                                        notificationsUnread={this.props.notificationsUnread}\n                                    />\n                                </ListItem>\n                            : null\n                        :\n                            <ListItem key={index}>\n                                <Notification\n                                    notification={notification}\n                                    notifications={this.props.notifications}\n                                    notificationsUnread={this.props.notificationsUnread}\n                                />\n                            </ListItem>\n                    )}\n                </List>\n            </div>\n        );\n    }\n}\n\nNotificationList.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(NotificationList);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport deburr from 'lodash/deburr';\nimport Downshift from 'downshift';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { style } from './Style'\nimport connect from \"react-redux/es/connect/connect\";\nimport _action from \"../../../../actions\";\nimport _helper from \"../../../../helpers\";\n\nimport Typography from \"@material-ui/core/Typography/Typography\";\nimport Divider from \"@material-ui/core/Divider/Divider\";\n\nclass SearchResults extends React.Component {\n\n    constructor (props) {\n        super(props)\n        this.fetchSuggestions = this.fetchSuggestions.bind(this)\n        this.getSuggestions = this.getSuggestions.bind(this)\n        this.setWrapperRef = this.setWrapperRef.bind(this);\n        this.handleClickOutside = this.handleClickOutside.bind(this);\n        this.renderSuggestion = this.renderSuggestion.bind(this)\n        this.handleClickSuggestion = this.handleClickSuggestion.bind(this)\n        this.renderSuggestion.propTypes = {\n            highlightedIndex: PropTypes.number,\n            index: PropTypes.number,\n            itemProps: PropTypes.object,\n            selectedItem: PropTypes.string,\n            suggestion: PropTypes.shape({ label: PropTypes.string }).isRequired,\n        };\n        this.state = ({\n            searchInput: '',\n            isOpen: false\n        })\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    renderSuggestion({ suggestion, index, itemProps, highlightedIndex, selectedItem, type }) {\n        const isSelected = (selectedItem || '').indexOf(suggestion.label) > -1;\n        var id = ''\n        if (type === 'project') id += 'project/' + suggestion.id\n        if (type === 'list') id += 'list/' + suggestion.projectId + '/' + suggestion.id\n        if (type === 'card') id += 'card/' + suggestion.projectId + '/' + suggestion.listId + '/' + suggestion.id\n        const { classes } = this.props;\n\n        return (\n            <MenuItem\n                {...itemProps}\n                key={id}\n                id={id}\n                className={ classes.highlight }\n                onClick={this.handleClickSuggestion}\n                component=\"div\"\n                style={{\n                    fontWeight: isSelected ? 500 : 400,\n                }}\n            >\n\n                {suggestion.label}\n            </MenuItem>\n        );\n    }\n\n    fetchSuggestions = (event) => {\n        var { name, value } = event.target;\n        this.setState({ [name]: value });\n\n        this.props.onSearchProjects(value, this.props.memberId)\n        this.props.onSearchLists(value, this.props.memberId)\n        this.props.onSearchCards(value, this.props.memberId)\n    }\n\n    /**\n     * Set the wrapper ref for the click outside handler\n     */\n    setWrapperRef(node) {\n        this.wrapperRef = node;\n    }\n\n    /**\n     * Alert if clicked on outside of element\n     */\n    handleClickOutside(event) {\n        if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\n            this.setState({ isOpen: false })\n        } else {\n            this.setState({ isOpen: true })\n        }\n    }\n\n    getSuggestions(value, array) {\n        const inputValue = deburr(value.trim());\n        const inputValueLower = inputValue.toLowerCase();\n        const inputValueCapitalize = inputValue.charAt(0).toUpperCase() + inputValue.slice(1);\n\n        const inputLength = inputValue.length;\n\n        let count = 0;\n\n        return inputLength === 0\n            ? []\n            : array.filter(suggestion => {\n                const keep =\n                    count < 5 && ( suggestion.label.includes(inputValue) ||\n                    suggestion.label.includes(inputValueLower) ||\n                    suggestion.label.includes(inputValueCapitalize)\n                    );\n\n                if (keep) {\n                    count += 1;\n                }\n                return keep;\n            });\n    }\n\n    handleClickSuggestion (event) {\n        let split = event.target.id.split('/')\n        let route = '/project/' + split[1]\n        if (split[0] === 'card') route += '/' + split[2] + '/' + split[3]\n        this.setState({\n            isOpen: false,\n            searchInput: ''\n        })\n        this.props.onResetSearchArrays()\n        _helper.History.push(route)\n    }\n\n    render() {\n\n        const { classes } = this.props;\n        return (\n            <div className={classes.root} ref={this.setWrapperRef}>\n                <Downshift id=\"downshift-simple\">\n                    {({\n                          getInputProps,\n                          getItemProps,\n                          getMenuProps,\n                          highlightedIndex,\n                          inputValue,\n                          isOpen,\n                          selectedItem,\n                      }) => (\n                        <div className={classes.container}>\n                            <TextField\n                                InputProps={{\n                                    classes: {\n                                        root: classes.inputRoot,\n                                        input: classes.inputInput,\n                                    }\n                                }}\n                                required\n                                id='searchInput'\n                                name=\"searchInput\"\n                                fullWidth\n                                onChange={this.fetchSuggestions}\n                                value={this.state.searchInput}\n                            />\n                            <div {...getMenuProps()}>\n                                {this.state.isOpen && this.state.input !== '' ? (\n                                    <Paper className={classes.paper} square>\n                                        {this.props.projects.length > 0 ?(\n                                            <div>\n                                                <div id='label' className={classes.labelSearchTitle}>\n                                                    <Typography variant=\"overline\" >\n                                                        Projects {this.props.projects.length}\n                                                    </Typography>\n                                                </div>\n                                                <Divider/>\n                                                {this.getSuggestions(this.state.searchInput, this.props.projects).map((suggestion, index) => {\n                                                        return this.renderSuggestion({\n                                                            suggestion,\n                                                            index,\n                                                            itemProps: getItemProps({item: suggestion.label}),\n                                                            highlightedIndex,\n                                                            selectedItem,\n                                                            type: 'project'\n                                                        })\n                                                    }\n                                                )}\n                                                <Divider/>\n                                            </div>\n                                        ) : null}\n\n                                        {this.props.lists.length > 0 ?(\n                                            <div>\n                                                <div id='label' className={classes.labelSearchTitle}>\n                                                    <Typography variant=\"overline\" >\n                                                        Lists\n                                                    </Typography>\n                                                </div>\n                                                <Divider/>\n                                                {this.getSuggestions(this.state.searchInput, this.props.lists).map((suggestion, index) => {\n                                                        return this.renderSuggestion({\n                                                            suggestion,\n                                                            index,\n                                                            itemProps: getItemProps({item: suggestion.label}),\n                                                            highlightedIndex,\n                                                            selectedItem,\n                                                            type: 'list'\n                                                        })\n                                                    }\n                                                )}\n                                                <Divider/>\n                                            </div>\n                                        ) : null}\n\n                                        {this.props.cards.length > 0 ?(\n                                            <div>\n                                                <div id='label' className={classes.labelSearchTitle}>\n                                                    <Typography variant=\"overline\" >\n                                                        Cards\n                                                    </Typography>\n                                                </div>\n                                                <Divider/>\n                                                {this.getSuggestions(this.state.searchInput, this.props.cards).map((suggestion, index) => {\n                                                        return this.renderSuggestion({\n                                                            suggestion,\n                                                            index,\n                                                            itemProps: getItemProps({item: suggestion.label}),\n                                                            highlightedIndex,\n                                                            selectedItem,\n                                                            type: 'card'\n                                                        })\n                                                    }\n                                                )}\n                                            </div>\n                                        ) : null}\n                                    </Paper>\n                                ) : null}\n                            </div>\n                        </div>\n                    )}\n                </Downshift>\n            </div>\n        );\n    }\n}\n\nSearchResults.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    projects: state.searchbar.projectsFound,\n    lists: state.searchbar.listsFound,\n    cards: state.searchbar.cardsFound,\n    memberId: state.signin.member.memberId\n})\nconst mapDispatchToProps = {\n    onSearchProjects : _action.searchbarAction.searchProjects,\n    onSearchLists : _action.searchbarAction.searchLists,\n    onSearchCards : _action.searchbarAction.searchCards,\n    onResetSearchArrays: _action.searchbarAction.resetSearchArrays\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(style)(SearchResults));","export const style = theme => ({\n    root: {\n        flexGrow: 1,\n        //height: 250,\n    },\n    container: {\n        flexGrow: 1,\n        position: 'relative',\n    },\n    paper: {\n        position: 'absolute',\n        zIndex: 2,\n        opacity: 1,\n        marginTop: theme.spacing.unit,\n        left: 0,\n        right: 0,\n    },\n    chip: {\n        margin: `${theme.spacing.unit / 2}px ${theme.spacing.unit / 4}px`,\n    },\n    inputRoot: {\n        color: 'inherit',\n        width: '100%',\n    },\n    inputInput: {\n        paddingTop: theme.spacing.unit,\n        paddingRight: theme.spacing.unit,\n        paddingBottom: theme.spacing.unit,\n        paddingLeft: theme.spacing.unit * 10,\n        transition: theme.transitions.create('width'),\n\n        width: '100%',\n        [theme.breakpoints.up('md')]: {\n            width: 200,\n        },\n    },\n    divider: {\n        height: theme.spacing.unit * 2,\n    },\n    labelSearchTitle: {\n        paddingLeft: theme.spacing.unit * 2\n    },\n    highlight: {\n        // WARNING : Trigger a warning in the console. Need to find another way to hover result's list.\n        /*'&:hover:not($disabled):not($error):not($focused):before': {\n            //backgroundColor: '#e72b34',\n            borderBottomColor: '#cdcde7',\n        },*/\n    }\n});\n\n\n","import React from 'react';\nimport { connect } from 'react-redux'\nimport { Link } from \"react-router-dom/\";\n\nimport _helper from '../../../helpers'\nimport _action from \"../../../actions\";\n\n// Components\nimport NotificationList from '../../ui/notification/NotificationList'\nimport SearchResults from \"./searchResults/SearchResults\"\nimport Logo from '../../../public/images/prello-logo-2.png'\n\n// Material UI\nimport Menu from '@material-ui/core/Menu';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport Drawer from \"@material-ui/core/Drawer/Drawer\";\nimport Divider from \"@material-ui/core/Divider/Divider\";\nimport Button from \"@material-ui/core/Button/Button\";\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport CalendarTodayIcon from \"@material-ui/icons/CalendarToday\"\n\n// Material UI style\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { style } from './Style'\nimport { Theme } from \"../../ui/palette/Palette\";\nimport { MuiThemeProvider } from \"@material-ui/core/es/styles\";\nimport Grid from \"@material-ui/core/Grid/Grid\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch/Switch\";\n\nclass Navbar extends React.Component {\n\n    constructor (props) {\n        super(props)\n\n        this.logOff = this.logOff.bind(this);\n\n        // Notifications\n        this.updateNotifications = this.updateNotifications.bind(this)\n        this.handleFilterChange = this.handleFilterChange.bind(this)\n        this.toggleDrawer = this.toggleDrawer.bind(this)\n\n        // Profile\n        this.displayComponent = this.displayComponent.bind(this)\n\n        // Others\n        this.goToDownloadPage = this.goToDownloadPage.bind(this)\n        this.goToWaveIt = this.goToWaveIt.bind(this)\n\n        this.state = {\n            anchorEl: null,\n            mobileMoreAnchorEl: null,\n            resultsAnchorEl: null,\n            right: false,\n            showSearchResults: false,\n            filterOnlyUnread: false\n        };\n    }\n\n    componentDidMount () {\n        this.props.onGetAllNonArchivedNotifications()\n    }\n\n    /* ================= Profile regular ================= */\n    handleProfileMenuOpen = event => {\n        this.setState({\n            anchorEl: event.currentTarget\n        });\n    };\n    handleMenuClose = (event) => {\n        this.setState({\n            anchorEl: null\n        });\n        this.displayComponent(event)\n        this.handleMobileMenuClose();\n    };\n    displayComponent = (event) => {\n        let route = event.currentTarget.id\n        if (route !== '/login' && route !== '') {\n            _helper.History.push(route)\n        }\n    }\n\n    /* ================= Profile mobile ================= */\n    handleMobileMenuOpen = event => {\n        this.setState({ mobileMoreAnchorEl: event.currentTarget });\n    };\n    handleMobileMenuClose = () => {\n        this.setState({ mobileMoreAnchorEl: null });\n    };\n\n    /** ================= Notifications ================= */\n    toggleDrawer = (side, open) => () => {\n        this.updateNotifications()\n        this.setState({\n            [side]: open,\n        });\n    }\n    updateNotifications () {\n        this.props.onUpdateNotifications(this.props.notifications)\n    }\n    handleFilterChange = name => event => {\n        this.setState({ [name]: event.target.checked });\n    };\n    handleFilter = name => event => {\n        this.setState({ [name]: event.target.checked });\n    };\n\n    /** ================= Search results ================= */\n    handleSearchResultsOpen = event => {\n        this.setState({showSearchResults: event.target.id === \"searchbar\" });\n    };\n    handleSearchResultsClose = () => {\n        this.setState({ showSearchResults: false });\n    };\n\n    /** ================= Other methods ================= */\n    logOff (event) {\n        this.handleMenuClose(event)\n        this.props.onLogOff()\n    }\n\n    goToDownloadPage () {\n        this.handleMobileMenuClose()\n        _helper.History.push('/download')\n    }\n\n    goToWaveIt () {\n        this.handleMobileMenuClose()\n        _helper.History.push('/schedules')\n    }\n\n    render() {\n        const { anchorEl, mobileMoreAnchorEl, resultsAnchorEl } = this.state;\n        const { classes } = this.props;\n        const isMenuOpen = Boolean(anchorEl);\n        const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n        const isSearchResultsOpen = Boolean(resultsAnchorEl);\n\n        /** ================= Profile regular ================= */\n        const renderMenu = (\n            <Menu\n                anchorEl={anchorEl}\n                anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n                transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n                open={isMenuOpen}\n                className={classes.openedMenu}\n                onClose={this.handleMenuClose}\n            >\n                <MenuItem id='/profile/overview' onClick={this.handleMenuClose}>Profile</MenuItem>\n                <MenuItem id='/login' onClick={this.logOff}>Log off</MenuItem>\n            </Menu>\n        );\n\n        /** ================= Notifications ================= */\n        const renderNotifications = (\n            <Drawer\n                anchor=\"right\"\n                open={this.state.right}\n                onClose={this.toggleDrawer('right', false)}\n            >\n                <div\n                    tabIndex={0}\n                    role=\"button\"\n                    onKeyDown={this.toggleDrawer('right', false)}\n                >\n                    <Grid alignItems='center' justify='center' container>\n                        <Grid xs={2} item>\n                            <IconButton\n                                onClick={this.toggleDrawer('right', false)}\n                                color=\"inherit\"\n                            >\n                                <ChevronLeftIcon color='primary' />\n                            </IconButton>\n                        </Grid>\n                        <Grid xs={8} item>\n                            <Button fullWidth color=\"primary\" className={classes.button}>\n                                {this.props.notificationsUnread} Notifications\n                            </Button>\n                        </Grid>\n                        <Grid xs={2} item>\n                        </Grid>\n                    </Grid>\n                    <Divider/>\n                    <div className={classes.notificationList}>\n                        <NotificationList\n                            notifications={this.props.notifications}\n                            notificationsUnread={this.props.notificationsUnread}\n                            unreadFilter={this.state.filterOnlyUnread}\n                        />\n                    </div>\n                    <Divider/>\n\n                    <Button fullWidth color=\"primary\" className={classes.button}>\n                        Filters\n                    </Button>\n                    <Divider/>\n                    <Grid justify=\"center\" container>\n                        <FormControlLabel\n                            control={\n                                <Switch\n                                    checked={this.state.filterOnlyUnread}\n                                    onChange={this.handleFilter('filterOnlyUnread')}\n                                    value=\"filterOnlyUnread\"\n                                    color=\"primary\"\n                                />\n                            }\n                            label=\"Only unread\"\n                        />\n                    </Grid>\n                </div>\n            </Drawer>\n        );\n\n        /* ================= Profile mobile ================= */\n        const renderMobileMenu = (\n            <Menu\n                anchorEl={mobileMoreAnchorEl}\n                anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n                transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n                open={isMobileMenuOpen}\n                onClose={this.handleMobileMenuClose}\n            >\n                <MenuItem onClick={this.goToWaveIt.bind(this)}>\n                    <IconButton color=\"secondary\">\n                        <CalendarTodayIcon />\n                    </IconButton>\n                    <p>Schedules</p>\n                </MenuItem>\n                <MenuItem onClick={this.goToDownloadPage.bind(this)}>\n                    <IconButton color=\"primary\">\n                        <GetAppIcon />\n                    </IconButton>\n                    <p>Download</p>\n                </MenuItem>\n                <MenuItem onClick={this.toggleDrawer('right', true)}>\n                    <IconButton color=\"primary\">\n                        <Badge badgeContent={this.props.notificationsUnread} color=\"secondary\">\n                            <NotificationsIcon />\n                        </Badge>\n                    </IconButton>\n                    <p>Notifications</p>\n                </MenuItem>\n                <MenuItem onClick={this.handleProfileMenuOpen}>\n                    <IconButton coloar=\"primary\">\n                        <AccountCircle />\n                    </IconButton>\n                    <p>Profile</p>\n                </MenuItem>\n            </Menu>\n        );\n\n        /* ================= Search results ================= */\n        const renderSearchResults = (\n            <Menu\n                anchorEl={resultsAnchorEl}\n                anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n                transformOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n                open={isSearchResultsOpen}\n                onClose={this.handleSearchResultsClose}\n            >\n                <SearchResults/>\n            </Menu>\n        );\n\n        /* ================= TOOL BAR ================= */\n        /* ================= TOOL BAR ================= */\n        return (\n            <MuiThemeProvider theme={Theme.classic}>\n                <div className={classes.root}>\n                    <AppBar position=\"static\">\n                        <Toolbar variant=\"dense\">\n                            <Link to='/home'>\n                                <IconButton className={classes.menuButton} color=\"inherit\">\n                                    <img src={Logo} width={30} color=\"secondary\" alt='prello logo' />\n                                </IconButton>\n                            </Link>\n\n                            <div\n                                className={classes.search}\n                            >\n                                <div className={classes.searchIcon}>\n                                    <SearchIcon />\n                                </div>\n\n                                <SearchResults/>\n\n                            </div>\n                            <div className={classes.grow} />\n                            <div className={classes.sectionDesktop}>\n                                <IconButton\n                                    aria-owns={isMenuOpen ? 'material-appbar' : null}\n                                    aria-haspopup=\"true\"\n                                    onClick={this.goToWaveIt}\n                                    color=\"inherit\"\n                                >\n                                    <CalendarTodayIcon />\n                                </IconButton>\n                                <IconButton\n                                    aria-owns={isMenuOpen ? 'material-appbar' : null}\n                                    aria-haspopup=\"true\"\n                                    onClick={this.goToDownloadPage}\n                                    color=\"inherit\"\n                                >\n                                    <GetAppIcon />\n                                </IconButton>\n                                <IconButton\n                                    aria-owns={isMenuOpen ? 'material-appbar' : null}\n                                    aria-haspopup=\"true\"\n                                    onClick={this.toggleDrawer('right', true)}\n                                    color=\"inherit\"\n                                >\n                                    <Badge badgeContent={this.props.notificationsUnread} color=\"secondary\">\n                                        <NotificationsIcon />\n                                    </Badge>\n                                </IconButton>\n                                <IconButton\n                                    aria-owns={isMenuOpen ? 'material-appbar' : null}\n                                    aria-haspopup=\"true\"\n                                    onClick={this.handleProfileMenuOpen}\n                                    color=\"inherit\"\n                                >\n                                    <AccountCircle />\n                                </IconButton>\n                            </div>\n                            <div className={classes.sectionMobile}>\n                                <IconButton aria-haspopup=\"true\" onClick={this.handleMobileMenuOpen} color=\"inherit\">\n                                    <MoreIcon />\n                                </IconButton>\n                            </div>\n                        </Toolbar>\n                    </AppBar>\n                    {renderMenu}\n                    {renderSearchResults}\n                    {renderMobileMenu}\n                    {renderNotifications}\n                    { this.state.showSearchResults ? <SearchResults/> : null }\n                </div>\n            </MuiThemeProvider>\n        );\n    }\n}\n\nNavbar.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n    notifications: state.navbar.notifications,\n    notificationsUnread: state.navbar.notificationsUnread,\n    notificationsUnarchived: state.navbar.notificationsUnarchived\n\n})\n\nconst mapDispatchToProps = {\n    onLogOff: _action.navbarAction.logOff,\n    onGetAllNonArchivedNotifications: _action.navbarAction.getAllNonArchivedNotifications,\n    onUpdateNotifications: _action.navbarAction.updateNotifications,\n    onShowOnlyUnread: _action.notificationAction.showOnlyUnreadAction\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(style)(Navbar));","import { fade } from '@material-ui/core/styles/colorManipulator';\n\n\nexport const style = theme => ({\n    root: {\n        width: '100%',\n        marginBottom: theme.spacing.unit * 4\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginLeft: -12,\n        marginRight: 20,\n    },\n    title: {\n        display: 'none',\n        [theme.breakpoints.up('sm')]: {\n            display: 'block',\n        },\n    },\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginRight: theme.spacing.unit * 2,\n        marginLeft: 0,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing.unit * 3,\n            width: 'auto',\n        },\n    },\n    searchIcon: {\n        width: theme.spacing.unit * 9,\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n        width: '100%',\n    },\n    inputInput: {\n        paddingTop: theme.spacing.unit,\n        paddingRight: theme.spacing.unit,\n        paddingBottom: theme.spacing.unit,\n        paddingLeft: theme.spacing.unit * 10,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('md')]: {\n            width: 200,\n        },\n    },\n    sectionDesktop: {\n        display: 'none',\n        [theme.breakpoints.up('md')]: {\n            display: 'flex',\n        },\n    },\n    sectionMobile: {\n        display: 'flex',\n        [theme.breakpoints.up('md')]: {\n            display: 'none',\n        },\n    },\n    openedMenu: {\n        textDecoration: 'none',\n        marginTop: 55\n    },\n    openedNotifications: {\n        marginTop: 72\n    },\n    list: {\n        width: 250,\n    },\n    fullList: {\n        width: 'auto',\n    },\n    notificationList: {\n        overflowY: 'scroll',\n        height: theme.spacing.unit * 50,\n    },\n    button: {\n        margin: 0,\n    },\n    filterRow: {\n        marginLeft: theme.spacing.unit * 3\n    },\n});\n\n\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport _action from '../../actions'\n//import { style } from './Style'\nimport Loader from '../loaderPage/LoaderPage'\n\n\n// CSS imports\n//import { withStyles } from '@material-ui/core/styles';\n//import PropTypes from 'prop-types';\n\n\n\nclass TransitionGithub extends React.Component {\n    componentDidMount () {\n        let params = this.props.location.pathname.split('/')\n        let memberToken = params[2]\n        localStorage.setItem('memberToken', memberToken)\n        this.props.onIsMemberLogged()\n    }\n\n\n    render() {\n        return (\n            <Loader/>\n        )\n    }\n\n\n}\n\n// Signin.propTypes = {\n//     classes: PropTypes.object.isRequired\n// }\n\nconst mapStateToProps = (state) => ({\n})\nconst mapDispatchToProps = {\n    onIsMemberLogged: _action.signinAction.isMemberLoggedGithub,\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TransitionGithub);","export const styles = theme => ({\n    card: {\n        backgroundColor: '#FFFAF0',\n        padding: theme.spacing.unit,\n    },\n    media: {\n        height: 0,\n        paddingTop: '56.25%', // 16:9\n    },\n    actions: {\n        display: 'flex',\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n        marginLeft: 'auto',\n        [theme.breakpoints.up('sm')]: {\n            marginRight: -8,\n        },\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n    paper: {\n        position: 'absolute',\n        width: theme.spacing.unit * 80,\n        backgroundColor: '#FFFAF0',\n        //backgroundColor: theme.palette.background.paper,\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing.unit * 4,\n        display: 'table',\n        clear: 'both'\n    },\n    marginCard: {\n        marginTop: 10,\n        marginLeft: 10\n    },\n    row: {\n        display: 'flex',\n        justifyContent: 'right',\n        margin: 5\n    },\n    rowRight: {\n        display: 'flex',\n        justifyContent: 'right',\n        float: 'right'\n    },\n    sizeButtonModal: {\n        margin: 5,\n        maxWidth: '40px',\n        maxHeight: '40px',\n        minWidth: '40px',\n        minHeight: '40px'\n    },\n    column: {\n        float: 'left',\n        width: '70%',\n        padding: '10px',\n        margin: 5,\n    },\n    button: {\n        margin: theme.spacing.unit,\n    },\n    divider:{\n        margin: 15\n    },\n    buttonIcon:{\n        width: 43,\n        height: 43,\n        marginTop: 5,\n        display: 'block',\n        marginLeft:  'auto',\n        marginRight: 0\n    },\n    editButton:{\n        height: '5%',\n        display: 'block',\n        marginTop: 15,\n        marginLeft:  'auto',\n        marginRight: 0,\n        backgroundColor: 'Transparent',\n        border: 'none'\n    },\n    textArea:{\n        width: '100%'\n    },\n    buttonModal:{\n        marginLeft: 12,\n        marginBottom: 10,\n        width: '23%'\n    },\n    comments:{\n        display: 'flex',\n        width:'100%'\n    },\n    iconComments:{\n        marginLeft:  15,\n        marginRight: 0,\n        display: 'block'\n    },\n    done:{\n        color:'green'\n    },\n    markdown:{\n        backgroundColor : 'lightgrey',\n    },\n    mdeSize: {\n        //height: 100\n    },\n    buttonLabel: {\n        margin: 0,\n        padding: 0,\n        width: '5px !important',\n        heigth: '5px !important'\n    },\n    orangeAvatar: {\n        margin: 2,\n        color: '#17394d',\n        backgroundColor: '#dfe3e6',\n        height: '28px',\n        width: '28px',\n        fontSize: '15px',\n        fontStyle: 'bold'\n    },\n    avatar: {\n        margin: 2,\n    },\n    littleAvatar: {\n        width: 28,\n        height: 28,\n    },\n    moreIcon: {\n        padding: 4,\n    },\n    firstRow: {\n        marginRight: 10\n    },\n    scrollContainer: {\n        overflowY: 'scroll',\n        height: theme.spacing.unit * 70,\n        //paddingRight: 2\n    },\n    noMargin: {\n        margin: 0\n    }\n});","export const styles = theme => ({\n    form: {\n        margin: 20\n    },\n    deleteIcon: {\n        marginRight: 10\n    },\n    formLabel:{\n        marginTop: -17\n    },\n    addIcon: {\n        display: 'block',\n        marginLeft:  'auto',\n        marginRight: 20,\n        marginBottom: 20\n    },\n    button: {\n        margin: theme.spacing.unit,\n    },\n    dialogTitle:{\n        textAlign:`center`\n    },\n    memberList: {\n        overflowY: 'scroll',\n        height: theme.spacing.unit * 30,\n    },\n    marginBottom: {\n        marginBottom: 20\n    },\n    memberItem: {\n        //maxHeight: 10\n    },\n    validIcon:{\n        color:`#6bb53f`,\n    },\n    rightIcon: {\n        marginLeft: theme.spacing.unit,\n    },\n    marginSide: {\n        marginLeft: 5,\n        marginRight: 5\n    }\n});","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport { styles } from './StyleChecklist'\nimport Checkbox from \"@material-ui/core/Checkbox/Checkbox\";\nimport _action from \"../../../actions\";\nimport connect from \"react-redux/es/connect/connect\";\nimport * as PropTypes from \"prop-types\";\nimport MiniLoader from \"../../ui/loader/MiniLoader\";\nimport List from \"@material-ui/core/List/List\";\nimport ListItem from \"@material-ui/core/ListItem/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText/ListItemText\";\nimport {Cancel} from \"@material-ui/icons\";\nimport AddCircleIcon from '@material-ui/icons/AddCircle'\nimport IconButton from \"@material-ui/core/IconButton/IconButton\";\nimport Fade from \"@material-ui/core/Fade/Fade\";\nimport Tooltip from \"@material-ui/core/Tooltip/Tooltip\";\nimport Grid from \"@material-ui/core/Grid/Grid\";\nimport TextField from \"@material-ui/core/TextField/TextField\";\nimport Typography from \"@material-ui/core/Typography/Typography\";\n\nclass ChecklistDialog extends React.Component {\n    constructor (props) {\n        super(props)\n        this.handleRemoveTask = this.handleRemoveTask.bind(this)\n        this.state = {\n            card: this.props.card\n        }\n    }\n\n    handleClose = () => {\n        this.props.onClose(this.props.selectedValue);\n    };\n\n    handleChangeCheckbox = name => event => {\n        let index = event.target.id.split('/')[1]\n        let value = event.target.checked\n        let card = Object.assign({}, this.state.card)\n        card.TaskCardFks[index].chtState = value //TODO put and setState in this version its not immutable\n        let taskId = this.state.card.TaskCardFks[index].taskId\n\n        this.props.onUpdateTask(taskId, {chtState: value})\n        this.setState({ card: card });\n    };\n\n    handleCreateTask = event => {\n        let dom = document.querySelector('#newChecklist');\n        let value = dom.value;\n        if(value !== ''){\n            let cardId = this.props.card.cardId;\n            let newTask = {\n                taskTitle: value,\n                chtState: false,\n                cardId: cardId\n            };\n            let card = this.props.card\n            this.props.onCreateTask(newTask, card)\n        }\n    };\n\n    handleRemoveTask = event => {\n        let index = event.currentTarget.id;\n        let taskId = this.props.card.TaskCardFks[index].taskId\n        this.state.card.TaskCardFks.splice(index,1)\n        let card = this.props.card\n        this.props.onDeleteTask(taskId, card);\n        this.setState({ maj: true });\n    };\n\n    render() {\n        const { classes, onClose, selectedValue, onCreateTask, onUpdateTask, onDeleteTask, isLoading, ...other } = this.props;\n        return (\n            <Dialog onClose={this.handleClose} aria-labelledby=\"simple-dialog-title\" {...other} className={classes.dialog}>\n                <DialogTitle id=\"simple-dialog-title\" className={classes.dialogTitle}>Checklist</DialogTitle>\n                <List className={ classes.memberList + ' ' + classes.marginBottomTop }>\n                    { isLoading ? (\n                        <MiniLoader/>\n                    ) :  this.state.card.TaskCardFks ? this.props.card.TaskCardFks.map((task, index) => {\n                            return (\n                                <ListItem key={task.taskId} className={ classes.memberItem }>\n                                    <ListItemText primary={task.taskTitle}/>\n                                    <IconButton id={index} color=\"secondary\" onClick={this.handleRemoveTask}>\n                                        <Cancel />\n                                    </IconButton>\n                                    <Tooltip\n                                        TransitionComponent={Fade}\n                                        TransitionProps={{ timeout: 600 }}\n                                        title=\"Remove\"\n                                        placement=\"top-start\">\n                                        <Checkbox\n                                            checked={task.chtState}\n                                            id={'checklist/'+index}\n                                            onChange={this.handleChangeCheckbox('checklist')}\n                                            value='checklist'\n                                        />\n                                    </Tooltip>\n                                </ListItem>\n                            )\n                        }\n                    ) : null}\n                </List>\n                <Grid container justify='center'>\n                    <Grid xs={11} item>\n                        <Typography variant='caption'>\n                            Add a new task\n                        </Typography>\n                    </Grid>\n                </Grid>\n                <Grid justify='center' alignItems='flex-end' container className={ classes.marginBottom }>\n                    <Grid item xs={11}>\n                        <TextField\n                            id = 'newChecklist'\n                            label=\"task\"\n                            fullWidth\n                            //value={this.state.newTask}\n                            name=\"newChecklist\"\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            //onChange={this.handleChange('memberEmail')}\n                        />\n                    </Grid>\n                    <Grid item xs={11}>\n                        <Button\n                            fullWidth\n                            size='small'\n                            color=\"primary\"\n                            className={classes.validIcon}\n                            onClick={this.handleCreateTask.bind(this)}\n                        >\n                            Add\n                            <AddCircleIcon className={classes.rightIcon} />\n                        </Button>\n                    </Grid>\n                </Grid>\n            </Dialog>\n        );\n    }\n}\n\nChecklistDialog.propTypes = {\n    classes: PropTypes.object.isRequired,\n    onClose: PropTypes.func,\n    selectedValue: PropTypes.string,\n    onUpdateTask: PropTypes.func\n};\n\nconst ChecklistDialogWrapped = withStyles(styles)(ChecklistDialog);\n\n\nclass Checklist extends React.Component {\n    state = {\n        open: false\n    };\n\n    handleClickOpen = () => {\n        this.setState({\n            open: true,\n        });\n    };\n\n    handleClose = value => {\n        this.setState({open: false });\n    };\n\n    render() {\n        const { classes } = this.props\n\n        return (\n            <div>\n                <Button\n                    color=\"primary\"\n                    className={classes.button}\n                    fullWidth\n                    onClick={this.handleClickOpen}\n                >\n                    Checklist\n                </Button>\n                <ChecklistDialogWrapped\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    card = {this.props.card}\n                    onUpdateTask = {this.props.onUpdateTask}\n                    onDeleteTask = {this.props.onDeleteTask}\n                    onCreateTask = {this.props.onCreateTask}\n                />\n            </div>\n        );\n    }\n}\n\nChecklist.propTypes = {\n    classes: PropTypes.object,\n};\n\nconst mapStateToProps = (state) => ({\n    isLoading: state.card.isLoading\n});\nconst mapDispatchToProps = {\n    onUpdateTask : _action.cardAction.updateTask,\n    onDeleteTask : _action.cardAction.deleteTask,\n    onCreateTask : _action.cardAction.createTask\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Checklist));","export const styles = theme => ({\n    dialog: {\n      width: '300px'\n    },\n});","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport { styles } from './Style'\nimport _action from \"../../../actions/index\";\nimport connect from \"react-redux/es/connect/connect\";\nimport * as PropTypes from \"prop-types\";\nimport ListItem from \"@material-ui/core/ListItem/ListItem\";\nimport List from \"@material-ui/core/List/List\";\nimport Checkbox from \"@material-ui/core/Checkbox/Checkbox\";\nimport DialogContent from \"@material-ui/core/DialogContent/DialogContent\";\nimport Grid from \"@material-ui/core/Grid/Grid\";\n\n\nclass LabelDialog extends React.Component {\n    constructor (props) {\n        super(props);\n        this.handleChangeCheckbox = this.handleChangeCheckbox.bind(this)\n        this.state = {\n            card: this.props.card,\n            selectedIndex: 1,\n        }\n    }\n\n    handleChangeCheckbox = name => event => {\n        //let index = event.target.id.split('/')[1]\n        //let checked = event.target.checked\n        let index = event.target.id.split('/')[1]\n        let checked = event.target.checked\n        let label = this.props.labels[index]\n        let labelId = this.props.labels[index].labelId\n        let cardId = this.props.card.cardId\n\n        if(checked){\n            let newCard = Object.assign({}, this.state.card)\n            newCard.HaslabelCardFks.push({ cardId: cardId, labelId: labelId, Label: label  })\n            this.setState({card:newCard })\n            //this.state.card.HaslabelCardFks.push({ cardId: cardId, labelId: labelId, Label: label  }) //TODO use setState\n            this.props.onCreateLinkLabel({ cardId: cardId, labelId: labelId })\n        }else{\n            let indexLink = this.state.card.HaslabelCardFks.findIndex(list => list.labelId === labelId)\n            let newCard = Object.assign({}, this.state.card)\n            newCard.HaslabelCardFks.splice(indexLink,1)\n            this.setState({card:newCard })\n            //this.state.card.HaslabelCardFks.splice(indexLink,1) //TODO use setState\n            this.props.onDeleteLinkLabel({ cardId: cardId, labelId: labelId })\n        }\n        this.setState({ maj: true });\n    };\n\n    handleClose = () => {\n        this.props.onClose();\n    };\n\n    render() {\n        const { classes, onClose, selectedValue, onDeleteLinkLabel, onCreateLinkLabel, ...other } = this.props;\n        return (\n            <Dialog\n                onClose={this.handleClose}\n                aria-labelledby=\"simple-dialog-title\"\n                maxWidth=\"xs\"\n                {...other}\n            >\n                <DialogTitle id=\"simple-dialog-title\">Set labels</DialogTitle>\n                <DialogContent>\n                    <List component=\"nav\">\n                        { this.props.labels == null ? (\n                            null\n                        ) :  this.props.labels ? this.props.labels.map((label,index) => {\n                            return (\n                                <ListItem\n                                    key={label.labelId}\n                                    selected={this.state.selectedIndex === 2}\n                                >\n                                    <Grid justify='center' alignItems='center' container>\n                                        <Button variant=\"contained\" style={{backgroundColor: label.labelColor}}>\n                                            {' '}\n                                        </Button>\n                                        <Checkbox\n                                            style={{color: label.labelColor}}\n                                            id={'checklist/'+index}\n                                            onChange={this.handleChangeCheckbox('checklist')}\n                                            value='checklist'\n                                            checked = {!(this.state.card.HaslabelCardFks.find(link => link.labelId === label.labelId) === undefined)}\n                                        />\n                                    </Grid>\n                                </ListItem>\n                            )\n                        }):null}\n                        <ListItem>\n                            <Button\n                                color='primary'\n                                variant='outlined'\n                                fullWidth\n                                onClick={this.handleClose}\n                            >\n                                ok\n                            </Button>\n                        </ListItem>\n                    </List>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nLabelDialog.propTypes = {\n    classes: PropTypes.object.isRequired,\n    onClose: PropTypes.func,\n    selectedValue: PropTypes.string\n};\n\nconst LabelDialogWrapped = withStyles(styles)(LabelDialog);\n\n\nclass Label extends React.Component {\n    state = {\n        open: false\n    };\n\n    componentDidMount (){\n        this.props.onGetLabels(this.props.route.params.id)\n    };\n\n    handleClickOpen = () => {\n        this.setState({\n            open: true,\n        });\n    };\n\n    handleClose = value => {\n        this.setState({open: false });\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div>\n                <Button\n                    color=\"primary\"\n                    className={classes.button}\n                    fullWidth\n                    onClick={this.handleClickOpen}\n                >\n                    Label\n                </Button>\n                <LabelDialogWrapped\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    card = {this.props.card}\n                    labels = {this.props.labels}\n                    onCreateLinkLabel = {this.props.onCreateLinkLabel}\n                    onDeleteLinkLabel = {this.props.onDeleteLinkLabel}\n                />\n            </div>\n        );\n    }\n}\n\nLabel.propTypes = {\n    classes: PropTypes.object,\n};\n\nconst mapStateToProps = (state) => ({\n    labels: state.card.labels\n});\nconst mapDispatchToProps = {\n    onGetLabels : _action.cardAction.getLabels,\n    onCreateLinkLabel : _action.cardAction.createLinkLabel,\n    onDeleteLinkLabel : _action.cardAction.deleteLinkLabel\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Label));","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport _action from \"../../../actions/index\";\nimport connect from \"react-redux/es/connect/connect\";\nimport { withStyles } from '@material-ui/core/styles';\nimport { styles } from '../Style'\n\nclass ConfirmationDialog extends React.Component {\n    state = {\n        open: false,\n        type: this.props.content.type\n    };\n\n    handleClickOpen = () => {\n        this.setState({ open: true });\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    changeStatusArchived = () => {\n        if(this.state.type === 'archive'){\n\n           this.props.onUpdateCard(this.props.card, {cardStatus : 1}, this.props.listIndex, this.props.cardIndex);\n           this.props.handleParentClose()\n           this.setState({ open: false });\n        }else{\n\n            this.props.onDeleteCard(this.props.card.cardId, this.props.listIndex, this.props.cardIndex);\n            this.props.handleParentClose()\n            this.setState({ open: false });\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div>\n                <Button\n                    color=\"primary\"\n                    className={classes.button}\n                    fullWidth\n                    onClick={this.handleClickOpen}\n                >\n                    {this.state.type}\n                </Button>\n                <Dialog\n                    open={this.state.open}\n                    keepMounted\n                    onClose={this.handleClose}\n                    aria-labelledby=\"alert-dialog-slide-title\"\n                    aria-describedby=\"alert-dialog-slide-description\"\n                >\n                    <DialogTitle id=\"alert-dialog-slide-title\">\n                        {\"Confirmation\"}\n                    </DialogTitle>\n                    <DialogContent>\n                        <DialogContentText id=\"alert-dialog-slide-description\">\n                            Are you sure you want to {this.state.type} this card ?\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"secondary\">\n                            Cancel\n                        </Button>\n                        <Button onClick={this.changeStatusArchived} color=\"primary\">\n                            {this.state.type}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\n/*\nConfirmationDialog.propTypes = {\n    classes: PropTypes.object.isRequired,\n};*/\n\nconst mapStateToProps = (state) => ({\n})\nconst mapDispatchToProps = {\n    onUpdateCard : _action.cardAction.updatecard,\n    onDeleteCard : _action.cardAction.deleteCard\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ConfirmationDialog));","import React, { Component } from 'react';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport {Send} from '@material-ui/icons';\nimport Button from '@material-ui/core/Button';\nimport {withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { connect } from 'react-redux'\nimport _action from '../../../actions'\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport { styles } from './Style'\nimport Grid from \"@material-ui/core/Grid/Grid\";\nimport Fade from \"@material-ui/core/Fade/Fade\";\nimport Tooltip from \"@material-ui/core/Tooltip/Tooltip\";\nimport MiniLoader from \"../../ui/loader/MiniLoader\";\nimport MenuItem from \"@material-ui/core/MenuItem/MenuItem\";\nimport Select from \"@material-ui/core/Select/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl/FormControl\";\n\nclass MemberOnCard extends Component {\n    constructor(props){\n        super(props)\n        this.addMember = this.addMember.bind(this)\n        this.removeMember = this.removeMember.bind(this)\n        this.handleOpenDialog = this.handleOpenDialog.bind(this)\n        this.handleCloseDialog = this.handleCloseDialog.bind(this)\n        this.componentDidMount = this.componentDidMount.bind(this)\n\n        this.state = {\n            open: false\n        }\n    }\n\n    /** We get both array from the store */\n    componentDidMount () {\n        this.props.onGetMembersOnCard(this.props.card.cardId, this.props.route.params.id)\n\n        this.setState({\n            membersOnCard: this.props.membersOnCard,\n            membersOffCard: this.props.membersOffCard,\n            newMemberIndex: -1\n        })\n    }\n\n    /** Close the modal */\n    handleOpenDialog = () => {\n        this.setState({ open: true });\n    };\n\n    handleCloseDialog = () => {\n        this.setState({ open: false });\n    };\n\n    /** ==================== ADD / REMOVE MEMBERS ==================== */\n    addMember (event) {\n        const { onAddMember, listindex, cardindex } = this.props\n\n        let index = this.state.newMemberIndex\n        let member = this.props.membersOffCard[index]\n        let cardId = this.props.card.cardId\n\n        //We copy previous arrays\n        let membersOnCard = Array.from(this.props.membersOnCard)\n        let membersOffCard = Array.from(this.props.membersOffCard)\n\n        membersOnCard.push(member)\n        membersOffCard.splice(index, 1)\n\n        if(member) onAddMember(member.memberId, cardId, membersOnCard, membersOffCard, listindex, cardindex, member)\n\n        this.setState({\n            membersOnCard: membersOnCard,\n            membersOffCard: membersOffCard\n        })\n    }\n\n    removeMember = name => event => {\n        const { onRemoveMember, listindex, cardindex } = this.props\n\n        let index = event.currentTarget.id.split('/')[1]\n        let member = this.props.membersOnCard[index]\n        let cardId = this.props.card.cardId\n\n        //We copy previous arrays\n        let membersOnCard = Array.from(this.props.membersOnCard)\n        let membersOffCard = Array.from(this.props.membersOffCard)\n\n        //New arrays\n        membersOffCard.push(member)\n        membersOnCard.splice(index, 1)\n\n        onRemoveMember(member.memberId, cardId, membersOnCard, membersOffCard, listindex, cardindex, index)\n        this.setState({ maj: true })\n    }\n\n    handleChangeNewMember = event => {\n        this.setState({ [event.target.name]: event.target.value });\n    };\n\n    render() {\n        const { membersOnCard, membersOffCard, classes, ...other } = this.props;\n\n        /** Members on the card */\n        const activeMembersList = (\n            <List className={ classes.memberList + ' ' + classes.marginBottomTop + ' ' + classes.modalWidth}>\n                {this.props.isloading  === 'true' ?\n                    <MiniLoader size={15} />\n                    :\n                    <div>\n                        {membersOnCard.map((member, index) =>\n                            <ListItem key={member.memberId} className={classes.memberItem}>\n                                <ListItemText primary={member.memberPseudo}>\n                                </ListItemText>\n                                <Tooltip\n                                    TransitionComponent={Fade}\n                                    TransitionProps={{timeout: 600}}\n                                    title=\"Remove\"\n                                    placement=\"top-start\">\n                                    <Checkbox\n                                        checked={true}\n                                        id={\"members/\" + index}\n                                        onChange={this.removeMember('membersOnCard')}\n                                        value='membersOnCard'\n                                    />\n                                </Tooltip>\n                            </ListItem>\n                        )}\n                    </div>\n                }\n            </List>\n        )\n\n        /** Members off the card */\n        const otherMembers = (\n            <div className={ classes.modalWidth}>\n                {this.props.isloading === 'true' ?\n                    <MiniLoader size={15} />\n                    :\n                    <FormControl className={classes.formControl + ' ' + classes.modalWidth}>\n\n                        <InputLabel htmlFor=\"new-member\">Members</InputLabel>\n                        <Select\n                            value={this.state.newMemberIndex}\n                            onChange={this.handleChangeNewMember}\n                            inputProps={{\n                                name: 'newMemberIndex',\n                                id: 'new-member',\n                            }}\n                        >\n                            {membersOffCard.map((member, index) =>\n                                <MenuItem key={index} value={index}>{member.memberPseudo}</MenuItem>\n                            )}\n                        </Select>\n                    </FormControl>\n                }\n            </div>\n        )\n\n        return (\n            <div>\n                <Button\n                    color=\"primary\"\n                    className={classes.button}\n                    fullWidth\n                    onClick={this.handleOpenDialog}\n                >\n                    Members\n                </Button>\n                <Dialog\n                    open={this.state.open}\n                    onClose={this.handleCloseDialog.bind(this)}\n                    aria-labelledby=\"simple-dialog-title\"\n                    {...other}\n                >\n                    <DialogTitle id=\"simple-dialog-title\">Members</DialogTitle>\n                    <DialogContent className={ classes.modalWidth } >\n                        <Grid alignItems='flex-end' container className={ classes.marginBottom }>\n                            <Grid item xs={12}>\n                                {otherMembers}\n                            </Grid>\n                            <Grid item xs={12}>\n                                {activeMembersList}\n                            </Grid>\n                            <Grid item xs={12}>\n                                <Button\n                                    fullWidth\n                                    size='small'\n                                    color=\"primary\"\n                                    className={classes.validIcon}\n                                    onClick={this.addMember}\n                                >\n                                    Send\n                                    <Send className={classes.rightIcon} />\n                                </Button>\n                            </Grid>\n                        </Grid>\n                    </DialogContent>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    isloading: state.card.isLoading.toString(),\n    membersOnCard: state.card.membersOnCard,\n    membersOffCard: state.card.membersOffCard\n})\nconst mapDispatchToProps ={\n    onAddMember: _action.cardAction.addMember,\n    onRemoveMember: _action.cardAction.removeMember,\n    onGetMembersOnCard: _action.cardAction.getMembersOnCard\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(withStyles(styles)(MemberOnCard))","export const styles = theme => ({\n    dialogTitle:{\n        textAlign:`center`\n    },\n    validIcon:{\n        color:`#6bb53f`,\n    },\n    divider:{\n        paddingBottom:`60px`\n    },\n    rightIcon: {\n        marginLeft: theme.spacing.unit,\n    },\n    marginBottom: {\n        marginBottom: 20\n    },\n    marginBottomTop: {\n        marginTop: 15\n    },\n    memberList: {\n        overflowY: 'scroll',\n        height: theme.spacing.unit * 20\n    },\n    memberItem: {\n        //maxHeight: 15\n    },\n    errorMsg: {\n        color: '#f44336',\n    },\n    formControl: {\n        width: '100%'\n    },\n    button: {\n        margin: theme.spacing.unit,\n    },\n    modalWidth: {\n        width: '300px'\n    }\n})","/** REACT */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport connect from \"react-redux/es/connect/connect\";\n\n/** COMPONENTS */\nimport { styles } from './Style'\nimport _action from \"../../actions\";\nimport Checklist from './checklist/ChecklistDialog';\nimport LabelDialog from './label/LabelDialog'\nimport ConfirmationDialog from './confirmation/ConfirmationDialog';\nimport MiniLoader from \"../ui/loader/MiniLoader\";\nimport _helper from \"../../helpers\";\n\n/** MATERIAL UI */\nimport Card from '@material-ui/core/Card';\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from \"@material-ui/core/Avatar/Avatar\";\nimport TextField from \"@material-ui/core/TextField/TextField\";\nimport Grid from \"@material-ui/core/Grid/Grid\";\nimport Dialog from \"@material-ui/core/Dialog/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent/DialogContent\";\nimport IconButton from '@material-ui/core/IconButton';\nimport LabelIcon from '@material-ui/icons/Label'\nimport {Edit,Done,Cancel} from '@material-ui/icons';\nimport MemberOnCard from \"./membersOnCard/MembersOnCard\";\nimport classNames from 'classnames';\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\n\n/** MARKDOWN EDITOR */\nimport SimpleMDEReact from \"react-simplemde-editor\";\nimport \"simplemde/dist/simplemde.min.css\";\n\nclass Cardboard extends React.Component {\n    constructor (props) {\n        super(props)\n        this.updateCard = this.updateCard.bind(this)\n        this.handleChangeDueDate = this.handleChangeDueDate.bind(this)\n        this.handleEditDueDate = this.handleEditDueDate.bind(this)\n        this.handleValidDueDate = this.handleValidDueDate.bind(this)\n        this.handleCancelDueDate = this.handleCancelDueDate.bind(this)\n        this.handleChangeDescription = this.handleChangeDescription.bind(this)\n        this.editDescription = this.editDescription.bind(this)\n        this.validEditDescription = this.validEditDescription.bind(this)\n        this.handleEditTitle =  this.handleEditTitle.bind(this)\n        this.validEditTitle = this.validEditTitle.bind(this)\n\n        this.state = {\n            open: this.props.route.params.cardid ?\n                this.props.route.params.cardid.toString() === this.props.currentCard.cardId.toString() : false,\n            card: this.props.currentCard,\n            description: this.props.currentCard.cardDescription,\n            title : this.props.currentCard.cardTitle,\n            dueDate : this.props.currentCard.cardDateTarget,\n            editDueDate : false,\n            editDescription:false,\n            editTitle:false,\n            init: false,\n        };\n    }\n\n    componentDidUpdate (){\n        if(!this.state.init){\n            this.setState({\n                dueDate : this.props.currentCard.cardDateTarget,\n                init: true ,\n                description: this.props.currentCard.cardDescription,\n                title : this.props.currentCard.cardTitle\n            })\n        }\n        //this.props.onGetCard(this.props.currentCard.cardId)\n    };\n\n    /** Open/Close the card modal */\n    handleOpen = () => {\n        this.setState({ open: true });\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n\n    /** Update and create project */\n    handleChangeTitle = name => event => {\n        this.setState({title:event.target.value})\n    };\n\n    handleEditTitle(){\n        this.setState({editTitle : true})\n    }\n    validEditTitle(){\n\n        if(this.state.title !== '' ){\n            this.props.onUpdateTitle(this.props.currentCard, {cardTitle:this.state.title})\n            this.setState({editTitle : false})\n        }\n    }\n\n    updateCard () {\n        this.props.onUpdateCard(this.state.card, this.state.card);\n    }\n\n    handleChangeDueDate = name => event =>{\n        this.setState({\n            dueDate: event.target.value\n        })\n    }\n    handleEditDueDate(){\n        this.setState({editDueDate:true})\n    }\n    handleValidDueDate(){\n\n        if(this.state.dueDate) {\n            this.props.onUpdateDate(this.props.currentCard, {cardDateTarget:this.state.dueDate})\n            this.setState({editDueDate:false})\n        }\n    }\n\n    handleCancelDueDate(){\n\n        this.setState({editDueDate:false})\n    }\n\n    handleChangeDescription= name => event =>{\n\n        this.setState({description : event})\n    }\n\n    getInstance = (instance) => {\n        // You can now store and manipulate the simplemde instance. \n        this.setState({instance : instance})\n        instance.togglePreview();\n    }\n\n    editDescription(){\n        this.state.instance.togglePreview();\n        this.setState({\n            editDescription:true\n        })\n\n    }\n    validEditDescription(){\n        this.state.instance.togglePreview();\n        this.setState({\n            editDescription:false\n        })\n        this.props.onUpdateDescription(this.props.currentCard, {cardDescription:this.state.description})\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        _helper.History.listen( location =>  {\n            try {\n                let isOpen = location.pathname.split('/')[4].toString() === this.props.currentCard.cardId.toString()\n                this.setState({ open: isOpen })\n            } catch (err) {\n                // Nothing\n                this.setState({ open: false })\n            }\n        });\n\n        const cardDialog = (\n\n            <Dialog\n                open={this.state.open}\n                onClose={this.handleClose}\n                aria-labelledby=\"form-dialog-title\"\n            >\n                <DialogContent>\n                    { this.props.currentCard ? (\n                        <Grid justify='center' container>\n                            <Grid xs={12} md={8} item className={classes.scrollContainer}>\n                                <Grid item xs={12}>\n                                    {this.props.currentCard.HaslabelCardFks.map(label =>\n                                        label.Label ?\n                                            <LabelIcon\n                                                key={label.labelId}\n                                                style={{\n                                                    color: label.Label.labelColor,\n                                                }}\n                                            />\n                                            : null\n                                    )}\n                                    {this.props.refresh}\n                                </Grid>\n                                <Grid item xs={12}>\n\n                                    { this.props.isLoading ?\n                                        <MiniLoader/>\n                                        :\n                                        this.props.currentCard.MemberhascardCardFks ? this.props.currentCard.MemberhascardCardFks.map(member =>\n                                            member.Member.memberPicture ?\n                                                <Avatar\n                                                    key={member.memberId}\n                                                    alt={member.Member.memberFirstname + 'sharp'}\n                                                    src={member.Member.memberPicture}\n                                                    className={classNames(classes.avatar, classes.littleAvatar)}\n                                                />\n                                                :\n                                                <Avatar className={classes.orangeAvatar} key={member.memberId}>\n                                                    {member.Member.memberFirstname.toUpperCase()[0]}\n                                                </Avatar>\n                                        ) : null}\n                                </Grid>\n                                <form className={classes.container} noValidate autoComplete=\"off\">\n\n                                    <Grid container justify='space-between' alignItems='center'>\n                                        <Grid item xs={8}>\n                                            <TextField\n                                                id=\"cardTitle\"\n                                                label=\"Title\"\n                                                disabled={!this.state.editTitle}\n                                                className={classes.textField}\n                                                defaultValue={this.state.title}\n                                                onChange={this.handleChangeTitle('cardTitle')}\n                                                margin=\"normal\"\n                                                fullWidth\n                                            />\n                                        </Grid>\n                                        <Grid item xs={2}>\n                                            {this.state.editTitle ?\n                                                <IconButton\n                                                    className={classes.done}\n                                                    size=\"small\"\n                                                    aria-label=\"valid\"\n                                                    onClick={this.validEditTitle}\n                                                >\n                                                    <Done fontSize=\"small\"/>\n                                                </IconButton>\n                                                :\n                                                <IconButton\n                                                    color='primary'\n                                                    size=\"small\"\n                                                    aria-label=\"valid\"\n                                                    onClick={this.handleEditTitle}\n                                                >\n                                                    <Edit fontSize=\"small\" />\n                                                </IconButton>\n                                            }\n                                        </Grid>\n                                    </Grid>\n\n                                    {!this.state.editDueDate ?\n                                        <Grid container justify=\"space-between\" alignItems='center' >\n                                            <Grid item xs={10}>\n                                                <TextField\n                                                    id=\"date\"\n                                                    label=\"Due Date\"\n                                                    type=\"date\"\n                                                    disabled={!this.state.editDueDate}\n                                                    value={this.state.dueDate ? this.state.dueDate : ''}\n                                                    className={classes.textField}\n                                                    InputLabelProps={{\n                                                        shrink: true,\n                                                    }}\n                                                    onChange={this.handleChangeDueDate('dueDate')}\n                                                />\n                                            </Grid>\n\n                                            <Grid item xs={2}>\n                                                <IconButton\n                                                    color='primary'\n                                                    size=\"small\" aria-label=\"valid\"\n                                                    onClick={this.handleEditDueDate}\n                                                >\n                                                    <Edit fontSize=\"small\"/>\n                                                </IconButton>\n                                            </Grid>\n                                        </Grid>\n                                        :\n                                        <Grid container justify=\"space-between\" alignItems='center' >\n                                            <Grid item xs={8}>\n\n                                                <TextField\n                                                    id=\"date\"\n                                                    label=\"Due Date\"\n                                                    type=\"date\"\n                                                    disabled={!this.state.editDueDate}\n                                                    value={this.state.dueDate ? this.state.dueDate : ''}\n                                                    className={classes.textField}\n                                                    InputLabelProps={{\n                                                        shrink: true,\n                                                    }}\n                                                    onChange={this.handleChangeDueDate('dueDate')}\n                                                />\n                                            </Grid>\n                                            <Grid item xs={2}>\n                                                <IconButton className={classes.done} size=\"small\" aria-label=\"valid\" onClick={this.handleValidDueDate}>\n                                                    <Done fontSize=\"small\" />\n                                                </IconButton>\n                                            </Grid>\n                                            <Grid item xs={2}>\n                                                <IconButton  color=\"secondary\" size=\"small\" aria-label=\"valid\" onClick={this.handleCancelDueDate}>\n                                                    <Cancel fontSize=\"small\" />\n                                                </IconButton>\n                                            </Grid>\n                                        </Grid>\n\n                                    }\n                                    <Grid container justify=\"space-between\" alignItems='center' >\n                                        <Grid item xs={10}>\n                                            <Typography variant='subtitle1' gutterBottom>\n                                                Description\n                                            </Typography>\n                                        </Grid>\n                                        <Grid item xs={2}>\n                                            { this.state.editDescription ?\n                                                <IconButton\n                                                    className={classes.done}\n                                                    size=\"small\"\n                                                    aria-label=\"valid\"\n                                                    onClick={this.validEditDescription}\n                                                >\n                                                    <Done fontSize=\"small\" />\n                                                </IconButton>\n                                                :\n                                                <IconButton  color=\"primary\" size=\"small\" aria-label=\"valid\" onClick={this.editDescription}>\n                                                    <Edit fontSize=\"small\" />\n                                                </IconButton>\n                                            }\n                                        </Grid>\n                                        <Grid item xs={12}>\n                                            <SimpleMDEReact\n                                                className={classes.markdown + ' ' + classes.mdeSize}\n                                                getMdeInstance={this.getInstance}\n                                                value={this.state.description}\n                                                onChange={this.handleChangeDescription('description')}\n                                                options={{\n                                                    autofocus: true,\n                                                }}\n                                            />\n                                        </Grid>\n                                    </Grid>\n\n                                </form>\n                            </Grid>\n                            <Grid xs={4} item>\n                                <MemberOnCard\n                                    route={this.props.route}\n                                    card={this.props.currentCard}\n                                    listindex={this.props.listIndex}\n                                    cardindex={this.props.cardIndex}\n                                />\n                                <LabelDialog\n                                    route={this.props.route}\n                                    card={this.props.currentCard}\n                                />\n                                <Checklist\n                                    card={this.props.currentCard}\n                                />\n                                <ConfirmationDialog\n                                    content = {{type:'archive'}}\n                                    card={this.state.card}\n                                    listIndex={this.props.listIndex}\n                                    cardIndex={this.props.cardIndex}\n                                    handleParentClose={this.handleClose}\n                                />\n                                <ConfirmationDialog\n                                    content = {{type:'delete'}}\n                                    card={this.state.card}\n                                    listIndex={this.props.listIndex}\n                                    cardIndex={this.props.cardIndex}\n                                    handleParentClose={this.handleClose}\n                                />\n                            </Grid>\n                        </Grid>\n\n                    ) : (\n                        <MiniLoader/>\n                    )}\n                </DialogContent>\n            </Dialog>\n        )\n\n        return (\n            <div>\n                {cardDialog}\n                <Card className={classes.card}>\n                    <Grid justify='center' alignItems='center' container>\n\n                        {this.props.currentCard.HaslabelCardFks && this.props.currentCard.HaslabelCardFks.length > 0 ?\n                            <Grid container alignItems='center' justify='space-between' className={ classes.firstRow }>\n                                <Grid item xs={11}>\n                                    {this.props.currentCard.HaslabelCardFks.map(label =>\n                                        label.Label ?\n                                            <LabelIcon\n                                                key={label.labelId}\n                                                style={{\n                                                    color: label.Label.labelColor,\n                                                }}\n                                            />\n                                            : null\n                                    )}\n                                </Grid>\n                                <Grid item xs={1}>\n                                    <IconButton\n                                        onClick={this.handleOpen}\n                                        aria-label=\"Comments\"\n                                        size=\"small\"\n                                        className={ classes.moreIcon }\n                                    >\n                                        <MoreVertIcon />\n                                    </IconButton>\n                                </Grid>\n                            </Grid>\n\n                            : null }\n\n                        {this.props.currentCard.HaslabelCardFks ?\n                            this.props.currentCard.HaslabelCardFks.length === 0 ?\n                                <Grid container alignItems='center' justify='space-between' className={ classes.firstRow }>\n                                    <Grid item xs={11}>\n                                        <Typography variant=\"subtitle2\">\n                                            {this.state.card.cardTitle}\n                                        </Typography>\n                                    </Grid>\n                                    <Grid item xs={1}>\n                                        <IconButton\n                                            onClick={this.handleOpen}\n                                            aria-label=\"Comments\"\n                                            size=\"small\"\n                                            className={ classes.moreIcon }\n                                        >\n                                            <MoreVertIcon />\n                                        </IconButton>\n                                    </Grid>\n                                </Grid>\n                                :\n                                <Grid container alignItems='center'>\n                                    <Typography variant=\"subtitle2\">\n                                        {this.state.card.cardTitle}\n                                    </Typography>\n                                </Grid>\n                            : null\n                        }\n                        <Grid container alignItems='center' justify='flex-end'>\n                            { this.props.isLoading ?\n                                <MiniLoader/>\n                                :\n                                this.props.currentCard.MemberhascardCardFks ? this.props.currentCard.MemberhascardCardFks.map(member =>\n                                    member.Member.memberPicture ?\n                                        <Avatar\n                                            key={member.memberId}\n                                            alt={member.Member.memberFirstname + 'sharp'}\n                                            src={member.Member.memberPicture}\n                                            className={classNames(classes.avatar, classes.littleAvatar)}\n                                        />\n                                        :\n                                        <Avatar className={classes.orangeAvatar} key={member.memberId}>\n                                            {member.Member.memberFirstname.toUpperCase()[0]}\n                                        </Avatar>\n                                ) : null}\n                        </Grid>\n                    </Grid>\n                </Card>\n            </div>\n        );\n    }\n}\n\nCardboard.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    isLoading: state.project.isLoading,\n    refresh: state.project.maj\n})\nconst mapDispatchToProps = {\n    onUpdateCard : _action.cardAction.updatecard,\n    onGetCard : _action.cardAction.getCard,\n    onUpdateDate: _action.listAction.updateDueDateCard,\n    onUpdateDescription: _action.listAction.updateDescription,\n    onUpdateTitle:_action.listAction.updateCardTitle\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Cardboard));","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport {  Draggable } from 'react-beautiful-dnd';\nimport { styles } from './Style'\n\nimport CardElement from '../../card/Card'\n\n\nclass Card extends Component{\n\n    render() {\n        const {classes} = this.props\n        return (\n            <div className={ classes.listElement }>\n                <Draggable\n                    key={this.props.card.cardId}\n                    draggableId={this.props.card.cardId}\n                    index={this.props.index}\n                >\n                    {(provided, snapshot) =>  {\n                        return (\n                            <div\n                                {...provided.draggableProps}\n                                {...provided.dragHandleProps}\n                                ref={provided.innerRef}\n                            >\n                                <CardElement\n                                    currentCard={this.props.card}\n                                    listIndex={this.props.listIndex}\n                                    cardIndex={this.props.cardIndex}\n                                    route={this.props.route}\n                                />\n                            </div>\n                        )}}\n                </Draggable>\n            </div>\n        )\n    }\n}\n\nexport default withStyles(styles)(Card)","export const styles = theme => ({\n    card: {\n        margin: theme.spacing.unit * 1,\n        border:`1px solid lightgrey` ,\n        borderRadius: '4px',\n        padding:theme.spacing.unit * 2,\n        maxWidth: `250px`,\n        wordWrap: `break-word`,\n        whiteSpace: `normal`,\n        backgroundColor:'white'\n        \n    },\n    typography: {\n        useNextVariants: true,\n      },\n    paragraph:{\n        wordWrap: `break-word`\n    },\n    listElement: {\n        marginBottom: theme.spacing.unit * 1\n    }\n});","export const styles = theme => ({\n    dialogTitle:{\n        textAlign:`center`\n    },\n    validIcon:{\n        color:`#6bb53f`,\n    },\n    divider:{\n        paddingBottom:`60px`\n    },\n    rightIcon: {\n        marginLeft: theme.spacing.unit,\n    },\n    marginBottom: {\n        marginBottom: 20\n    },\n    marginBottomTop: {\n        marginTop: 15\n    },\n    memberList: {\n        overflowY: 'scroll',\n        height: theme.spacing.unit * 10,\n    },\n    memberItem: {\n        //maxHeight: 10\n    },\n    errorMsg: {\n        color: '#f44336',\n    },\n    memberDialog: {\n        width: '440px'\n    }\n})","import React, { Component } from 'react';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport {withStyles } from '@material-ui/core/styles';\nimport { styles } from './Style'\n\nclass SimpleDialog extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      newTitle:'',\n      submitted:false\n    }\n  }\n  \n\n\n    handleClose = () => {\n      const newTitle = this.state.newTitle\n      this.setState({newTitle:''}, function() { \n        if(!this.state.submitted) this.props.onClose('')\n        else this.props.onClose(newTitle)}\n      )\n     \n    };\n\n    handleSubmit = () => {\n        this.setState({submitted:true}, function() { this.handleClose()} )      \n      };\n    \n    close = () =>{\n        this.setState({submitted:false}, function() { this.handleClose()} )\n    }\n    \n    handleChange = name => event => {\n        this.setState({\n          [name]: event.target.value,\n        });\n    };\n\n    render() {\n      const { classes, onClose, selectedValue, ...other } = this.props;\n      \n      return (\n        <Dialog onClose={this.close} aria-labelledby=\"simple-dialog-title\" {...other}>\n            <DialogTitle id=\"simple-dialog-title\" className={classes.dialogTitle}>Add a new {this.props.type} </DialogTitle>\n            <DialogContent>\n                <TextField\n                        id=\"outlined-multiline-static\"\n                        label={this.props.type+\" name\"}\n                        name=\"selectedValue\"\n                        multiline\n                        rows=\"3\"         \n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        onChange={this.handleChange('newTitle')}\n                        />\n            </DialogContent>\n            <DialogActions>\n                    <Button variant=\"contained\" disabled={this.state.newTitle ? false : true} onClick={this.handleSubmit.bind(this)} color=\"primary\" fullWidth size=\"small\">\n                        Add {this.props.type}\n                    </Button>\n            </DialogActions>\n        </Dialog>\n      );\n    }\n  }\n\n  export default withStyles(styles)(SimpleDialog)","export const styles = theme => ({\n    listArea: {\n        whiteSpace: `nowrap`,\n        overflowY: `auto`,\n        flexWrap: 'inherit',\n    },\n    listHeight: {\n        height: '100%'\n    },\n    list: {\n        width: '272px',\n        margin: '7px',\n        marginRight: 0,\n        backgroundColor:`#1e88e5`,\n    },\n    borderRadius: {\n        borderTopLeftRadius: '10px',\n        borderTopRightRadius: '10px'\n    },\n    borderRadiusBottom: {\n        borderBottomLeftRadius: '10px',\n        borderBottomRightRadius: '10px'\n    },\n    listTitle: {\n        textAlign:`left`,\n        color : `black`,\n        backgroundColor:'red',\n        border:`1px solid grey`,\n        fontWeight: `lighter`,\n        wordBreak: `break-all`\n    },\n    buttonList:{\n        marginTop:`15px`,\n        marginLeft:`30px`\n    },\n    button:{\n        fontSize: '11px',\n        color: 'white',\n        backgroundColor: '#155fa0'\n    },\n    dropSpace:{\n        padding:'10px',\n        minHeight:`20px`\n    },\n    textField:{\n        marginLeft:theme.spacing.unit,\n        marginRight:theme.spacing.unit,\n    },\n    textField2:{\n        padding: 0,\n        margin: 0,\n        color: 'white'\n    },\n    dialogBox:{\n        marginLeft: theme.spacing.unit,\n    },\n    badge:{\n        left:'0',\n        marginRight: theme.spacing.unit * 2,\n        color: 'white'\n    },\n    validEditTitle:{\n        color : 'white',\n        left:'0',\n        marginRight: theme.spacing.unit * 2,\n    },\n    listElement: {\n        marginBottom: 20\n    },\n    listsGrid: {\n        paddingLeft:  theme.spacing.unit * 5,\n        paddingRight: theme.spacing.unit * 5,\n        maxWidth: '100%'\n    },\n    listTitle2: {\n        backgroundColor: '#155fa0',\n    },\n    noPadding: {\n        padding: 0\n    },\n    TexfieldGrid: {\n        padding: 0,\n    },\n    cardSlot: {\n        backgroundColor: '1e88e5'\n    },\n    whiteText: {\n        color: 'white'\n    },\n    widthMax: {\n        maxWidth: '100%',\n        paddingLeft: theme.spacing.unit * 5,\n        height: '100%'\n    },\n    gridList: {\n        display: 'grid',\n        flexWrap: 'nowrap',\n        transform: 'translateZ(0)',\n    },\n    buttonAddList: {\n        marginBottom: theme.spacing.unit * 5,\n    },\n    listItem: {\n        width: '200px',\n    },\n    horizontalScrollWrapper: {\n        width: '100%',\n        overflowY: 'auto',\n        overflowX: 'hidden',\n        backgroundColor: 'red',\n    }\n});","import React, { Component } from 'react';\nimport Card from '../card/Card'\nimport { withStyles } from '@material-ui/core/styles';\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\nimport Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/Add';\nimport SimpleDialog from '../../ui/dialog/SimpleDialog'\nimport { styles } from './Style'\n\nimport List from '@material-ui/core/List';\nimport Badge from '@material-ui/core/Badge';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport { Done} from '@material-ui/icons';\nimport ListItem from \"@material-ui/core/ListItem/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText/ListItemText\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction/ListItemSecondaryAction\";\nimport Typography from \"@material-ui/core/Typography/Typography\";\n\nconst ITEM_HEIGHT = 38;\n\nclass ListPrello extends Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            editListTitle : false,\n            newListTitle:'',\n            newCardTitle:'',\n            isOpenAddCardDialog: false,\n            anchorEl: null,\n            isOpenDeleteDialog: false,\n            open:false,\n\n        }\n        this.handleArchivedList = this.handleArchivedList.bind(this)\n        this.handleEditTitle = this.handleEditTitle.bind(this)\n        this.handleCloseDeleteListDialog = this.handleCloseDeleteListDialog.bind(this)\n        this.handleConfirmDeleteList = this.handleConfirmDeleteList.bind(this)\n    }\n\n\n\n    createNewCard(){\n        let cardName = this.state.newCardTitle\n        let listId = this.props.list.listId\n        let cardFather = this.props.list.CardListFks.length\n        if(cardName) this.props.createCard(cardName,listId,this.props.idProject, this.props.member, cardFather)\n    }\n\n\n\n    handleClickOpen = () => {\n        this.setState({\n            open: true,\n        });\n    };\n\n\n    handleClose = (value) => {\n        this.setState({ newCardTitle: value, open: false }, function(){  this.createNewCard()});\n\n    };\n\n    handleClickMenu = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleCloseMenu = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    /* =============DELETE LIST ================= */\n    handleDeleteList = () =>{\n\n        this.setState({ isOpenDeleteDialog: true });\n    }\n\n    handleCloseDeleteListDialog(){\n\n        this.setState({ isOpenDeleteDialog: false });\n    }\n\n    handleConfirmDeleteList(){\n\n        const {list, idProject} = this.props\n        this.props.deleteList(list.listId,idProject)\n    }\n\n    /*===============Edit title ====================*/\n    handleOpenMenu = name => event =>{\n        this.setState({ [name]: true });\n    }\n\n    handleChange = name => event => {\n\n        this.setState({\n            [name]: event.target.value,\n        });\n    };\n\n    handleEditTitle(){\n\n        if(this.state.newListTitle) this.props.updateListTitle(this.state.newListTitle,this.props.list.listId)\n        this.setState({editListTitle: false}, ()=>{\n        })\n    }\n\n\n    /*============== Archived list ==============*/\n    handleArchivedList (){\n        const {list} = this.props\n        this.handleCloseMenu()\n        this.props.archiveList(list.listId,1)\n    }\n\n\n\n    render() {\n        const {classes,list} = this.props\n        const { editListTitle, anchorEl } = this.state;\n        const open = Boolean(anchorEl);\n\n        const confirmDeleteDialog = (\n            <Dialog\n                open={this.state.isOpenDeleteDialog}\n                keepMounted\n                onClose={this.handleCloseDeleteListDialog}\n                aria-labelledby=\"alert-dialog-slide-title\"\n                aria-describedby=\"alert-dialog-slide-description\"\n            >\n                <DialogTitle id=\"alert-dialog-slide-title\">\n                    {\"Warning\"}\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-slide-description\">\n                        Are you sure you want to delete this list ?\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCloseDeleteListDialog} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={this.handleConfirmDeleteList} color=\"primary\">\n                        Yes\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        )\n\n        const MenuList = (\n            <ListItemSecondaryAction>\n                <IconButton\n                    onClick={this.handleClickMenu}\n                    aria-label=\"Comments\"\n                    size=\"small\"\n                    className={ classes.whiteText }\n                >\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id=\"long-menu\"\n                    anchorEl={anchorEl}\n                    open={open}\n                    onClose={this.handleCloseMenu}\n                    PaperProps={{\n                        style: {\n                            maxHeight: ITEM_HEIGHT * 4.5,\n                            width: 200,\n                        },\n                    }}\n                >\n\n                    <MenuItem key=\"editListTitle\"  onClick={this.handleOpenMenu('editListTitle')}>\n                        Edit title\n                    </MenuItem>\n                    <MenuItem key=\"deleteList\"  onClick={this.handleDeleteList}>\n                        Delete\n                    </MenuItem>\n                    {confirmDeleteDialog}\n                    <MenuItem key=\"archivedList\"  onClick={this.handleArchivedList}>\n                        Archived\n                    </MenuItem>\n\n                    ))}\n                </Menu>\n            </ListItemSecondaryAction>\n        )\n\n\n        return (\n            <Draggable draggableId={\"List:\"+this.props.list.listId} index={this.props.index}>\n                {(provided,snapshot) => {\n                    return (\n                        <div className={classes.list + ' ' + classes.borderRadius + ' ' + classes.borderRadiusBottom}\n                             {...provided.draggableProps}\n                             ref={provided.innerRef}\n                        >\n                            <List\n                                component=\"nav\"\n                                disablePadding={true}\n                                dense={true}\n                                className={ classes.borderRadius }\n                            >\n                                <ListItem {...provided.dragHandleProps} className={classes.listTitle2 + ' ' + classes.borderRadius}>\n                                    <ListItemText>\n                                        {!editListTitle ?\n                                            <Grid justify='flex-start' alignItems='center' container>\n                                                <Badge\n                                                    badgeContent={list.CardListFks ? list.CardListFks.filter(card => card.cardStatus === 0).length : 0}\n                                                    className={classes.badge}\n                                                    color='error'\n                                                >\n                                                    <p style={{color:'#155fa0'}}>p</p>\n                                                </Badge>\n                                                <Typography variant='overline' className={ classes.whiteText }>\n                                                    {this.props.list.listTitle}\n                                                </Typography>\n                                                {MenuList}\n                                            </Grid>\n                                            :\n                                            <Grid justify='flex-start' alignItems='center' container className={ classes.noPadding }>\n                                                <Badge\n                                                    badgeContent={list.CardListFks ? list.CardListFks.filter(card => card.cardStatus === 0).length : 0}\n                                                    className={classes.badge}\n                                                    color='error'\n                                                />\n                                                <Grid item xs={9} className={ classes.TexfieldGrid }>\n                                                    <TextField\n                                                        id=\"standard-bare\"\n                                                        className={classes.textField2}\n                                                        defaultValue={list.listTitle}\n                                                        margin=\"normal\"\n                                                        onChange={this.handleChange('newListTitle')}\n                                                    />\n                                                </Grid>\n                                                <ListItemSecondaryAction>\n                                                    <IconButton\n                                                        onClick={this.handleEditTitle}\n                                                        aria-label=\"valid\"\n                                                        size=\"small\"\n                                                        className={ classes.validEditTitle }\n                                                    >\n                                                        <Done />\n                                                    </IconButton>\n                                                </ListItemSecondaryAction>\n                                            </Grid>\n                                        }\n                                    </ListItemText>\n\n                                </ListItem>\n                                <Droppable droppableId={this.props.list.listId+\":\"+this.props.list.listTitle} type=\"CARD\">\n                                    {(provided) => {\n                                        return (\n                                            <div\n                                                ref={provided.innerRef}\n\n                                                className={classes.dropSpace + ' ' + classes.cardSlot} style={{flexGrow:1}} >\n\n                                                {list.CardListFks.filter(card => card.cardStatus === 0 ).map((card,index) =>\n                                                    <div key={index}>\n                                                        <Card\n                                                            key={card.cardId}\n                                                            card={card}\n                                                            listIndex={this.props.listIndex}\n                                                            cardIndex={index}\n                                                            index={index}\n                                                            route={this.props.route}\n                                                        />\n                                                    </div>\n\n\n\n                                                )}\n\n                                                {provided.placeholder}\n\n                                            </div>\n                                        )}}\n                                </Droppable>\n                                <Grid container justify=\"space-between\">\n                                    <Grid item xs={12}>\n                                        <Button\n                                            fullWidth\n                                            color='primary'\n                                            size=\"small\"\n                                            className={classes.button + ' ' + classes.borderRadiusBottom}\n                                            onClick={this.handleClickOpen}>\n                                            <AddIcon /> new card\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n\n                                <SimpleDialog\n                                    type=\"card\"\n                                    open={this.state.open}\n                                    onClose={this.handleClose}\n                                />\n                            </List>\n                        </div>\n                    )}\n                }\n            </Draggable>\n        )\n    }\n}\n\n\n\n\n\nexport default withStyles(styles)(ListPrello)\n\n","import React, { Component } from 'react';\nimport List from './List'\nimport { withStyles } from '@material-ui/core/styles';\nimport { Droppable } from 'react-beautiful-dnd';\nimport AddIcon from '@material-ui/icons/Add';\nimport Button from '@material-ui/core/Button';\nimport { styles } from './Style'\nimport SimpleDialog from '../../ui/dialog/SimpleDialog'\nimport Grid from \"@material-ui/core/Grid/Grid\";\n\n\n\n\nclass Lists extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            newListname:'',\n            open: false,\n        }\n    }\n\n\n    createNewList(){\n        let listName = this.state.newListname\n        let idProject = this.props.idProject\n        if(listName) this.props.createListCallback(listName,idProject)\n    }\n\n\n    handleChange = name => event => {\n        this.setState({\n            [name]: event.target.value,\n        });\n\n    };\n\n    handleClickOpen = () => {\n        this.setState({\n            open: true,\n        });\n    };\n\n    handleClose = (value) => {\n        this.setState({ newListname: value, open: false }, function(){  this.createNewList()});\n    };\n\n\n\n\n    render() {\n        const { classes,lists,idProject} = this.props;\n\n        return (\n\n            <Droppable droppableId=\"allList\" direction=\"horizontal\" type=\"LIST\">\n                {(provided) =>(\n                    <div\n                        className={ classes.widthMax + ' ' + classes.listHeight }\n                        ref={provided.innerRef}\n                        {...provided.droppableProps}\n                    >\n                        <Grid container justify='flex-start' className={ classes.buttonAddList }>\n                            <Button\n                                onClick={this.handleClickOpen}\n                                variant=\"outlined\"\n                                color='primary'\n                                aria-label=\"Add\"\n                                className={classes.buttonList}\n                            >\n                                <AddIcon />\n                                New list\n                            </Button>\n                        </Grid>\n                        <Grid container id='listScroll' className={classes.listArea}>\n                            {lists.length === 0 ? '' :lists.filter(list => list.listStatus === 0).map((list, index) =>\n                                <Grid item key={list.listTitle+list.listId}>\n                                    <List\n                                        idProject={idProject}\n                                        list={list}\n                                        listIndex={index}\n                                        index={index}\n                                        deleteList = {this.props.deleteList}\n                                        updateListTitle = {this.props.updateListTitle}\n                                        archiveList = {this.props.archiveList}\n                                        createCard = {this.props.createCard}\n                                        member={this.props.member}\n                                        route = {this.props.route}\n                                    />\n                                </Grid>\n                            )}\n                            {provided.placeholder}\n                            <SimpleDialog\n                                type=\"list\"\n                                open={this.state.open}\n                                onClose={this.handleClose}\n                            />\n                        </Grid>\n                    </div>\n                )}\n\n            </Droppable>\n        )\n    }\n}\n\n\n\n\nexport default withStyles(styles)(Lists)","import React, { Component } from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from \"@material-ui/core/Typography/Typography\";\nimport Grid from \"@material-ui/core/Grid/Grid\";\nimport Divider from \"@material-ui/core/Divider/Divider\";\n\nclass ActivityList extends Component{\n    render() {\n        return (\n            <List>\n            {this.props.activities.length > 0 ?\n                this.props.activities.map( (activity, index) =>\n                    <ListItem key={index}>\n                        <Grid justify=\"space-between\" container>\n                            <Typography variant='h6'>\n                                {activity.actionTitle}\n                            </Typography>\n                            <Typography variant='caption'>\n                                {activity.actionDateCreation}\n                            </Typography>\n                            <Grid xs={12} item>\n                                <Typography variant='body2'>\n                                    {activity.actionDescription}\n                                </Typography>\n                                <Divider/>\n                            </Grid>\n                        </Grid>\n                    </ListItem>\n                 )\n                :\n                <ListItem key=\"0\">\n                    <ListItemText primary=\"0 activity founds\"/>\n                </ListItem>\n            }\n            \n        </List>\n        )\n    }\n}\nexport default ActivityList;","import React, { Component } from 'react';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport IconButton from '@material-ui/core/IconButton';\nimport {Send,Cancel} from '@material-ui/icons';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Divider from '@material-ui/core/Divider';\nimport {withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { connect } from 'react-redux'\nimport _action from '../../../actions'\nimport _helper from '../../../helpers'\nimport Checkbox from '@material-ui/core/Checkbox';\nimport MiniLoader from '../../ui/loader/MiniLoader'\n\nimport { styles } from './Style'\nimport Grid from \"@material-ui/core/Grid/Grid\";\nimport Typography from \"@material-ui/core/Typography/Typography\";\nimport Fade from \"@material-ui/core/Fade/Fade\";\nimport Tooltip from \"@material-ui/core/Tooltip/Tooltip\";\n\n\n\nclass MemberDialog extends Component {\n    constructor(props){\n        super(props)\n        this.handleRemoveFromProject = this.handleRemoveFromProject.bind(this)\n        this.handleChangeCheckbox = this.handleChangeCheckbox.bind(this)\n\n        this.state = {\n            memberEmail: '',\n            submitted: false,\n            errorMsg: '',\n            members: []\n        }\n    }\n\n    componentWillReceiveProps () {\n        this.setState({members: this.props.members})\n    }\n\n    close = () =>{\n        this.setState({\n            memberEmail: '',\n            submitted: false,\n            errorMsg: ''\n        })\n        this.props.onClose()\n    }\n\n    handleChange = name => event => {\n        this.setState({\n            [name]: event.target.value,\n        });\n    };\n\n    submitInvitation(){\n        if (_helper.Method.isTypeEmail(this.state.memberEmail)) {\n            this.setState({ errorMsg: '' })\n            let body = {\n                memberEmail: this.state.memberEmail,\n                projectId: this.props.projectInfo.projectId\n            }\n            this.props.sendInvitation(body)\n            this.setState({ memberEmail: '' })\n        } else {\n            this.setState({ errorMsg: 'Please, provide a valid email adress.' })\n        }\n    }\n\n    handleRemoveFromProject (event) {\n        let query = {\n            projectId: this.props.projectInfo.projectId,\n            memberId: event.currentTarget.id.split('/')[1]\n        }\n        this.props.removeMemberFromProject(query)\n        console.log(event.currentTarget.id.split('/')[1])\n        console.log(this.props.currentmemberid)\n        if (event.currentTarget.id.split('/')[1].toString() === this.props.currentmemberid.toString()) _helper.History.push('/home')\n        else this.setState({ maj: true });\n    }\n\n    handleChangeCheckbox = name => event => {\n        let index = event.target.id.split('/')[1]\n        let mhppState = event.target.checked\n        let member = Object.assign({}, this.props.members[index])\n        console.log(member)\n        console.log(this.props.currentmemberid)\n        if (member.Member) {\n            member.Member.HaspermissionprojectMember1Fks[0].mhppState = mhppState\n            let projectId = this.props.projectInfo.projectId\n            let memberId = member.memberId\n            let permissionId = member.Member.HaspermissionprojectMember1Fks[0].permissionId\n            this.props.onUpdatePermission(projectId, memberId, permissionId, mhppState, this.props.members)\n        }\n        this.setState({ maj: true });\n    };\n\n    render() {\n        const {onUpdatePermission, isLoading, isAdmin, setAsAdministrator,removeMemberFromProject, sendInvitation, projectInfo, classes, onClose, selectedValue, ...other } = this.props;\n        return (\n            <Dialog\n                onClose={this.close.bind(this)}\n                aria-labelledby=\"simple-dialog-title\"\n                {...other}\n            >\n                <DialogTitle id=\"simple-dialog-title\" className={classes.dialogTitle}>Members</DialogTitle>\n                <DialogContent className={ classes.memberDialog }>\n                    <DialogContentText>\n                        Add a user on the project\n                    </DialogContentText>\n                    <Grid alignItems='flex-end' container className={ classes.marginBottom }>\n                        <Grid item xs={12}>\n                            <TextField\n                                id=\"invitationEmail\"\n                                label=\"Email\"\n                                disabled={this.props.isLoading || this.props.isAdmin === false}\n                                error={this.state.errorMsg !== ''}\n                                fullWidth\n                                value={this.state.memberEmail}\n                                type='email'\n                                name=\"invitationEmail\"\n                                margin=\"normal\"\n                                variant=\"outlined\"\n                                onChange={this.handleChange('memberEmail')}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Button\n                                fullWidth\n                                size='small'\n                                disabled={!this.props.isAdmin}\n                                color=\"primary\"\n                                className={classes.validIcon}\n                                onClick={this.submitInvitation.bind(this)}\n                            >\n                                Send\n                                <Send className={classes.rightIcon} />\n                            </Button>\n                        </Grid>\n                    </Grid>\n\n                    <Typography variant='caption' className={ classes.errorMsg }>\n                        {this.state.errorMsg}\n                    </Typography>\n\n                    <DialogContentText>\n                        Active members\n                    </DialogContentText>\n                    <Divider/>\n                    <List className={ classes.memberList + ' ' + classes.marginBottomTop }>\n                        { isLoading ? (\n                            <MiniLoader/>\n                        ) :  this.props.members ? this.props.members.map(member =>\n                            member.memberhasprojectStatus === 1 ? (\n                                <ListItem key={member.Member.memberId} className={ classes.memberItem }>\n                                    <ListItemText primary={member.Member.memberPseudo}/>\n                                    <div>\n                                        <div>\n                                            <IconButton id={'member/' + member.Member.memberId} color=\"secondary\"  onClick={this.handleRemoveFromProject}>\n                                                <Cancel />\n                                            </IconButton>\n                                            {this.props.isAdmin === true && member.memberId !== this.props.currentmemberid ?\n\n                                                <Tooltip\n                                                    TransitionComponent={Fade}\n                                                    TransitionProps={{ timeout: 600 }}\n                                                    title=\"Admin\"\n                                                    placement=\"top-start\">\n                                                    <Checkbox\n                                                        checked={member.Member.HaspermissionprojectMember1Fks[0].mhppState}\n                                                        id={'isAdmin/' + this.props.members.indexOf(member).toString()}\n                                                        onChange={this.handleChangeCheckbox('members')}\n                                                        value='members'\n                                                    />\n                                                </Tooltip>\n                                                : '' }\n                                        </div>\n                                    </div>\n                                </ListItem>\n                            ) : null\n                        ) : null }\n                    </List>\n\n                    <DialogContentText>\n                        Invited members\n                    </DialogContentText>\n                    <Divider/>\n                    <List className={ classes.memberList }>\n                        { isLoading ? (\n                            <MiniLoader/>\n                        ) :  this.props.members ? this.props.members.map(member =>\n                            member.memberhasprojectStatus !== 1 ? (\n                                <ListItem key={member.Member.memberId} className={ classes.memberItem }>\n                                    <ListItemText primary={member.Member.memberEmail}>\n                                    </ListItemText>\n                                    <div>\n                                        {this.props.isAdmin === true ?\n                                            <Button id={'member/' + member.Member.memberId} onClick={this.handleRemoveFromProject}>\n                                                <Cancel />\n                                            </Button> : '' }\n                                    </div>\n                                </ListItem>\n                            ) : null\n                        ) : null }\n                    </List>\n                </DialogContent>\n                <DialogActions>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    projectInfo : state.project.projectInfo || [],\n    members : state.project.members,\n    currentmemberid: state.signin.member.memberId,\n    isLoading: state.project.isLoading\n})\nconst mapDispatchToProps ={\n    sendInvitation: _action.projectAction.sendInvitationProject,\n    onUpdatePermission: _action.projectAction.updatePermissionMember,\n    removeMemberFromProject : _action.projectAction.removeMemberFromProject\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(withStyles(styles)(MemberDialog))","import React, { Component } from 'react';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport {Done} from '@material-ui/icons';\nimport Button from '@material-ui/core/Button';\nimport {withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { connect } from 'react-redux'\nimport _action from '../../../actions'\n\nimport { styles } from './Style'\n\n\n\nclass VisibilityDialog extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      newTitle:'',\n      submitted:false,\n      visibility: ''\n    }\n  }\n\n  componentDidUpdate(prevProps){\n    \n    if(this.props.projectInfo !== prevProps.projectInfo ){\n        this.setState( {visibility : this.props.projectInfo.visibility})\n    }\n}\n\n    componentWillReceiveProps(){\n      if (this.props.projectInfo) this.setState({visibility: this.props.projectInfo.projectVisibility})\n    }\n\n    \n    close = () =>{\n        this.props.onClose()\n    }\n    \n    handleChange = name => event => {\n        this.setState({\n          [name]: event.target.value,\n        });\n    };\n\n    updateVisibility(){\n\n      if(this.state.visibility === 1){\n          this.setState({visibility:0})\n          this.props.updateProjectVisibility(0,this.props.projectInfo.projectId)\n      }\n      else{\n        this.setState({visibility:1})\n        this.props.updateProjectVisibility(1,this.props.projectInfo.projectId)\n      }    \n    }\n\n    render() {\n      const { isAdmin, updateProjectVisibility,projectInfo, classes, onClose, selectedValue, ...other } = this.props;\n\n      return (\n        <Dialog onClose={this.close.bind(this)} aria-labelledby=\"simple-dialog-title\" {...other}>\n            <DialogTitle id=\"simple-dialog-title\" className={classes.dialogTitle}>Project visibility</DialogTitle>\n            <DialogContent>\n                <List>\n                    <ListItem><Button disabled={this.state.visibility === 0 || !this.props.isAdmin ?true : false} onClick={this.updateVisibility.bind(this)} value={0}><ListItemText primary=\"Public\" secondary=\"This project is visible by everyone. Read Only\"></ListItemText>{this.state.visibility === 0? <Done/>:''}</Button></ListItem>\n                    <ListItem><Button disabled={this.state.visibility === 1 || !this.props.isAdmin ?true : false} onClick={this.updateVisibility.bind(this)} value={1}><ListItemText primary=\"Private\" secondary=\"This project is only visible by project members\"></ListItemText>{this.state.visibility === 1? <Done/>:''}</Button></ListItem>\n                </List>\n            </DialogContent>\n            <DialogActions>\n            </DialogActions>\n        </Dialog>\n      );\n    }\n  }\n\n  const mapStateToProps = (state) => ({ \n    projectInfo : state.project.projectInfo || ''\n})\n\n  const mapDispatchToProps ={\n    updateProjectVisibility: _action.projectAction.updateProjectVisibility,\n  }\nexport default connect(mapStateToProps,mapDispatchToProps)(withStyles(styles)(VisibilityDialog))","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\n\n//Helpers and actions\nimport _action from '../../actions'\nimport _helper from '../../helpers'\nimport _service from '../../services'\n\n// Drag and drop \nimport { DragDropContext} from 'react-beautiful-dnd';\n\n// Components\nimport Lists from './list/Lists'\nimport ActivityList from '../ui/activity/ActivityList'\nimport LoaderPage from '../ui/loader/Loader'\n\n// Material Ui\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { Button } from '@material-ui/core';\nimport {RestorePage, Archive, SupervisorAccount,RemoveRedEye,Description,Edit, Done} from '@material-ui/icons';\nimport TextField from '@material-ui/core/TextField';\nimport MemberDialog from '../ui/dialog/MemberDialog'\nimport VisibilityDialog from '../ui/dialog/VisibilityDialog'\nimport Drawer from '@material-ui/core/Drawer';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport IconButton from '@material-ui/core/IconButton';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\n\n// Styles\nimport {withStyles } from '@material-ui/core/styles';\nimport { styles } from './Style'\n\n// Socket IO\nimport socket from '../../helpers/SocketIo.helper'\n\n\n\n\n\nclass Project extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            lists : [],\n            updateLists : false,\n            editProjectTitle : false,\n            newProjectTitle : '',\n            openMemberDialog:false,\n            openVisibilityDialog:false,\n            members:[],\n            openActivity:false,\n            openFilter:false,\n            openArchived:false,\n            projectInfo:''\n        }\n\n        this.socket = socket\n        this.handleRestoreArchived = this.handleRestoreArchived.bind(this)\n        this.deleteList = this.deleteList.bind(this)\n        this.updateListTitle = this.updateListTitle.bind(this)\n        this.archiveList = this.archiveList.bind(this)\n        this.createCard = this.createCard.bind(this)\n        this.createNewList = this.createNewList.bind(this)\n\n        this.socket.on('updateLists', this.socketUpdateLists.bind(this))\n        this.socket.on('updateProject', this.socketUpdateProject.bind(this))\n\n\n\n    }\n\n    socketUpdateLists(lists){\n         this.props.loadLists(lists)\n     }\n    \n     socketUpdateProject(project){\n         console.log(project)\n        this.props.loadProjectInfo(project)\n    }\n\n    componentWillMount() {\n        const {match, currentMemberId, logged, getMemberHasProject, getProjectInfo,getAllListsWithCards, getMemberStatus,getActivity} = this.props\n\n        this.socket.emit(\"subscribe\", this.props.match.params.id)\n        const projectId = this.props.match.params.id\n\n        // Get project informations\n        getProjectInfo(match.params.id)\n\n        getMemberHasProject(logged.memberId, match.params.id)\n\n        // Get all lists of this project with associated cards\n        getAllListsWithCards(match.params.id)\n\n        // Get all project members\n        this.props.getAllMembers(this.props.match.params.id)\n\n        // Verify if it's a project administrator\n        getMemberStatus(match.params.id, currentMemberId)\n\n        //Get all activity related to this project\n        getActivity(match.params.id)\n\n        //this.props.getLabels()\n        this.props.onGetAllPermissions(projectId)\n\n    }\n\n    componentWillUnmount(){\n        this.socket.emit(\"unsubscribe\",this.props.match.params.id)\n    }\n\n\n\n    //Will set the state with props\n    componentWillReceiveProps(){\n        const {lists,members} = this.props\n\n        this.setState({ updateLists : false,\n            lists : lists,\n            members : members,\n        })\n    }\n\n    // When a change occurs on our props, we verify to change the state (re rendering) if necessary\n    componentDidUpdate(prevProps){\n        const {hasProject,projectInfo} = this.props\n\n        // verify if props exist\n        if(projectInfo){\n            // If Logged user is not a member of the project & project is private\n            if(hasProject === false && projectInfo.projectVisibility ===1)\n            //redirect to home\n                _helper.History.push('/home')\n        }\n\n\n        // If a change occurs on lists props\n        if(this.props.lists !== prevProps.lists ){\n\n            this.setState( {lists : this.props.lists},()=>{\n            })\n            // this.orderList(this.props.lists)\n        }\n\n        //If a change occurs on projectInfo\n        if(this.props.projectInfo !== prevProps.projectInfo ){\n            this.setState( {projectInfo : this.props.projectInfo})\n        }\n    }\n\n\n\n    /**\n     * Create a new List by calling the action \"createList\"\n     * @param listName title of the new list\n     * @param idProject project id associated to the new list\n     */\n    createNewList(listName,idProject){\n        const {lists} = this.state\n\n\n        //this.socket.emit('add',\"new list\")\n\n\n        // if its the first list created for this project, the list has no father\n        if(lists.length === 0 ){\n            this.props.createList(listName,idProject,0,  this.props.currentMember)\n\n            // we call creatList action specifying the title, project id and father list id.\n        }else{\n            this.props.createList(listName,idProject,lists.length, this.props.currentMember)\n        }\n\n    }\n    deleteList(listId,idProject){\n        this.props.deleteList(listId,idProject)\n    }\n\n    updateListTitle(newListTitle,listId){\n        this.props.updateListTitle(newListTitle,listId)\n    }\n    archiveList(listId){\n        this.props.archiveList(listId,1)\n    }\n\n    /*============= CARD ACTIONS ======================*/\n    createCard(cardName,listId,idProject, member, cardFather){\n        this.props.createCard(cardName,listId,idProject, this.props.currentMember, cardFather)\n    }\n\n\n\n\n\n\n\n    /**\n     * Will occurs when something has been dragged\n     */\n    onDragEnd = (result) => {\n\n        //retrieve source and destination data (given by dnd)\n        const { source, destination,draggableId } = result;\n        //retrieve lists\n        const {lists} = this.state\n        const notArchivedList = Array.from(lists.filter(list => list.listStatus === 0))\n        const archivedList = Array.from(lists.filter(list => list.listStatus === 1))\n\n        // dropped outside the droppagble area\n        if (!destination) {\n            return;\n        }\n\n\n        //When a list has been dragged and dropped\n        if(result.type === 'LIST'){\n\n            let dragId = draggableId.split(':');\n            dragId = Number.parseInt(dragId[1])\n            let findList = notArchivedList.find(list => list.listId === dragId)\n\n            let indexOfList = notArchivedList.findIndex(list => list.listId === findList.listId)\n            let newLists = Array.from(notArchivedList)\n\n            //remove list from list of list\n            newLists.splice(indexOfList,1,)\n\n            //Insert list in new index\n            newLists.splice(destination.index,0,findList)\n\n            const newArrayList = newLists.concat(archivedList)\n\n            //set state with the new list           \n            this.setState({lists:newArrayList},() =>{\n             })\n\n            /** Keeps order list updated */\n            let listsOrder = _helper.Method.computeListOrder(this.state.lists)\n            this.props.updatePositionLists(newArrayList, listsOrder)\n        }\n\n        // When a card has been dragged and dropped\n        if (result.type === 'CARD') {\n\n            let sourceListId =  Number.parseInt(source.droppableId.split(':')[0])\n            let sourceList = Object.assign({},lists.find(list => list.listId === sourceListId ))\n\n            let destinationListId = Number.parseInt(destination.droppableId.split(':')[0])\n            let destinationList =  Object.assign({},lists.find(list => list.listId === destinationListId ))\n            let draggedCard = sourceList.CardListFks.find(card => card.cardId === draggableId )\n\n            // When card has been dragged in another list\n            if(destinationListId !== sourceListId){\n\n                const notArchivedCardsSource = Array.from(sourceList.CardListFks.filter(card => card.cardStatus === 0))\n                const archivedCardsSource = Array.from(sourceList.CardListFks.filter(card => card.cardStatus === 1))\n\n                let deleteSourceList = Array.from(notArchivedCardsSource)\n                deleteSourceList.splice(source.index,1,)\n\n\n                const notArchivedCardsDestination = Array.from(destinationList.CardListFks.filter(card => card.cardStatus === 0))\n                const archivedCardsDestination = Array.from(destinationList.CardListFks.filter(card => card.cardStatus === 1))\n\n                let addDestinationList = Array.from(notArchivedCardsDestination)\n                addDestinationList.splice(destination.index,0,draggedCard)\n\n                sourceList.CardListFks = deleteSourceList.concat(archivedCardsSource)\n                destinationList.CardListFks = addDestinationList.concat(archivedCardsDestination)\n\n                let sourceListIndex = lists.findIndex(list => list.listId === sourceList.listId )\n                let destinationListIndex = lists.findIndex(list => list.listId === destinationList.listId )\n\n                let newList = Array.from(lists)\n                newList.splice(sourceListIndex,1,)\n                newList.splice(sourceListIndex,0,sourceList)\n                newList.splice(destinationListIndex,1,)\n                newList.splice(destinationListIndex,0,destinationList)\n\n                this.setState({lists: newList}, () =>{\n                    \n                    this.props.updateCard(draggedCard.cardId, destinationList.listId,newList)\n                })\n                let listsOrder = _helper.Method.computeCardOrder(this.state.lists)\n                this.props.onUpdatePositionCard(listsOrder)\n            }\n            else{\n\n                const notArchivedCardsSource = Array.from(sourceList.CardListFks.filter(card => card.cardStatus === 0))\n                const archivedCardsSource = Array.from(sourceList.CardListFks.filter(card => card.cardStatus === 1))\n\n                let newSourceList = Array.from(notArchivedCardsSource)\n                newSourceList.splice(source.index,1,)\n                newSourceList.splice(destination.index,0,draggedCard)\n\n                sourceList.CardListFks = newSourceList.concat(archivedCardsSource)\n\n                let sourceListIndex = lists.findIndex(list => list.listId === sourceList.listId )\n\n                let newList = Array.from(lists)\n\n                newList.splice(sourceListIndex,1,)\n                newList.splice(sourceListIndex,0, sourceList)\n                this.setState({lists: newList}, () =>{\n                    this.props.updatePositionLists(newList)\n                    \n                })\n                let listsOrder = _helper.Method.computeCardOrder(this.state.lists)\n                this.props.onUpdatePositionCard(listsOrder)\n            }\n\n        }\n\n    };\n\n    //Make title editable\n    handleEditTitle(){\n        this.setState({editProjectTitle:true})\n    }\n\n    // Edit project Title\n    handleValidationEditTitle(){\n        this.setState({editProjectTitle:false})\n        const {newProjectTitle} = this.state\n        // update Project title \n        if(newProjectTitle) this.props.updateTitle(newProjectTitle, this.props.match.params.id)\n    }\n\n    handleChange = name => event => {\n        this.setState({\n            [name]: event.target.value,\n        });\n    };\n\n    handleClickOpen = () => {\n        this.setState({\n            openMemberDialog: true,\n        });\n    };\n\n    handleClickOpenVisibility= () => {\n        this.setState({\n            openVisibilityDialog: true,\n        });\n    };\n\n    handleClose (){\n        this.setState({ openMemberDialog: false,openVisibilityDialog:false });\n    };\n\n    // Open/Close the left side drawer (for filter and activity)\n    toggleDrawer = (side, open) => () => {\n        this.setState({\n            [side]: open,\n        });\n    };\n\n    // Restore archived card or list\n    handleRestoreArchived = (name,type) => event =>{\n\n        if(type === \"list\") {\n\n            this.props.restoreList(name,0)\n        }\n        if(type === \"card\") {\n\n            this.props.restoreCard(name,{cardStatus:0})\n        }\n        //this.toggleDrawer('openArchived', false)\n    }\n\n    render() {\n\n        const {classes, match, projectInfo } = this.props\n\n        /* ================= ACTIVITY DRAWER================= */\n        const renderActivity = (\n            <Drawer\n                anchor=\"right\"\n                open={this.state.openActivity}\n                onClose={this.toggleDrawer('openActivity', false)}\n            >\n                <div\n                    tabIndex={0}\n                    role=\"button\"\n                    onKeyDown={this.toggleDrawer('openActivity', false)}\n                >\n                    <Grid alignItems='center' justify='center' container >\n                        <Grid xs={2} item>\n                            <IconButton\n                                onClick={this.toggleDrawer('openActivity', false)}\n                                color=\"inherit\"\n                            >\n                                <ChevronLeftIcon color='primary' />\n                            </IconButton>\n                        </Grid>\n                        <Grid xs={8} item>\n                            <Button fullWidth color=\"primary\" className={classes.drawer}>\n                                Activity\n                            </Button>\n                        </Grid>\n                        <Grid xs={2} item>\n                        </Grid>\n                    </Grid>\n                    <div className={classes.drawerList}>\n                        <ActivityList activities={this.props.activities}/>\n                    </div>\n                </div>\n            </Drawer>\n        );\n\n        /* ================= ARCHIVED DRAWER================= */\n        const renderArchived = (\n            <Drawer\n                anchor=\"right\"\n                open={this.state.openArchived}\n                onClose={this.toggleDrawer('openArchived', false)}\n            >\n                <div\n                    tabIndex={0}\n                    role=\"button\"\n                    onKeyDown={this.toggleDrawer('openArchived', false)}\n                >\n                    <Grid alignItems='center' justify='center' container >\n                        <Grid xs={2} item>\n                            <IconButton\n                                onClick={this.toggleDrawer('openArchived', false)}\n                                color=\"inherit\"\n                            >\n                                <ChevronLeftIcon color='primary' />\n                            </IconButton>\n                        </Grid>\n                        <Grid xs={8} item>\n                            <Button fullWidth color=\"primary\" className={classes.drawer}>\n                                Archived\n                            </Button>\n                        </Grid>\n                        <Grid xs={2} item>\n                        </Grid>\n                        <div className={classes.expandPanel}>\n                            <ExpansionPanel>\n                                <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                                    <Typography className={classes.heading}>Lists</Typography>\n                                </ExpansionPanelSummary>\n                                <ExpansionPanelDetails>\n                                    <Grid key={1} xs={12} item>\n                                        {this.props.lists ? this.props.lists.filter(list => list.listStatus === 1).map((list,index) =>\n\n                                            <Paper key={index} className={classes.paper}>\n                                                <Grid alignItems='center' justify=\"space-between\" wrap=\"nowrap\" container >\n                                                    <Grid xs={10} item>\n                                                        {list.listTitle}\n                                                    </Grid>\n                                                    <Grid xs={2} item>\n                                                        <IconButton size=\"small\" aria-label=\"valid\" className={classes.restoreButton} onClick={this.handleRestoreArchived(list.listId,\"list\")}>\n                                                            <RestorePage fontSize=\"small\" />\n                                                        </IconButton>\n                                                    </Grid>\n                                                </Grid>\n                                            </Paper>\n\n                                        ): <Paper className={classes.paper}> 0 list archived</Paper>}\n                                    </Grid>\n                                </ExpansionPanelDetails>\n                            </ExpansionPanel>\n                            <ExpansionPanel>\n                                <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                                    <Typography className={classes.heading}>Cards</Typography>\n                                </ExpansionPanelSummary>\n                                <ExpansionPanelDetails>\n                                    <Grid key={1} xs={12} item>\n                                        {this.props.lists ? this.props.lists.map((list,index) => list.CardListFks.filter((card,index) => card.cardStatus === 1).map(card =>\n                                                <Paper key={index+card.cardId} className={classes.paper}>\n                                                    <Grid alignItems='center' justify=\"space-between\" wrap=\"nowrap\" container >\n                                                        <Grid xs={10} item>\n                                                            {card.cardTitle}\n                                                        </Grid>\n                                                        <Grid xs={2} item>\n                                                            <IconButton size=\"small\" aria-label=\"valid\" className={classes.restoreButton}  onClick={this.handleRestoreArchived(card,\"card\")}>\n                                                                <RestorePage fontSize=\"small\" />\n                                                            </IconButton>\n                                                        </Grid>\n                                                    </Grid>\n                                                </Paper>\n                                            )\n                                        ): <Paper className={classes.paper}> 0 card archived</Paper>}\n                                    </Grid>\n                                </ExpansionPanelDetails>\n                            </ExpansionPanel>\n                        </div>\n                    </Grid>\n                </div>\n            </Drawer>\n        );\n\n        const header =(\n            <Grid container spacing={16} className={classes.projectHeader}>\n\n                {/*===================  TITLE EDIT  ========================================= */}\n                <Typography variant=\"h5\" gutterBottom className={classes.projectTitle}>\n                    {this.state.editProjectTitle === false ? <div>{projectInfo? projectInfo.projectTitle : ''}\n                            {this.props.isAdmin === true ?<Edit className={classes.rightIcon} onClick={this.handleEditTitle.bind(this)} fontSize=\"small\" />:''}\n                        </div>:\n                        <div>\n                            <TextField\n                                id=\"standard-name\"\n                                label=\"Project title\"\n                                defaultValue={projectInfo.projectTitle}\n                                onChange={this.handleChange('newProjectTitle')}\n                                className={classes.textField}\n                                margin=\"normal\"\n                            />\n                            <Button color=\"primary\" className={classes.button}>\n                                <Done className={classes.validIcon} onClick={this.handleValidationEditTitle.bind(this)} />\n                            </Button>\n                        </div>}\n                </Typography>\n                <Grid item xs={12} className={ classes.maxWidth } >\n                    <Grid container className={ classes.maxWidth } spacing={24}>\n\n                        {/**===================  MEMBERS BUTTON  ========================================= */}\n                        <Grid item xs={6} sm={4} md={3} lg={2}  >\n                            <Button fullWidth color=\"primary\" className={classes.button} onClick={this.handleClickOpen}>\n                                <SupervisorAccount className={classes.leftIcon} />\n                                {this.props.members? this.props.members.length : 0} Members\n                            </Button>\n                        </Grid>\n                        <MemberDialog  isAdmin={this.props.isAdmin} open={this.state.openMemberDialog} onClose={this.handleClose.bind(this)} />\n\n                        {/**===================  VISIBILITY BUTTON  ========================================= */}\n                        <Grid item xs={6} sm={4} md={3} lg={2}>\n                            < Button fullWidth color=\"primary\" className={classes.button} onClick={this.handleClickOpenVisibility}>\n                                <RemoveRedEye className={classes.leftIcon} />\n                                Visibility\n                            </Button>\n                        </Grid>\n                        <VisibilityDialog isAdmin={this.props.isAdmin} open={this.state.openVisibilityDialog} onClose={this.handleClose.bind(this)}/>\n\n                        {/*===================  ACTIVITY BUTTON  ========================================= */}\n                        <Grid item xs={6} sm={4} md={3} lg={2}>\n                            < Button fullWidth color=\"primary\" className={classes.button} onClick={this.toggleDrawer('openActivity', true)}>\n                                <Description className={classes.leftIcon} />\n                                Activity\n                            </Button>\n                        </Grid>\n                        {renderActivity}\n\n                        {/*===================  FILTER BUTTON  ========================================= */}\n                        {/*< Button color=\"primary\" className={classes.button} onClick={this.toggleDrawer('openFilter', true)}>\n                            <FilterList className={classes.leftIcon} />\n                            Filter\n                        </Button>\n                        {renderFilter}*/}\n\n                        {/*===================  ARCHIVED BUTTON  ========================================= */}\n                        <Grid item xs={6} sm={4} md={3} lg={2}>\n                            < Button fullWidth color=\"primary\" className={classes.button} onClick={this.toggleDrawer('openArchived', true)}>\n                                <Archive className={classes.leftIcon} />\n                                Archived\n                            </Button>\n                        </Grid>\n                        {renderArchived}\n                    </Grid>\n                </Grid>\n            </Grid>\n        );\n\n        const dndArea = (\n            <DragDropContext onDragEnd={this.onDragEnd}>\n                <Lists key=\"1\"\n                       idProject={match.params.id}\n                       lists={this.state.lists}\n                       member={this.props.currentMember}\n                       createListCallback={this.createNewList}\n                       deleteList = {this.deleteList}\n                       updateListTitle = {this.updateListTitle}\n                       archiveList = {this.archiveList}\n                       createCard = {this.createCard}\n                       route = {match}\n                />\n            </DragDropContext>\n        )\n\n        return (\n            <div className={classes.projectBody}>\n                {header}\n                {this.props.isLoading ? (\n                    <Grid container justify='center' alignItems='center'>\n                        <LoaderPage/>\n                    </Grid>\n                ) : (\n                    <div className={classes.fullHeight} id='container1'>\n                        {dndArea}\n                    </div>\n                )}\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    lists: state.project.lists,\n    projectInfo : state.project.projectInfo,\n    members : state.project.members || [],\n    currentMember: state.signin.member,\n    isAdmin: state.project.isAdmin || false,\n    logged: state.signin.member,\n    hasProject : state.project.loggedHasProject,\n    activities: state.project.activities,\n    currentMemberId: state.signin.member.memberId,\n    isLoading: state.project.isLoading\n    \n})\n\nconst mapDispatchToProps ={\n    getAllListsWithCards: _action.projectAction.findAllLists,\n    createList: _action.projectAction.createList,\n    moveList: _action.projectAction.updateLists,\n    updateCard: _action.listAction.updateCard,\n    updateCardsPosition : _action.listAction.updateCardPosition,\n    getProjectInfo: _action.projectAction.getProjectInfo,\n    updateTitle: _action.projectAction.updateProjectTitle,\n    getAllMembers : _action.projectAction.findAllMembers,\n    getMemberStatus:  _action.projectAction.getMemberStatus,\n    getActivity: _action.projectAction.getActivity,\n    getMemberHasProject : _action.projectAction.getMemberHasProject,\n    onGetAllPermissions: _action.projectAction.getAllPermissions,\n    restoreList: _action.listAction.updateListStatus,\n    restoreCard : _action.listAction.restoreCard,\n    updatePositionLists: _action.listAction.updatePositionLists,\n    createCard: _action.listAction.createCard,\n    updateListTitle: _action.listAction.updateListTitle,\n    deleteList: _action.listAction.deleteList,\n    archiveList: _action.listAction.updateListStatus,\n    loadLists:  _action.projectAction.loadLists,\n    loadProjectInfo:  _action.projectAction.loadProjectInfo,\n    onUpdatePositionCard:  _action.cardAction.updatePositionCard\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(withStyles(styles)(Project))\n\n","export const styles = theme => ({\n    projectBody: {\n        fontFamily : `\"Roboto\", \"Helvetica\", \"Arial\", sans-serif`,\n        minHeight: '85%',\n    },\n    fullHeight: {\n        minHeight: '85'\n    },\n    projectHeader: {\n        marginTop: theme.spacing.unit * 1,\n        paddingLeft: theme.spacing.unit * 4,\n        paddingBottom: theme.spacing.unit * 3,\n        alignText: `left`,\n        width: '100%'\n\n    },\n    projectTitle: {\n        marginTop: theme.spacing.unit * 1,\n        marginLeft: theme.spacing.unit * 2,\n        alignText: `left`,\n        color:`#3f51b5`\n\n    },\n    button: {\n        margin: theme.spacing.unit,\n\n    },\n    leftIcon:{\n        marginRight: theme.spacing.unit,\n    },\n    rightIcon:{\n        marginLeft: theme.spacing.unit,\n        cusor:`pointer`\n    },\n    validIcon:{\n        marginLeft: theme.spacing.unit,\n        color:`#6bb53f`,\n        paddingTop: `25px`\n    },\n    cancelIcon:{\n        color:`red`,\n        paddingTop: `25px`\n    },\n    drawer:{\n        width:`250px`\n    },\n    drawerList: {\n        overflowY: 'scroll',\n        maxHeight: theme.spacing.unit * 60\n    },\n    paper: {\n        padding: theme.spacing.unit * 1,\n        textAlign: 'left',\n        color: 'black',\n        fontFamily : `\"Roboto\", \"Helvetica\", \"Arial\", sans-serif`,\n        boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n        border : `1px solid lightgrey`,\n        margin: '10px',\n        borderRadius:'10px'\n    },\n    restoreButton: {\n        color: 'green',\n        border : `1px solid green`,\n    },\n    expandPanel:{\n        width: '100%',\n    },\n    widthMax: {\n        maxWidth: '100%'\n    }\n\n})","export const style = theme => ({\n    marginBottom: {\n        marginBottom: theme.spacing.unit * 10\n    },\n    logo: {\n        marginTop: theme.spacing.unit * 5,\n        marginBottom: theme.spacing.unit * 10\n    },\n    rightIcon: {\n        marginLeft: theme.spacing.unit,\n    },\n    button: {\n        margin: theme.spacing.unit,\n    },\n});","import React from 'react'\nimport { connect } from 'react-redux'\nimport { style } from './Style'\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Grid from \"@material-ui/core/Grid/Grid\";\nimport Typography from \"@material-ui/core/Typography/Typography\";\nimport logo from \"../../../public/images/prello-logo-2.png\";\nimport DoneIcon from \"@material-ui/icons/Done\";\nimport Button from \"@material-ui/core/Button/Button\";\nimport _helper from \"../../../helpers\"\n\nclass accountConfirmation extends React.Component {\n\n    componentWillMount () {\n        if (!this.props.isAccountValidNow) {\n            _helper.History.push('/login')\n\n        }\n    }\n\n    goToLogin () {\n        _helper.History.push('/login')\n    }\n\n    render() {\n        const {classes} = this.props;\n        return (\n           <Grid container justify=\"center\">\n               <Grid justify='center' container className={classes.logo}>\n                   <Grid item>\n                       <img src={logo} width=\"100\" alt=\"prello logo\"/>\n                   </Grid>\n               </Grid>\n\n               <Typography variant=\"h4\" gutterBottom className={classes.marginBottom}>\n                   Your account is now ready for Prello.\n               </Typography>\n\n               <Grid container justify=\"center\">\n                   <Button\n                       variant=\"outlined\"\n                       color=\"primary\"\n                       onClick={this.goToLogin}\n                       className={classes.button}\n                   >\n                       Let's start\n                       <DoneIcon className={classes.rightIcon} />\n                   </Button>\n               </Grid>\n           </Grid>\n        )\n    }\n}\n\naccountConfirmation.propTypes = {\n    classes: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n    isAccountValidNow: state.signup.isAccountValidNow,\n    isLoading: state.signup.isLoading\n})\n\nconst mapDispatchToProps = {\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(style)(accountConfirmation));","import React from 'react'\nimport { connect } from 'react-redux'\nimport { style } from './Style'\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport LoaderPage from \"../../loaderPage/LoaderPage\";\nimport _action from \"../../../actions\"\n\n\nclass TokenVerification extends React.Component {\n\n    componentDidMount () {\n        let params = this.props.location.pathname.split('/')\n        let token = params[2]\n        this.props.onValidateAccountWithToken(token)\n        //Method that decrypt the token in server, update the given email else error\n        // push to account-validation if ok, push to home else\n    }\n\n    render() {\n        return (\n            <div>\n                <LoaderPage/>\n            </div>\n        )\n    }\n}\n\nTokenVerification.propTypes = {\n    classes: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n})\n\nconst mapDispatchToProps = {\n    onValidateAccountWithToken: _action.signupAction.validateAccountWithToken\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(style)(TokenVerification));","import React from 'react'\nimport { connect } from 'react-redux'\nimport { style } from './Style'\nimport { withStyles } from '@material-ui/core/styles';\nimport _helper from \"../../../helpers\"\nimport Grid from \"@material-ui/core/Grid/Grid\";\nimport logo from \"../../../public/images/prello-logo-2.png\";\nimport Button from \"@material-ui/core/Button/Button\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport TextField from \"@material-ui/core/TextField/TextField\";\nimport Typography from \"@material-ui/core/Typography/Typography\";\nimport _action from '../../../actions'\nimport Snackbar from \"../../ui/snackbar/Snackbar\";\n\n\nclass PasswordForgotten extends React.Component {\n    constructor (props) {\n        super(props)\n        this.submit = this.submit.bind(this)\n        this.goToLogin = this.goToLogin.bind(this)\n        this.state = {\n            memberEmail: '',\n            openSnackbar: this.props.isPasswordReset\n        }\n    }\n\n    goToLogin () {\n        this.props.onResetField()\n        _helper.History.push('/login')\n    }\n\n    submit () {\n        this.props.onSendNewPassword(this.state.memberEmail)\n        this.setState({\n            memberEmail: '',\n            openSnackbar: true\n        })\n    }\n\n    handleChange (event) {\n        var { name, value } = event.target;\n        this.setState({ [name]: value });\n    }\n\n    // Handle the snackbar state\n    handleSnackbarClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        this.setState({ openSnackbar: false });\n    };\n\n    render() {\n        const {classes} = this.props;\n        return (\n            <Grid container justify=\"center\">\n                <Grid justify='center' container className={classes.logo}>\n                    <Grid item>\n                        <img src={logo} width=\"70\" alt=\"logo of prello\"/>\n                    </Grid>\n                </Grid>\n\n                <Grid justify='center' container >\n                    <Typography variant=\"h6\" gutterBottom className={ classes.paddingText }>\n                        Please, provide the email linked to your account. You will receive a new password.\n                    </Typography>\n                </Grid>\n\n                <Grid item xs={8} sm={5} md={3}>\n                    <Grid container justify=\"center\">\n                        <TextField\n                            required\n                            id='memberEmail'\n                            name=\"memberEmail\"\n                            label=\"Email\"\n                            margin=\"normal\"\n                            value={this.state.memberEmail}\n                            fullWidth\n                            variant=\"outlined\"\n                            type=\"email\"\n                            onChange={this.handleChange.bind(this)}\n                        />\n                    </Grid>\n                    <Grid container justify=\"center\" className={classes.marginBottom}>\n                        <Button\n                            size=\"large\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={this.submit}\n                        >\n                            Send a new password\n                        </Button>\n                    </Grid>\n                    <Grid container justify=\"center\">\n\n                        <Button\n                            variant=\"outlined\"\n                            fullWidth\n                            color=\"secondary\"\n                            onClick={this.goToLogin}\n                        >\n                            Back\n                            <CloseIcon className={classes.rightIcon} />\n                        </Button>\n                    </Grid>\n                </Grid>\n                <Snackbar\n                    handleSnackbarClose={this.handleSnackbarClose}\n                    open={this.state.openSnackbar}\n                    message={this.props.resetPasswordMsg}\n                />\n            </Grid>\n        )\n    }\n}\n\nPasswordForgotten.propTypes = {\n}\n\nconst mapStateToProps = (state) => ({\n    resetPasswordMsg: state.signin.resetPasswordMsg,\n    isPasswordReset: state.signin.isPasswordReset\n})\n\nconst mapDispatchToProps = {\n    onSendNewPassword: _action.signinAction.sendNewPassword,\n    onResetField: _action.signinAction.resetField\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(style)(PasswordForgotten));","export const style = theme => ({\n    marginBottom: {\n        marginBottom: theme.spacing.unit * 10\n    },\n    logo: {\n        marginTop: theme.spacing.unit * 5,\n        marginBottom: theme.spacing.unit * 10\n    },\n    rightIcon: {\n        marginLeft: theme.spacing.unit,\n    },\n    paddingText: {\n        padding: 10\n    }\n});","/** REACT */\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport _helper from '../../helpers'\nimport _action from '../../actions'\n\n/** MATERIAL UI */\nimport { style } from './Style'\nimport Grid from \"@material-ui/core/Grid/Grid\";\nimport LoaderPage from \"../loaderPage/LoaderPage\";\nimport IconButton from \"@material-ui/core/IconButton/IconButton\";\nimport StarIcon from '@material-ui/icons/Star'\nimport AddIcon from '@material-ui/icons/Add'\nimport StarBorderIcon from '@material-ui/icons/StarBorder'\nimport Typography from \"@material-ui/core/Typography/Typography\";\nimport Divider from \"@material-ui/core/Divider/Divider\";\nimport Button from \"@material-ui/core/Button/Button\";\nimport Dialog from \"@material-ui/core/Dialog/Dialog\";\nimport TextField from \"@material-ui/core/TextField/TextField\";\nimport Switch from \"@material-ui/core/Switch/Switch\";\nimport Paper from \"@material-ui/core/Paper/Paper\";\nimport FolderOpenIcon from \"@material-ui/icons/FolderOpen\";\n\n/** ICONS */\nclass DashboardFix extends React.Component {\n\n    constructor (props) {\n        super(props)\n        this.createProject = this.createProject.bind(this)\n        this.goToProject = this.goToProject.bind(this)\n        this.handleProjectFavorite = this.handleProjectFavorite.bind(this)\n        this.state = {\n            open: false,\n            projectTitle: '',\n            isPublic: false\n        };\n    }\n\n    componentWillMount () {\n        const { onFindAllProjectsMember, memberId } = this.props;\n        onFindAllProjectsMember(memberId)\n    }\n\n    /** Handle Dialog */\n    handleClickOpen = () => {\n        this.setState({ open: true });\n    };\n\n    handleClose = () => {\n        this.setState({ open: false })\n    };\n\n    handleChange = name => event => {\n        this.setState({\n            [name]: event.target.value,\n        });\n    };\n\n    handleChangeCheckbox = name => event => {\n        this.setState({ [name]: event.target.checked });\n    };\n\n    createProject () {\n        const { onCreateProject, memberId, member } = this.props;\n        let projectVisibility = 1\n        if (this.state.isPublic) projectVisibility = 0\n        let projectTitle = this.state.projectTitle\n\n        onCreateProject(memberId, projectTitle, projectVisibility, member)\n    }\n\n    handleProjectFavorite (event) {\n        const { onSetProjectAsFavorite, memberId, projects } = this.props;\n        let index = event.currentTarget.id\n        let project = projects[index].project\n        let projectIsFavorite = !project.projectIsFavorite\n        let projectId = project.projectId\n        onSetProjectAsFavorite(memberId, projectId, projectIsFavorite, index)\n    }\n\n    goToProject (event) {\n        let route = '/project/' + event.currentTarget.id\n        _helper.History.push(route)\n    }\n\n    render() {\n        const { classes, isLoading, projects } = this.props;\n\n        /** Dialog */\n        const createProjectDialog = (\n            <Dialog\n                onClose={this.handleClose}\n                aria-labelledby=\"simple-dialog-title\"\n                open={this.state.open}\n            >\n                <Grid container justify='center' className={ classes.dialogCreation }>\n                    <Typography variant='overline'>\n                        Create Project\n                    </Typography>\n                    <Grid item xs={12}>\n                        <Divider/>\n                    </Grid>\n                    <Grid item xs={12} className={ classes.textfield }>\n                        <TextField\n                            id=\"projectTitle\"\n                            label=\"Title\"\n                            fullWidth\n                            className={classes.textField}\n                            value={this.state.projectTitle}\n                            onChange={this.handleChange('projectTitle')}\n                            margin=\"normal\"\n                        />\n                    </Grid>\n                    <Grid container justify='space-around' >\n                        <Typography variant='overline' >\n                            Private\n                        </Typography>\n                        <Switch\n                            checked={this.state.isPublic}\n                            onChange={this.handleChangeCheckbox('isPublic')}\n                            value=\"isPublic\"\n                            color=\"default\"\n                        />\n                        <Typography variant='overline'>\n                            Public\n                        </Typography>\n                    </Grid>\n                    <Grid container justify='center' >\n                        <Button\n                            color=\"primary\"\n                            className={classes.button}\n                            onClick={this.createProject}\n                            disabled={this.state.projectTitle.trim() === ''}\n                        >\n                            Create\n                        </Button>\n                    </Grid>\n                </Grid>\n            </Dialog>\n        )\n\n        /** Personal project */\n        const projectList = (\n            <div className={ classes.maxWidth2 }>\n                <div id='projectScroll' className={classes.projectArea}>\n                    {projects.map((project, index) =>\n                        !project.project.projectIsFavorite ? (\n                            <Paper\n                                key={project.project.projectId}\n                                className={ classes.project }\n                            >\n                                <Grid container alignItems='center' style={{height: '100%', width: '272px'}}>\n                                    <Grid container justify='space-between' alignItems='center'>\n                                        <Typography variant='overline' className={ classes.whiteText }  >\n                                            {project.project.Project.projectTitle}\n                                        </Typography>\n                                        <Button\n                                            color=\"primary\"\n                                            variant=\"contained\"\n                                            id={project.project.projectId}\n                                            className={classes.button + ' ' + classes.personalBtn}\n                                            onClick={this.goToProject}\n                                        >\n                                            <FolderOpenIcon /> Open\n                                        </Button>\n                                    </Grid>\n                                    <Grid container justify='space-between' alignItems='center'>\n                                        <Typography variant='body2' className={ classes.whiteText } >\n                                            {'Contributors : ' + project.contributors}\n                                        </Typography>\n                                        <IconButton\n                                            id={index}\n                                            onClick={this.handleProjectFavorite}\n                                            className={classes.addFavoriteButtonIcon}\n                                        >\n                                            <StarBorderIcon />\n                                        </IconButton>\n                                    </Grid>\n                                </Grid>\n                            </Paper>\n                        ) : null\n                    )}\n                </div>\n            </div>\n        )\n\n        /** Favorite project */\n        const favoriteList = (\n            <div className={ classes.maxWidth2 }>\n                <div id='projectScroll' className={classes.projectArea}>\n                    {projects.map((project, index) =>\n                        project.project.projectIsFavorite ? (\n                            <Paper\n                                key={project.project.projectId}\n                                className={ classes.favorite }\n                            >\n                                <Grid container alignItems='center' style={{height: '100%', width: '272px'}}>\n                                    <Grid container justify='space-between' alignItems='center'>\n                                        <Typography variant='overline' className={ classes.whiteText }  >\n                                            {project.project.Project.projectTitle}\n                                        </Typography>\n                                        <Button\n                                            variant=\"contained\"\n                                            id={project.project.projectId}\n                                            className={classes.button + ' ' + classes.favoriteBtn}\n                                            onClick={this.goToProject}\n                                        >\n                                            <FolderOpenIcon /> Open\n                                        </Button>\n                                    </Grid>\n                                    <Grid container justify='space-between' alignItems='center'>\n                                        <Typography variant='body2' className={ classes.whiteText } >\n                                            {'Contributors : ' + project.contributors}\n                                        </Typography>\n                                        <IconButton\n                                            id={index}\n                                            onClick={this.handleProjectFavorite}\n                                            className={classes.addFavoriteButtonIcon}\n                                        >\n                                            <StarIcon />\n                                        </IconButton>\n                                    </Grid>\n                                </Grid>\n                            </Paper>\n                        ) : null\n                    )}\n                </div>\n            </div>\n        )\n\n        /** Button creation */\n        const creationButton = (\n            <Button\n                color=\"primary\"\n                className={classes.button}\n                onClick={this.handleClickOpen}\n            >\n                <AddIcon /> New\n            </Button>\n        )\n\n        return (\n            <Grid container justify=\"center\">\n                {isLoading ? (\n                        <LoaderPage/>\n                    ) :\n                    <Grid container className={ classes.mainContainer + ' ' + classes.maxWidth }>\n                        {createProjectDialog}\n                        <Grid container>\n                            <Typography variant='overline'>\n                                FAVORITE PROJECTS\n                            </Typography>\n                        </Grid>\n                        <Grid container>\n                            <Grid item xs={12}>\n                                <Divider/>\n                            </Grid>\n                        </Grid>\n                        {favoriteList}\n                        <Grid container justify='space-between' className={ classes.marginTop }>\n                            <Typography variant='overline'>\n                                PERSONAL PROJECTS\n                            </Typography>\n                            {creationButton}\n                        </Grid>\n                        <Grid container>\n                            <Grid item xs={12}>\n                                <Divider/>\n                            </Grid>\n                        </Grid>\n                        {projectList}\n                    </Grid>\n                }\n            </Grid>\n        )\n    }\n}\n\nDashboardFix.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    isLoading: state.dashboardFix.isLoading,\n    projects: state.dashboardFix.projects,\n    memberId: state.signin.member.memberId,\n    member: state.signin.member\n})\n\nconst mapDispatchToProps = {\n    onFindAllProjectsMember: _action.dashboardFixAction.findAllProjectsMember,\n    onCreateProject: _action.dashboardFixAction.createProject,\n    onSetProjectAsFavorite: _action.dashboardFixAction.setAsProjectFavorite\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(withStyles(style)(DashboardFix));","import Typography from \"@material-ui/core/Typography/Typography\";\nimport React from \"react\";\n\nexport const style = theme => ({\n    root: {\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        overflow: 'hidden',\n        backgroundColor: theme.palette.background.paper,\n    },\n    projectArea: {\n        whiteSpace: `nowrap`,\n        overflowY: `auto`,\n        flexWrap: 'inherit',\n        display: 'flex',\n    },\n    project: {\n        width: '272px',\n        height: '120px',\n        margin: '7px',\n        //marginRight: 0,\n        backgroundColor:`#2c387e`,\n        color: 'white',\n        padding: theme.spacing.unit,\n    },\n    favorite: {\n        width: '272px',\n        height: '120px',\n        margin: '7px',\n        //marginRight: 0,\n        backgroundColor:`#f44336`,\n        color: 'white',\n        padding: theme.spacing.unit,\n    },\n    whiteText: {\n        color: 'white',\n    },\n    favoriteButtonIcon: {\n        color: '#ffeb3b',\n        '&:hover': {\n            color: '#ffc107',\n        }\n    },\n    addFavoriteButtonIcon: {\n        color: '#ffffe6',\n        '&:hover': {\n            color: '#ffc107',\n        }\n    },\n    personalBtn: {\n        backgroundColor: '#3f51b5'\n    },\n    favoriteBtn: {\n        backgroundColor: '#b41f18',\n        color: 'white',\n        '&:hover': {\n            backgroundColor: '#f6685e',\n        }\n    },\n    projectContainer: {\n        paddingLeft: theme.spacing.unit,\n        paddingRight: theme.spacing.unit,\n    },\n    mainContainer: {\n        marginLeft: 30,\n        marginRight: 30\n    },\n    gridList: {\n        flexWrap: 'nowrap',\n        // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n        transform: 'translateZ(0)',\n    },\n    title: {\n        color: theme.palette.primary.light,\n    },\n    titleBar: {\n        background:\n            'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\n    },\n    projectContent: {\n        backgroundColor: 'red',\n        heigth: '100%',\n        width: '100%'\n    },\n    marginTop: {\n        marginTop: 30\n    },\n    dialogCreation: {\n        //margin: '10px'\n    },\n    textfield: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        marginBottom: theme.spacing.unit,\n    },\n    maxWidth: {\n        maxWidth: '98%',\n        marginRight: 'auto',\n        marginLeft: 'auto',\n        paddingRight: 'auto',\n        paddingLeft: 'auto'\n    },\n    maxWidth2: {\n        maxWidth: '98%',\n    }\n\n});\n\n\n","/** REACT */\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport _helper from '../../helpers'\n\n/** MATERIAL UI */\nimport { style } from './Style'\nimport Grid from \"@material-ui/core/Grid/Grid\";\nimport logo from \"../../public/images/prello-logo-2.png\";\nimport downloadPicture from \"../../public/images/download-picture.png\";\nimport Typography from \"@material-ui/core/Typography/Typography\";\nimport Button from \"@material-ui/core/Button/Button\";\nimport GetAppIcon from '@material-ui/icons/GetApp'\nimport CloseIcon from \"@material-ui/icons/Close\";\n\n/** ICONS */\nclass Download extends React.Component {\n\n    leavePage () {\n        _helper.History.push('/home')\n    }\n\n    goToLink (event) {\n        const type = event.currentTarget.id\n\n        const windowsLink = 'https://drive.google.com/open?id=1T_1kY6ZImpbK8B5d9Mi88dvk2P2ucRLj'\n        const linuxLink = 'https://drive.google.com/open?id=1r6_hcyRj3lUi73n_7h-SQdgKsrp6XBPL'\n        const macLink = 'https://drive.google.com/open?id=10kXDiLWnG8eUSSLbefu3Z6wSTS2fugUX'\n\n        if (type === 'linux') window.open(linuxLink)\n        else if (type === 'mac') window.open(macLink)\n        else if (type === 'windows') window.open(windowsLink)\n    }\n\n    render() {\n        const { classes } = this.props;\n\n\n        return (\n            <Grid container justify=\"center\">\n                {!this.props.isLogged ? (\n                    <Grid justify='center' container className={classes.logo}>\n                        <Grid item>\n                            <img src={logo} width=\"100\" alt=\"prello logo\"/>\n                        </Grid>\n                    </Grid>\n                ) : null}\n\n                <Typography variant=\"h4\" gutterBottom className={classes.marginBottom}>\n                    Download Prello for Desktop\n                </Typography>\n\n                <Grid container justify=\"center\" alignItems=\"center\">\n                    <Grid xs={10} md={5} item>\n                        <Grid container justify=\"center\" alignItems=\"center\">\n                            <Typography variant=\"overline\">\n                                Available for linux and Mac\n                            </Typography>\n                        </Grid>\n                        <Grid justify='center' container alignItems=\"center\">\n                            <Grid item xs={8}>\n                                <Grid justify='center' container alignItems=\"center\">\n                                    <Typography variant=\"caption\" className={ classes.marginBottomXs }>\n                                        By downloading Prello, you agree to the terms of use and the privacy policy.\n                                    </Typography>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid justify='center' container alignItems=\"center\">\n                            <Grid item xs={10} sm={8} md={4} className={ classes.marginBottomXs }>\n                                <Button\n                                    id='linux'\n                                    onClick={this.goToLink}\n                                    download\n                                    variant=\"outlined\"\n                                    color=\"primary\"\n                                    fullWidth\n                                    className={classes.button}\n                                >\n                                    Get on LINUX\n                                    <GetAppIcon className={classes.rightIcon} />\n                                </Button>\n                            </Grid>\n                        </Grid>\n                        <Grid justify='center' container alignItems=\"center\">\n                            <Grid item xs={10} sm={8} md={4} className={ classes.marginBottomXs }>\n                                <Button\n                                    id='mac'\n                                    onClick={this.goToLink}\n                                    download\n                                    variant=\"outlined\"\n                                    color=\"primary\"\n                                    fullWidth\n                                    className={classes.button}\n                                >\n                                    Get on MAC\n                                    <GetAppIcon className={classes.rightIcon} />\n                                </Button>\n                            </Grid>\n                        </Grid>\n                        <Grid justify='center' container alignItems=\"center\">\n                            <Grid item xs={10} sm={8} md={4}>\n                                <Button\n                                    id='windows'\n                                    onClick={this.goToLink}\n                                    download\n                                    variant=\"outlined\"\n                                    color=\"primary\"\n                                    fullWidth\n                                    className={classes.button}\n                                >\n                                    Get on WINDOWS\n                                    <GetAppIcon className={classes.rightIcon} />\n                                </Button>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid xs={10} md={5} item>\n                        <Grid container justify=\"center\" alignItems=\"center\">\n                            <img src={downloadPicture} alt='download' className={classes.downloadPicture}/>\n                        </Grid>\n                    </Grid>\n                    {!this.props.isLogged ? (\n                        <Grid className={ classes.marginTop } container justify='center'>\n                            <Grid xs={2} container>\n                                <Button\n                                    variant=\"outlined\"\n                                    color=\"secondary\"\n                                    fullWidth\n                                    onClick={this.leavePage}\n                                    className={classes.button}\n                                >\n                                    Back\n                                    <CloseIcon className={classes.rightIcon} />\n                                </Button>\n                            </Grid>\n                        </Grid>\n                    ) : null}\n                </Grid>\n            </Grid>\n        )\n    }\n}\n\nDownload.propTypes = {\n    classes: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n    isLogged: state.signin.isLogged\n})\n\nconst mapDispatchToProps = {\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(withStyles(style)(Download));","export const style = theme => ({\n    marginBottom: {\n        marginBottom: theme.spacing.unit * 10\n    },\n    marginTop: {\n        marginTop: theme.spacing.unit * 5\n    },\n    logo: {\n        marginTop: theme.spacing.unit * 5,\n        marginBottom: theme.spacing.unit * 10\n    },\n    rightIcon: {\n        marginLeft: theme.spacing.unit,\n    },\n    marginBottomXs: {\n        marginBottom: theme.spacing.unit * 2\n    },\n    downloadPicture: {\n        height: 200\n    }\n});\n\n\n","import React, { Component } from 'react';\nimport WaveIt from './waveIt/WaveIt'\nimport {Router, Route, Switch, Redirect} from 'react-router-dom'\nimport Signin from \"./signin/Signin\";\nimport Signup from \"./signup/Signup\";\nimport Invitation from \"./invitation/Invitation\";\nimport Profile from './profile/Profile'\nimport Navbar from \"./layout/navbar/Navbar\"\nimport TransitionGithub from './transitionGithub/TransitionGithub'\nimport _helper from '../helpers'\nimport connect from \"react-redux/es/connect/connect\";\nimport _action from \"../actions\";\nimport LoaderPage from \"./loaderPage/LoaderPage\";\nimport Project from './project/Project'\nimport { style } from './Style'\nimport {withStyles} from \"@material-ui/core\";\nimport AccountConfirmation from \"./signup/accountConfirmation/AccountConfirmation\"\nimport TokenVerification from \"./signup/accountConfirmation/TokenVerification\"\nimport PasswordForgotten from \"./signin/passwordForgotten/PasswordForgotten\"\nimport SearchResults from \"./layout/navbar/searchResults/SearchResults\"\nimport DashboardFix from './dashboardFix/DashboardFix'\nimport Download from \"./download/Download\"\n\nclass App extends Component {\n    constructor (props) {\n        super(props)\n        this.routesAuthorization = this.routesAuthorization.bind(this);\n        this.LoginContainer = this.LoginContainer.bind(this)\n        this.LoaderPageContainer = this.LoaderPageContainer.bind(this)\n        this.DefaultContainer = this.DefaultContainer.bind(this)\n\n    }\n\n    componentWillMount () {\n        this.props.onIsMemberLogged()\n    }\n\n    /* If the user is logged we choose the default component with all components of the application\n     * Else we display only the login component\n     */\n    routesAuthorization () {\n        if (this.props.isLoading) {\n            return this.LoaderPageContainer\n        }\n        if (this.props.isLogged) {\n            return this.DefaultContainer\n        } else {\n            return this.LoginContainer\n        }\n    }\n\n    LoginContainer = () => {\n        const { classes } = this.props;\n\n        return(\n            <div className={classes.layout}>\n                <Switch>\n                    <Route exact path=\"/login\" component={Signin} />\n                    <Route exact path=\"/login/:memberEmail/:token\" component={Signin} />\n                    <Route exact path=\"/signup\" component={Signup} />\n                    <Route path=\"/invitation/:token\" component={Invitation} />\n                    <Route exact path=\"/password-forgotten\" component={PasswordForgotten} />\n                    <Route exact path=\"/account-confirmation\" component={AccountConfirmation} />\n                    <Route path=\"/account-confirmation/:token\" component={TokenVerification} />\n                    <Route exact path=\"/download\" component={Download} />\n                    <Route path=\"/github_verification/:token\" component={TransitionGithub} />\n                    <Route path='*' render={() => <Redirect to=\"/login\" />}/>\n                </Switch>\n            </div>\n        )\n    }\n\n    LoaderPageContainer = () => {\n        const { classes } = this.props;\n\n        return(\n            <div className={classes.layout}>\n                <Route component={LoaderPage} />\n            </div>\n        )\n    }\n\n    DefaultContainer = () => {\n        const { classes } = this.props;\n        return(\n            <div className={classes.layout}>\n                <Navbar/>\n                <Switch>\n                    <Route path=\"/home\" component={DashboardFix}/>\n                    <Route path=\"/profile\" component={Profile}/>\n                    <Route path=\"/results\" component={SearchResults}/>\n                    <Route exact path=\"/download\" component={Download} />\n                    <Route path=\"/invitation/:token\" component={Invitation} />\n                    <Route path=\"/project/:id/:listid/:cardid\" component={Project}/>\n                    <Route path=\"/project/:id\" component={Project}/>\n                    <Route exact path=\"/schedules\" component={WaveIt}/>\n                    <Route path='*' render={() => <Redirect to=\"/home\" />}/>\n                </Switch>\n            </div>\n        )\n    }\n    // <Route path=\"/\" render={() => <Redirect to=\"/home\" />} />\n\n    render() {\n        return (\n            <Router history={_helper.History}>\n                <Switch>\n                    <Route component={this.routesAuthorization()}/>\n                </Switch>\n            </Router>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    isLogged: state.signin.isLogged,\n    isLoading: state.signin.isLoading\n})\n\nconst mapDispatchToProps = {\n    onIsMemberLogged: _action.signinAction.isMemberLogged\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(style)(App));\n","export const style = theme => ({\n    layout: {\n        height: '100%',\n        margin: '0'\n    },\n    paddingSide: {\n        paddingLeft: 10,\n        paddingRight: 10\n    }\n});","import React from 'react'\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { Store } from './helpers';\nimport App from './components/App';\n\nrender(\n    <Provider store={Store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n)"],"sourceRoot":""}