{"version":3,"sources":["public/images/bg-singin.png","public/images/download-picture.png","public/images/prello-logo-2.png","helpers/Request.helper.js","helpers/History.helper.js","helpers/Method.helper.js","services/Api.js","services/Action.service.js","services/Card.service.js","services/List.service.js","services/Member.service.js","services/Permission.service.js","services/Project.service.js","services/Team.service.js","services/Task.service.js","services/Label.service.js","services/index.js","actions/Dashboard.action.js","reducers/Dashboard.reducer.js","actions/Signin.action.js","actions/Signup.action.js","actions/Navbar.action.js","actions/Notification.action.js","actions/Profile.action.js","actions/Project.action.js","actions/List.action.js","actions/Card.action.js","actions/Searchbar.action.js","actions/Invitation.action.js","actions/Team.action.js","actions/DashboardFix.action.js","actions/index.js","actions/Member.action.js","reducers/Signin.reducer.js","reducers/Signup.reducer.js","reducers/Navbar.reducer.js","reducers/Profile.reducer.js","helpers/SocketIo.helper.js","reducers/Project.reducer.js","reducers/Card.reducer.js","reducers/Searchbar.reducer.js","reducers/Invitation.reducer.js","reducers/DashboardFix.reducer.js","reducers/index.js","helpers/Store.helper.js","helpers/index.js","components/dashboard/projectPanel/projectList/ProjectList.js","components/dashboard/projectPanel/projectList/Style.js","components/ui/loader/Loader.js","components/dashboard/Dashboard.js","components/dashboard/Style.js","components/signin/Signin.js","components/signin/Style.js","components/loaderPage/LoaderPage.js","components/loaderPage/Style.js","components/signup/Signup.js","components/signup/Style.js","components/invitation/Invitation.js","components/invitation/Style.js","components/ui/menu/Menu.js","components/ui/palette/Palette.js","components/ui/snackbar/Snackbar.js","components/profile/password/Password.js","components/profile/password/Style.js","components/ui/loader/MiniLoader.js","components/profile/overview/Overview.js","components/profile/overview/Style.js","components/profile/Profile.js","components/profile/Style.js","components/ui/notification/Notification.js","components/ui/notification/NotificationList.js","components/layout/navbar/searchResults/SearchResults.js","components/layout/navbar/searchResults/Style.js","components/layout/navbar/Navbar.js","components/layout/navbar/Style.js","components/transitionGithub/TransitionGithub.js","components/card/Style.js","components/card/checklist/StyleChecklist.js","components/card/checklist/ChecklistDialog.js","components/card/label/Style.js","components/card/label/LabelDialog.js","components/card/confirmation/ConfirmationDialog.js","components/card/membersOnCard/MembersOnCard.js","components/card/membersOnCard/Style.js","components/card/Card.js","components/project/card/Card.js","components/project/card/Style.js","components/ui/dialog/Style.js","components/ui/dialog/SimpleDialog.js","components/project/list/Style.js","components/project/list/List.js","components/project/list/Lists.js","components/ui/activity/ActivityList.js","components/ui/dialog/MemberDialog.js","components/ui/dialog/VisibilityDialog.js","components/project/Project.js","components/project/Style.js","components/signup/accountConfirmation/Style.js","components/signup/accountConfirmation/AccountConfirmation.js","components/signup/accountConfirmation/TokenVerification.js","components/signin/passwordForgotten/PasswordForgotten.js","components/signin/passwordForgotten/Style.js","components/dashboardFix/DashboardFix.js","components/dashboardFix/Style.js","components/download/Download.js","components/download/Style.js","components/App.js","components/Style.js","index.js"],"names":["module","exports","__webpack_require__","p","Request","urlFromObject","object","keys","Object","values","url","i","length","History","createBrowserHistory","method","copy","o","JSON","parse","stringify","isTypeEmail","str","strSplit","split","strAfterA","strEnd","err","computeListOrder","lists","listsOrder","index","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","element","listId","value","listFather","push","return","computeCardOrder","cardsOrder","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","l","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","CardListFks","cardId","cardFather","BASE_URL","apiMethods","SOCKET_URL","headers","Authorization","localStorage","getItem","get","token","arguments","axios","defaults","common","post","payload","put","delete","Action","getAll","where","helper","Api","then","res","data","getNonArchived","updateMultiple","array","body","memberHasAction","createActivityForAllMembers","projectId","Card","create","createLinkLabel","deleteLinkLabel","query","update","searchbarCards","findAllMembers","addMember","removeMember","updateCardOrder","cards","List","idProject","searchbarLists","updateListOrder","Member","createIfNotExist","memberEmail","signIn","signInWithGithub","signUp","memberPseudo","updateMemberInvitation","validateAccount","memberToken","isLogged","member","catch","removeItem","memberId","updatePassword","attributes","memberPassword","newMemberPassword","sendNewPassword","decrpytInvitation","getInvitation","updateInvitation","deleteInvitation","updateProfilePicture","createMemberProjectPermission","permissionId","mhppState","r","getAllOnProject","updateOnProject","deleteForMemberOnProject","Project","getAllProjectsForMember","getAllWithCards","getAllProjectsMember","member_id","e","error","getAllMembers","getAllActions","getOne","createProject","projectTitle","projectVisibility","projectStatus","projectDateTarget","createMemberHasProject","memberhasprojectStatus","projectIsFavorite","updateMemberHasProject","params","concat","searchbarProjects","getMemberHasProject","getLabels","sendInvitation","createAndSendInvitation","getMemberStatus","createProjectForMember","createProjectFix","updateFix","getActivity","Team","teamId","Task","Label","service","Permission","labels","LOAD_DASHBOARD","SELECT_PROJECT","FIND_ONE_PROJECT","RECEIVE_PROJECT","SELECT_ALL_PROJECT","SELECT_ALL_PROJECT_MEMBER","SELECT_ALL_TEAM_MEMBER","CREATE_NEW_PROJECT","UPDATE_MEMBER_HAS_PROJECT","DASHBOARD_ACTION_ERROR","DASHBOARD_HIDE_ERROR_MSG","findOneProject","type","receivedProject","json","project","dashboardAction","fetchProject","dispatch","_service","console","log","projects","errorMsg","permission","actionType","actionTitle","actionDescription","actionDateCreation","moment","mhaStatus","_helper","dataObject","id","hideErrorMessage","getAllTeams","teams","initialState","LOGIN","ERROR","CREATE_USER","IS_LOGGED","IS_NOT_LOGGED","NEW_PASSWORD_SENT","NEW_PASSWORD_FAILED","RESET_FIELD","signSuccess","signError","signinAction","signin","redirection","setItem","signinWithGithub","window","location","assign","confirmSigninGithub","isMemberLoggedGithub","isMemberLogged","resetField","LOAD_SIGNUP","LOAD_INVITATION","SIGN_UP","SIGN_UP_ERROR","LOADING","VALIDATE_ACCOUNT_TOKEN","VALIDATE_ACCOUNT_TOKEN_ERROR","INVITATION_ACCEPTED","INVITATION_ACCEPTED_ERROR","msg","signupAction","signup","isDirectlyValidate","checking","fields","isEmpty","_arr","_i","field","isFieldsOk","memberCheckPassword","checkSignupFields","finalBody","memberStatus","response","validateAccountWithToken","LOG_OFF","GET_ALL_NOTIFICATIONS","GET_ALL_NOTIFICATIONS_ERROR","UPDATE_NOTIFICATION","UPDATE_NOTIFICATIONS__DB_ERROR","UPDATE_NOTIFICATIONS_DB","navbarAction","logOff","getAllNonArchivedNotifications","handleCheckboxNotification","notifications","newNotification","isRead","nbUnread","notificationsUnread","updateNotifications","CHANGE_NOTIFICATION_READ_STATE","FILTER_ONLY_UNREAD","DISABLED_FILTER","notificationAction","showOnlyUnreadAction","notificationsUnarchived","onlyUnread","cloneDeep","newNotifications","item","actionStatus","LOAD_PROFILE_PICTURE","UPDATE_MEMBER","UPDATE_MEMBER_ERROR","UPDATE_PASSWORD","UPDATE_PASSWORD_ERROR","profileAction","updateMember","updateMemberPassword","passwords","updatePasswordMsg","updateMemberPicture","LOAD_PROJECT","GET_ALL_LISTS","CREATE_LIST","CREATE_LIST_ERROR","UPDATE_LIST","UPDATE_LIST_ERROR","GET_PROJECT_INFO","GET_PROJECT_INFO_ERROR","GET_ALL_MEMBERS","GET_ALL_MEMBERS_ERROR","INVITATION_SUCCESS","INVITATION_ERROR","GET_MEMBER_STATUS","GET_MEMBER_STATUS_ERROR","REMOVE_MEMBER_FROM_PROJECT","REMOVE_MEMBER_FROM_PROJECT_ERROR","SET_MEMBER_ADMIN","GET_ACTIVITY","GET_ACTIVITY_ERROR","MEMBER_HAS_PROJECT","MEMBER_HAS_PROJECT_ERROR","LOAD","GET_ALL_PERMISSIONS","GET_ALL_PERMISSIONS_ERROR","UPDATE_PERMISSION_MEMBER","UPDATE_PERMISSION_MEMBER_ERROR","UPDATE_PROJECT_INFO","projectAction","findAllLists","createList","listTitle","listStatus","updateLists","fatherListId","getProjectInfo","updateProjectTitle","newProjectTitle","updateProjectVisibility","visibilityValue","sendInvitationProject","newMember","memberLastname","memberFirstname","removeMemberFromProject","isDeleted","GET_ALL_LABELS","updatePermissionMember","storeMembers","getAllPermissions","loadLists","loadProjectInfo","projectInfo","GET_ALL_CARDS","GET_ALL_CARDS_ERROR","CREATE_CARD","UPDATE_LIST_TITLE","UPDATE_LIST_TITLE_ERROR","DELETE_LIST","DELETE_LIST_ERROR","UPDATE_CARD","UPDATE_CARD_ERROR","UPDATE_LIST_STATUS","UPDATE_LIST_STATUS_ERROR","UPDATE_POSITION_LISTS","RESTORE_CARD","RESTORE_CARD_ERROR","UPDATE_DATE_CARD","UPDATE_DATE_CARD_ERROR","UPDATE_DESCRIPTION_CARD","UPDATE_DESCRIPTION_CARD_ERROR","UPDATE_TITLE_CARD","UPDATE_TITLE_CARD_ERROR","CREATE_CARD_ERROR","listAction","createCard","cardTitle","cardStatus","cardDescription","card","objectSpread","findAllCards","updateCard","newLists","updateListTitle","newListTitle","setDispacth","deleteList","updateListStatus","status","updatePositionLists","newOrderedArray","restoreCard","updateDueDateCard","dueDate","cardDateTarget","updateDescription","description","updateCardTitle","title","GET_CARD","GET_CARD_ERROR","UPDATE_POSITION_CARD","ERROR_UPDATE_CARD","DELETE_CARD","DELETE_CARD_ERROR","ADD_MEMBER_ON_CARD","ADD_MEMBER_ON_CARD_ERROR","DELETE_MEMBER","DELETE_MEMBER_ERROR","UPDATE_TASK","UPDATE_TASK_ERROR","DELETE_TASK","DELETE_TASK_ERROR","CREATE_TASK","CREATE_TASK_ERROR","LOAD_CARD","GET_ALL_LABEL","GET_ALL_LABEL_ERROR","CREATE_LINK_LABEL","CREATE_LINK_LABEL_ERROR","DELETE_LINK_LABEL","DELETE_LINK_LABEL_ERROR","ARCHIVE_CARD","FIND_ALL_MEMBERS_ON_CARD","FIND_ALL_MEMBERS_ON_CARD_ERROR","FIND_ALL_COMMENTS_ON_CARD","ADD_COMMENTS_ON_CARD","cardAction","getCard","updatecard","listIndex","cardIndex","updateTask","taskId","isUpdated","deleteCard","deleteTask","createTask","newTask","TaskCardFks","membersOnCard","membersOffCard","mhc","elementIndex","getMembersOnCard","members","findAllComments","Comments","getAllComments","comments","addComments","text","comment","updatePositionCard","SEARCH_PROJECTS","SEARCH_PROJECTS_ERROR","SEARCH_CARDS","SEARCH_CARDS_ERROR","SEARCH_LISTS","SEARCH_LISTS_ERROR","SEARCH_RESET","searchbarAction","searchProjects","searchLists","searchCards","resetSearchArrays","MEMBER_EXIST","MEMBER_NOT_EXIST","DECRYPT_ERROR","INVITATION_REPLY","INVITATION_REPLY_ERROR","invitationAction","isMemberExist","isExist","memberProject","isAccountValid","informations","isAccountExist","replyToInvitation","accept","LOAD_ALL_PROJECTS_FOR_MEMBER","LOAD_ALL_PROJECTS_FOR_MEMBER_ERROR","CREATE_PROJECT","CREATE_PROJECT_ERROR","SET_PROJECT_FAVORITE","SET_PROJECT_FAVORITE_ERROR","_action","memberAction","searchMember","search_word","teamAction","CREATE_TEAM","CREATE_TEAM_ERROR","createTeam","dashboardFixAction","findAllProjectsMember","mhp","contributors","setAsProjectFavorite","labelsNavbar","labelsProfile","isLoading","isPasswordReset","isAccountValidNow","msgError","isInvitation","notificationLabels","isPasswordUpdated","isPasswordError","socket","io","projectLabels","listLabels","cardLabels","activities","permissions","maj","cardDateEnd","cardChild","projectsFound","listsFound","cardsFound","labelsSignup","rootReducer","combineReducers","dashboard","state","action","loading","newProjects","Helper","Method","resetPasswordMsg","navbar","profile","newList","toConsumableArray","emit","listWithCard","Array","from","findList","find","list","findListIndex","findIndex","notarchivedCardsCreate","filter","archivedCardsCreate","newCreatedCard","ActionCardFks","AttachmentCardFks","HaslabelCardFks","MemberhascardCardFks","splice","cardIndexx","listsCards","maj2","listIndex1","cardIndex1","listsCards1","maj3","maj1","updateList","updateListIndex","allList","updateListStatusIndex","newListStatus","deletedListIndex","newlists","info","SEND_INVITATION","isAdmin","loggedHasProject","updatedLists","archivedCards","notarchivedCardsArray","archivedCardsArray","arrayOfList","listWithCardIndex","notarchivedCards","archiveCards","listsOld","listDueDateIndex","cardDueDateIndex","oldLists","listDescriptionIndex","cardDescriptionIndex","listsArray","listTitleIndex","cardTitleIndex","cd","searchbar","invitation","dashboardFix","newProjects1","Store","createStore","composeWithDevTools","applyMiddleware","thunk","ProjectList","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClickOpenDialog","setState","openDialog","handleCloseDialog","handleChangeProjectTitle","name","event","defineProperty","target","handleChangeProjectVisibility","_this$setState2","checked","bind","assertThisInitialized","setProjectFavorite","isProjectPublic","visibility","createProjectMember","currentTarget","updateProject","_this2","classes","createProjectDialog","react_default","a","createElement","Dialog_default","open","onClose","aria-labelledby","Grid_default","container","justify","Typography","variant","xs","Divider_default","DialogContent_default","noValidate","autoComplete","TextField","label","className","textField","onChange","margin","fullWidth","alignItems","Switch_default","defaultChecked","color","Button_default","disabled","trim","onClick","projectList2","GridList","gridList","cols","map","isFavorite","GridListTile","key","borderRadius","goToProject","imgInformationsFav","borderRadiusBottom","GridListTileBar","subtitle","contributor","root","titleBar","gridTitle","actionIcon","IconButton_default","Star_default","favoriteButtonIcon","indexOf","imgInformations","StarBorder_default","addFavoriteButtonIcon","projectLayout","button","Add_default","rightIcon","React","Component","mapDispatchToProps","connect","withStyles","theme","flexGrow","marginLeft","marginBottom","paddingLeft","textAlign","default_card","maxWidth","marginRight","background","add_project_card","opacity","media","height","paddingTop","actions","display","&:hover","Icon","fontSize","addIcon","bootstrapRoot","label + &","marginTop","spacing","unit","bootstrapInput","backgroundColor","palette","white","border","padding","transition","transitions","fontFamily","join","&:focus","borderColor","boxShadow","bootstrapFormLabel","flexWrap","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","progress","CircularProgress_default","size","Dashboard","teamName","loadProjects","loadTeams","layout","loader_Loader","subLayout","projectList_ProjectList","iconList","allProjects","errorMessage","teamProjects","leftLayout","rightLayout","xsMarginBottom","paddingRight","Signin","submit","onLogin","onSigninWithGithub","_event$target","_this$props","Grid_Grid_default","sm","md","TextField_default","required","textfield","handleChange","goToForgottenPassword","lg","src","logo","width","alt","Typography_default","gutterBottom","goToSignUp","HowToReg_default","Cloud_default","goToDownloadPage","GetApp_default","errorLabel","paper","flexDirection","avatar","secondary","main","backgroundImage","bg","cardPresentation","minWidth","bullet","transform","pos","typography","useNextVariants","paddingSide","LoaderPage","Signup","generateTextfields","labelsForClient","textfields","toLowerCase","onAdd","loaderPage_LoaderPage","core_Typography_default","component","form","goBackToLogin","Invitation","componentDidMount","acceptInvitation","refuseInvitation","pathname","onDecryptInvitation","onReplyToInvitation","isLoadingGlobal","Button_Button_default","Done_default","Close_default","signin_Signin","parent","signup_Signup","Menu","displayComponent","route","history","buildLinks","menuList","links","link","MenuItem_default","menuItem","ListItemIcon_default","icon","ListItemText_default","primary","inset","Paper_default","MenuList_default","& $primary, & $icon","Theme","classic","createMuiTheme","successWarningError","SimpleSnackbar","Snackbar_default","anchorOrigin","vertical","horizontal","autoHideDuration","handleSnackbarClose","ContentProps","aria-describedby","message","aria-label","close","Password","reason","openSnackbar","oldPassword","newPassword","newPasswordConfirmation","TextField_TextField_default","checkFields","onUpdateMemberPassword","MuiThemeProvider","Save_default","leftIcon","iconSmall","snackbar_Snackbar","dense","menu","Overview","handleIsEditable","changePicture","handleProfilePicture","isEditable","onUpdateMember","file","files","formData","FormData","append","onUpdateMemberPicture","logoContainer","loader_MiniLoader","Avatar_default","memberPicture","classNames","bigAvatar","react_filepond","maxFiles","upload","onupdatefiles","fileItems","fileItem","AddAPhoto_default","Divider_Divider_default","FormControlLabel_default","control","Switch_Switch_default","memberIsLinkWithGithub","Profile","AccountBox_default","Fingerprint_default","index_es","menu_Menu","Router","es_Switch","Route","exact","path","render","Redirect","to","Notification","notification","onHandleCheckbox","computeBackground","cardUnread","updatedNotifications","Card_default","CardContent_default","content","align","Tooltip_default","TransitionComponent","Fade","TransitionProps","timeout","placement","Checkbox_default","paddingBottom","NotificationList","List_default","unreadFilter","ListItem_default","notification_Notification","fullList","SearchResults","fetchSuggestions","onSearchProjects","onSearchLists","onSearchCards","getSuggestions","setWrapperRef","handleClickOutside","renderSuggestion","handleClickSuggestion","propTypes","highlightedIndex","PropTypes","number","itemProps","selectedItem","string","suggestion","shape","isRequired","searchInput","isOpen","document","addEventListener","removeEventListener","_ref","isSelected","highlight","style","fontWeight","node","wrapperRef","contains","inputValue","deburr","inputValueLower","inputValueCapitalize","charAt","toUpperCase","slice","inputLength","count","keep","includes","onResetSearchArrays","ref","downshift_esm","_ref2","getInputProps","getItemProps","getMenuProps","InputProps","inputRoot","input","inputInput","square","labelSearchTitle","position","zIndex","left","right","chip","breakpoints","up","divider","Navbar","handleProfileMenuOpen","anchorEl","handleMenuClose","handleMobileMenuClose","handleMobileMenuOpen","mobileMoreAnchorEl","toggleDrawer","side","handleFilterChange","handleFilter","handleSearchResultsOpen","showSearchResults","handleSearchResultsClose","resultsAnchorEl","filterOnlyUnread","onGetAllNonArchivedNotifications","onUpdateNotifications","onLogOff","_this$state","isMenuOpen","Boolean","isMobileMenuOpen","isSearchResultsOpen","renderMenu","Menu_default","transformOrigin","openedMenu","renderNotifications","Drawer_default","anchor","tabIndex","role","onKeyDown","ChevronLeft_default","notificationList","notification_NotificationList","renderMobileMenu","Badge_default","badgeContent","Notifications_default","coloar","AccountCircle_default","renderSearchResults","searchResults_SearchResults","AppBar_default","Toolbar_default","Link","menuButton","Logo","search","searchIcon","Search_default","grow","sectionDesktop","aria-owns","aria-haspopup","sectionMobile","MoreVert_default","onShowOnlyUnread","fade","pointerEvents","justifyContent","textDecoration","openedNotifications","overflowY","filterRow","TransitionGithub","onIsMemberLogged","styles","expand","duration","shortest","expandOpen","shadows","clear","marginCard","row","rowRight","float","sizeButtonModal","maxHeight","minHeight","column","buttonIcon","editButton","textArea","buttonModal","iconComments","markdown","mdeSize","buttonLabel","heigth","orangeAvatar","fontStyle","littleAvatar","moreIcon","firstRow","scrollContainer","deleteIcon","formLabel","dialogTitle","memberList","memberItem","validIcon","marginSide","ChecklistDialog","handleClose","selectedValue","handleChangeCheckbox","chtState","onUpdateTask","handleCreateTask","querySelector","taskTitle","onCreateTask","handleRemoveTask","onDeleteTask","other","objectWithoutProperties","dialog","DialogTitle_default","List_List_default","marginBottomTop","task","ListItem_ListItem_default","ListItemText_ListItemText_default","IconButton_IconButton_default","icons_index_es","AddCircle_default","ChecklistDialogWrapped","Checklist","handleClickOpen","_this3","LabelDialog","labelId","newCard","onCreateLinkLabel","indexLink","onDeleteLinkLabel","selectedIndex","DialogContent_DialogContent_default","selected","labelColor","LabelDialogWrapped","onGetLabels","ConfirmationDialog","changeStatusArchived","onUpdateCard","handleParentClose","onDeleteCard","keepMounted","DialogContentText_default","DialogActions_default","MemberOnCard","handleOpenDialog","onRemoveMember","listindex","cardindex","handleChangeNewMember","onGetMembersOnCard","newMemberIndex","_this$props2","onAddMember","_this$props3","activeMembersList","modalWidth","isloading","core_Checkbox_default","otherMembers","FormControl_default","formControl","InputLabel_default","htmlFor","Select_default","inputProps","MenuItem_MenuItem_default","toString","Cardboard","handleOpen","handleChangeTitle","handleChangeDueDate","handleChangeDescription","getInstance","instance","togglePreview","handleEditDueDate","handleValidDueDate","handleCancelDueDate","editDescription","validEditDescription","handleEditTitle","validEditTitle","cardid","currentCard","editDueDate","editTitle","init","onUpdateTitle","onUpdateDate","onUpdateDescription","listen","cardDialog","Dialog_Dialog_default","Label_default","refresh","defaultValue","InputLabelProps","shrink","react_simplemde_editor_lib_default","getMdeInstance","options","autofocus","MembersOnCard","label_LabelDialog","checklist_ChecklistDialog","confirmation_ConfirmationDialog","onGetCard","listElement","react_beautiful_dnd_esm","draggableId","provided","snapshot","draggableProps","dragHandleProps","innerRef","card_Card","wordWrap","whiteSpace","paragraph","memberDialog","SimpleDialog","newTitle","submitted","handleSubmit","multiline","rows","listArea","listHeight","wordBreak","buttonList","dropSpace","textField2","dialogBox","badge","listsGrid","listTitle2","noPadding","TexfieldGrid","cardSlot","whiteText","widthMax","buttonAddList","listItem","horizontalScrollWrapper","overflowX","ListPrello","newCardTitle","createNewCard","handleClickMenu","handleCloseMenu","handleDeleteList","isOpenDeleteDialog","handleOpenMenu","editListTitle","isOpenAddCardDialog","handleArchivedList","handleCloseDeleteListDialog","handleConfirmDeleteList","cardName","archiveList","confirmDeleteDialog","MenuList","ListItemSecondaryAction_default","PaperProps","ITEM_HEIGHT","disablePadding","droppableId","project_card_Card","placeholder","dialog_SimpleDialog","Lists","newListname","createNewList","listName","createListCallback","direction","droppableProps","list_List","ActivityList","activity","MemberDialog","HaspermissionprojectMember1Fks","onUpdatePermission","handleRemoveFromProject","setAsAdministrator","submitInvitation","currentmemberid","VisibilityDialog","prevProps","updateVisibility","onDragEnd","result","source","destination","notArchivedList","archivedList","dragId","Number","parseInt","indexOfList","newArrayList","sourceListId","sourceList","destinationListId","destinationList","draggedCard","notArchivedCardsSource","archivedCardsSource","deleteSourceList","notArchivedCardsDestination","archivedCardsDestination","addDestinationList","sourceListIndex","destinationListIndex","onUpdatePositionCard","newSourceList","openMemberDialog","handleClickOpenVisibility","openVisibilityDialog","handleRestoreArchived","restoreList","editProjectTitle","openActivity","openFilter","openArchived","on","socketUpdateLists","socketUpdateProject","match","currentMemberId","logged","getAllListsWithCards","onGetAllPermissions","hasProject","currentMember","updateTitle","_this$props4","renderActivity","core_Drawer_default","drawer","drawerList","activity_ActivityList","renderArchived","expandPanel","ExpansionPanel_default","ExpansionPanelSummary_default","expandIcon","ExpandMore_default","heading","ExpansionPanelDetails_default","wrap","restoreButton","header","projectHeader","handleValidationEditTitle","dialog_MemberDialog","dialog_VisibilityDialog","dndArea","list_Lists","projectBody","fullHeight","moveList","updateCardsPosition","updateCardPosition","alignText","cusor","cancelIcon","accountConfirmation","goToLogin","TokenVerification","onValidateAccountWithToken","PasswordForgotten","onResetField","onSendNewPassword","paddingText","DashboardFix","handleProjectFavorite","isPublic","onFindAllProjectsMember","onCreateProject","onSetProjectAsFavorite","dialogCreation","projectList","projectArea","Paper_Paper_default","personalBtn","FolderOpen_default","favoriteList","favorite","favoriteBtn","creationButton","mainContainer","overflow","projectContainer","light","projectContent","Download","marginBottomXs","goToLink","download","downloadPicture","leavePage","App","LoginContainer","AccountConfirmation","LoaderPageContainer","DefaultContainer","navbar_Navbar","routesAuthorization","es","store","components_App","getElementById"],"mappings":"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","file":"static/js/main.5ee37de1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg-singin.b181f506.png\";","module.exports = __webpack_public_path__ + \"static/media/download-picture.0c0e7e11.png\";","module.exports = __webpack_public_path__ + \"static/media/prello-logo-2.2fc2e951.png\";","const Request = {\n\n    /*\n     *  Return : url based on keys and values of the object (?idKey=idValue&titleKey=titleValue...)\n     */\n    urlFromObject (object) {\n        if (object) {\n            let keys = Object.keys(object)\n            let values = Object.values(object)\n            let url = '?'\n            for (let i = 0; i < keys.length; i++) {\n                url += keys[i] + '=' + values[i]\n                if (i < keys.length - 1) url += '&'\n            }\n            return url\n        }\n        else return ''\n    }\n\n}\n\nexport default Request","import { createBrowserHistory } from 'history';\n\nconst History = createBrowserHistory();\n\nexport default History","const method = {\n    copy (o) {\n        return JSON.parse( JSON.stringify( o ) )\n    },\n\n    isTypeEmail (str) {\n        try {\n            let strSplit = str.split('@')\n            let strAfterA = strSplit[1].split('.')\n            let strEnd = str.split('.')\n\n            return (strSplit.length === 2 && strAfterA.length === 2 && strEnd.length > 1)\n        } catch (err) {\n            return false\n        }\n    },\n\n    computeListOrder (lists) {\n        let listsOrder = []\n        let index = 0\n        for (let l of lists) {\n            //let element = { listId: l.listId, listFather: -1 }\n            let element = { listId: l.listId, listFather: index }\n\n            /*if (index === 0) element.listFather = null\n            else element.listFather = lists[index - 1].listId*/\n\n            listsOrder.push(element)\n            index += 1\n        }\n        return listsOrder\n    },\n\n    computeCardOrder (lists) {\n        let cardsOrder = []\n        let index = 0\n        for (let l of lists) {\n            for (let c of l.CardListFks) {\n                let element = { cardId: c.cardId, cardFather: index }\n\n                /*let element = { cardId: c.cardId, cardFather: null }\n                if (index > 0) element.cardFather = l.CardListFks[index - 1].cardId\n                */\n                cardsOrder.push(element)\n                index += 1\n            }\n            index = 0//\n        }\n        return cardsOrder\n    }\n}\n\n\nexport default method","import axios from 'axios';\n\n// axios.defaults.headers.common['Authorization'] = localStorage.getItem('memberToken')\n\nconst BASE_URL = 'https://prello-ig.herokuapp.com/api/'\nconst SOCKET_URL = \"https://prello-ig.herokuapp.com\"\n\n/*\nWhy use Api instead of axios\napi use axios but it is centralised therefore the server url is set only one time and\nwe only need to change the BASE_URL if we want to change the server\n */\n\nconst apiMethods = {\n    BASE_URL,\n    SOCKET_URL,\n    headers: {\n        Authorization: localStorage.getItem('memberToken')\n    },\n    get (url, token = localStorage.getItem('memberToken')) {\n        axios.defaults.headers.common['Authorization'] = token\n        return axios.get(BASE_URL + url)\n    },\n\n    post (url, payload, token = localStorage.getItem('memberToken')) {\n        axios.defaults.headers.common['Authorization'] = token\n        return axios.post(BASE_URL + url, payload)\n    },\n\n    put (url, payload, token = localStorage.getItem('memberToken')) {\n        axios.defaults.headers.common['Authorization'] = token\n        return axios.put(BASE_URL + url, payload)\n    },\n\n    delete (url, token = localStorage.getItem('memberToken')) {\n        axios.defaults.headers.common['Authorization'] = token\n        return axios.delete(BASE_URL + url)\n    },\n}\n\nexport default apiMethods\n","import helper from '../helpers'\nimport Api from './Api'\n\n// axios.defaults.headers.common['Authorization'] = localStorage.getItem('memberToken')\n\nconst url = 'action/'\n\nconst Action = {\n\n    getAll (object) {\n        let where = helper.Request.urlFromObject(object)\n        return Api.get(url + 'find_all' + where).then(res => res.data)\n    },\n\n    get (object) {\n        let where = helper.Request.urlFromObject(object)\n        return Api.get(url + 'find_one' + where).then(res => res.data)\n    },\n\n    getNonArchived () {\n        return Api.get(url + 'find_all_unarchived').then(res => res.data)\n    },\n\n    updateMultiple (array) {\n        let body = {memberHasAction: array}\n        return Api.put(url + 'update_multiple', body).then(res => res.data)\n        //return axios.put(url + 'update/' + array[0].actionId, array[0]).then(res => res.data)\n    },\n\n    /** Generate project activity for all members of an array */\n    createActivityForAllMembers (body) {\n        let where = helper.Request.urlFromObject({projectId: body.projectId})\n        return Api.post(url + 'create_mha_from_array' + where, body).then(res => res.data)\n    }\n\n}\n\nexport default Action","// import axios from 'axios';\nimport helper from '../helpers'\n// axios.defaults.headers.common['Authorization'] = localStorage.getItem('memberToken')\nimport Api from './Api'\n\nconst url = 'card/'\n\nconst Card = {\n\n    getAll () {\n        return Api.get(url + 'find_all').then(res => res.data)\n    },\n\n    get (object) {\n        let where = helper.Request.urlFromObject(object)\n        return Api.get(url + 'find_one' + where).then(res => res.data)\n    },\n\n    create(body){\n        return Api.post(url + 'create', body).then(res => res.data)\n    },\n\n    createLinkLabel(body){\n        return Api.post(url + 'create_card_has_label', body).then(res => res.data)\n    },\n\n    deleteLinkLabel(query) {\n        let where = helper.Request.urlFromObject(query)\n        return Api.delete(url + 'delete_card_has_label' + where).then(res => res.data)\n    },\n\n    update(cardId,body){\n        return Api.put(url + 'update/'+cardId ,body).then(res => res.data)\n    },\n\n    searchbarCards (str) {\n        let where = helper.Request.urlFromObject(str)\n        return Api.get(url + 'find_all_searchbar' + where).then(res => res.data)\n    },\n\n    delete(query) {\n        let where = helper.Request.urlFromObject(query)\n        return Api.delete(url + 'delete' + where).then(res => res.data)\n    },\n\n    findAllMembers (query) {\n        let where = helper.Request.urlFromObject(query)\n        return Api.get(url + 'find_all_members' + where).then(res => res.data)\n    },\n\n    addMember(body) {\n        return Api.post(url + 'create_member_has_card', body).then(res => res.data)\n    },\n\n    removeMember(query) {\n        let where = helper.Request.urlFromObject(query)\n        return Api.delete(url + 'delete_member_has_card' + where).then(res => res.data)\n    },\n\n    updateCardOrder (cardsOrder) {\n        return Api.put(url + 'update_card_order', {cards: cardsOrder}).then(res => res.data)\n    }\n\n}\n\nexport default Card","// import axios from 'axios';\nimport helper from '../helpers'\n// axios.defaults.headers.common['Authorization'] = localStorage.getItem('memberToken')\nimport Api from './Api'\n\nconst url = 'list/'\n\nconst List = {\n\n\n    getAll (idProject) {\n        return Api.get(url + 'find_all/'+ idProject).then(res => res.data)\n    },\n\n\n    get (object) {\n        let where = helper.Request.urlFromObject(object)\n        return Api.get(url + 'find_one/1' + where).then(res => res.data)\n    },\n\n    create(body){\n\n        return Api.post(url + 'create', body).then(res => res.data)\n    },\n\n    update(listId,body){\n        return Api.put(url + 'update/'+listId, body).then(res => res.data)\n    },\n\n    delete(listId){\n        return Api.delete(url + 'delete/'+listId).then(res => res.data)\n    },\n\n    searchbarLists (str) {\n        let where = helper.Request.urlFromObject(str)\n        return Api.get(url + 'find_all_searchbar' + where).then(res => res.data)\n    },\n\n    updateListOrder (listsOrder) {\n        return Api.put(url + 'update_list_order', {lists: listsOrder}).then(res => res.data)\n    }\n\n}\n\nexport default List","// import axios from 'axios';\nimport helper from \"../helpers\";\nimport Api from './Api'\nimport axios from 'axios';\n\nconst url = 'member/'\n// axios.defaults.headers.common['Authorization'] = localStorage.getItem('memberToken')\n\nconst Member = {\n\n    createIfNotExist (body) {\n        let where = helper.Request.urlFromObject({ memberEmail: body.memberEmail })\n        return Api.post(url + 'create_if_not_exist' + where, body).then(res => res.data)\n    },\n\n    signIn (body) {\n        return Api.post(url + 'sign_in', body).then(res => res.data)\n    },\n\n    signInWithGithub () {\n        return Api.get(url + 'sign_in_with_github').then(res => res.data)\n    },\n\n    signUp (body) {\n        let where = helper.Request.urlFromObject({\n            memberEmail: body.memberEmail,\n            memberPseudo: body.memberPseudo\n        })\n        return Api.post(url + 'sign_up' + where, body).then(res => res.data)\n    },\n\n    updateMemberInvitation (body) {\n        return Api.put(url + 'update_sign_up?memberEmail=' + body.memberEmail, body).then(res => res.data)\n    },\n\n    /* Set the status of a member to 1 if the token is valid */\n    validateAccount (memberToken) {\n        return Api.put(url + 'validate_account',null , memberToken).then(res => res.data)\n    },\n\n    /* Retrieve member's token and check if he is connected are not */\n    isLogged () {\n        const memberToken = localStorage.getItem('memberToken')\n\n        if (memberToken) {\n            // eslint-disable-next-line\n            return Api.get(url + 'is_logged' + '?memberToken=' + memberToken)\n                .then(res => {\n                    return {\n                        member: res.data.member,\n                        isLogged: true\n                    }\n                })\n                .catch(err => {\n                    localStorage.removeItem('memberToken')\n                    return { isLogged: false }\n                })\n        } else {\n            return { isLogged: false }\n        }\n    },\n\n    get (object) {\n        let where = helper.Request.urlFromObject(object)\n        return Api.get(url + 'find_one' + where).then(res => res.data)\n    },\n\n    update (body) {\n        let where = helper.Request.urlFromObject({memberId: body.memberId})\n        return Api.put(url + 'update' + where, body).then(res => res.data)\n    },\n\n    updatePassword (attributes) {\n        let where = helper.Request.urlFromObject({memberId: attributes.memberId, memberPassword: attributes.memberPassword})\n        let body = {\n            memberPassword: attributes.newMemberPassword\n        }\n        return Api.put(url + 'update_password' + where, body).then(res => res.data)\n    },\n\n    /* Send a random new password when a member forgot his password */\n    sendNewPassword (memberEmail) {\n        let body = {\n            memberEmail: memberEmail\n        }\n        return Api.post(url + 'password_forgotten', body).then(res => res.data)\n    },\n\n    /** ==================== INVITATIONS ==================== */\n\n    /** Check if the token contains a member that exist */\n    decrpytInvitation (memberToken) {\n        return Api.get(url + 'decrypt_invitation', memberToken).then(res => res.data)\n    },\n\n    getInvitation (object) {\n        let where = helper.Request.urlFromObject(object)\n        return Api.get(url + 'find_one_invitation' + where).then(res => res.data)\n    },\n\n    updateInvitation (body, query) {\n        let where = helper.Request.urlFromObject(query)\n        return Api.put(url + 'update_invitation' + where, body).then(res => res.data)\n    },\n\n    deleteInvitation (query) {\n        let where = helper.Request.urlFromObject(query)\n        return Api.delete(url + 'delete_invitation' + where).then(res => res.data)\n    },\n\n    /** ==================== CLOUDINARY ==================== */\n    updateProfilePicture (body, query) {\n        axios.defaults.headers.common['Authorization'] = localStorage.getItem('memberToken')\n        axios.defaults.headers.common['Content-Type'] = 'multipart/form-data'\n        let where = helper.Request.urlFromObject({memberId: query})\n        return axios.put(Api.BASE_URL + url + 'update_picture' + where, body).then(res => res.data)\n    },\n}\n\nexport default Member","import helper from '../helpers'\nimport Api from './Api'\n\nconst url = 'permission/';\n\nconst Action = {\n\n    createMemberProjectPermission (memberId, projectId, permissionId, mhppState) {\n        let payload = {\n            memberId, projectId, permissionId, mhppState\n        };\n        return Api.post(url + 'create_for_project', payload).then(r => r.data)\n    },\n    \n    /** get the permissions of the member on the project\n     *\n     *  object = { projectId: id }\n     */\n    getAllOnProject (object) {\n        let where = helper.Request.urlFromObject(object)\n        return Api.get(url + 'find_all_for_project' + where).then(res => res.data)\n    },\n\n    updateOnProject (object, body) {\n        let where = helper.Request.urlFromObject(object)\n        return Api.put(url + 'update_for_project' + where, body).then(res => res.data)\n    },\n\n    deleteForMemberOnProject (object) {\n        let where = helper.Request.urlFromObject(object)\n        return Api.delete(url + 'delete_for_project' + where).then(res => res.data)\n    }\n\n\n}\n\nexport default Action","//import axios from 'axios';\nimport helper from '../helpers'\n//axios.defaults.headers.common['Authorization'] = localStorage.getItem('memberToken')\nimport Api from './Api'\n\nconst url = 'project/'\n\nconst Project = {\n\n    getAll () {\n        return Api.get(url + 'find_all').then(res => res.data)\n    },\n\n    getAllProjectsForMember (query) {\n        let where = helper.Request.urlFromObject(query)\n        return Api.get(url + 'find_all_projects_member' + where).then(res => res.data)\n    },\n\n    getAllWithCards (object) {\n        let where = helper.Request.urlFromObject(object)\n        return Api.get(url + 'find_all_lists_cards' +where).then(res => res.data)\n    },\n\n    getAllProjectsMember (member_id) { // get all member that member is involved in\n        return Api.get(url + 'find_all_member/' + member_id).then(res => res.data).catch(e => e.error)\n    },\n\n    /** Use for project component */\n    getAllMembers(object){\n        let where = helper.Request.urlFromObject(object)\n        return Api.get(url + 'find_all_members' + where).then(res => res.data)\n    },\n\n    getAllActions(object){\n        let where = helper.Request.urlFromObject(object)\n\n        return Api.get(url + 'find_all_actions' + where).then(res => res.data)\n    },\n\n    get (object) {\n        let where = helper.Request.urlFromObject(object)\n        return Api.get(url + 'find_one' + where).then(res => res.data)\n    },\n\n    getOne (projectId) {\n        return Api.get(url + 'find_one/' +projectId).then(res => res.data)\n    },\n\n    update(projectId,body){\n        return Api.put(url + 'update/' + projectId, body).then(res => res.data)\n    },\n\n    createProject (projectTitle, projectVisibility, projectStatus = 0, projectDateTarget = null) {\n        let payload = {\n            projectTitle, projectVisibility, projectStatus, projectDateTarget\n        }\n\n        return Api.post(url + 'create', payload).then(res => res.data)\n    },\n\n    createMemberHasProject (memberId, projectId, memberhasprojectStatus, projectIsFavorite = false) {\n        let payload = {\n            memberId, projectId, memberhasprojectStatus, projectIsFavorite\n        }\n        return Api.post(url + 'createMemberHasProject', payload).then(res => res.data)\n    },\n\n    updateMemberHasProject (params) {\n      return Api.put(`${url}update_memberhasProject${helper.Request.urlFromObject(params)}`).then(res => res.data)\n    },\n\n    searchbarProjects (str) {\n        let where = helper.Request.urlFromObject(str)\n        return Api.get(url + 'find_all_searchbar' + where).then(res => res.data)\n    },\n    getMemberHasProject(object){\n        let where = helper.Request.urlFromObject(object)\n        return Api.get(url + 'member_has_project' + where).then(res => res.data)\n    },\n\n    getLabels(){\n        /**\n         * return all labels for a specific project\n         */\n    },\n\n    sendInvitation(object){\n        //let where = helper.Request.urlFromObject(object)\n       /**\n        * object = {\n            * memberId :..\n            * memberEmail:...\n            * projectId: ...\n        * }\n        */\n\n        /**\n        * send an invitation to user to join the project (user exist in DB)\n        * -> we create a row in the table memberhasproject with status = 0 (in validation) \n        * -> we send an email with a link to update his status = 1 (accepted to join) \n        */\n\n    },  \n    createAndSendInvitation(body){\n        /**\n        * object = {\n            * memberEmail:...\n            * projectId: ...\n        * }\n        */\n\n        /** email doesnt exist in DB so we have to :\n         * Create an account with the specified email and send an email invitation to user to join the project\n         * -> we create an account \n         * -> we create a row in the table memberhasproject with status = 0 (in validation)\n         * -> we send an email with a link to update his password and information and update his status = 1 (accepted to join)\n         */\n        return Api.post(url + 'create_invitation', body).then(res => res.data)\n    },\n    getMemberStatus(object){\n        /**\n         * object = {\n            * memberId: ..\n            * projectId: ...\n         * } \n         */\n\n        /***Return the status for a member of a specific project:\n         * True if he is admin of this project, else false\n         */\n        let where = helper.Request.urlFromObject(object)\n        return Api.get(url + 'member_is_admin' + where).then(res => res.data)\n    },\n\n    createProjectForMember(body){\n         return Api.post(url + 'create_mhp', body).then(res => res.data)\n    },\n\n    createProjectFix(body){\n        return Api.post(url + 'create', body).then(res => res.data)\n    },\n\n    updateFix (query, body) {\n        let where = helper.Request.urlFromObject(query)\n        return Api.put(url + 'update_mhp' + where, body).then(res => res.data)\n    },\n\n    getActivity(projectId){\n        /**\n         * Return all activities related to this project \n         * in the DB -> Table \"action\"\n         */\n    }\n}\n\nexport default Project","// import axios from 'axios';\nimport helper from '../helpers'\n// axios.defaults.headers.common['Authorization'] = localStorage.getItem('memberToken')\nimport Api from './Api'\n\nconst url = 'team/'\n\nconst Team = {\n\n    getAll (memberId = null) {\n        // if there is no parameter memberId select all team\n        // otherwise return all team that the member is involved in\n        if (!memberId ||memberId == null)\n            return Api.get(url + 'find_all').then(res => res.data);\n        else\n            return Api.get(url + 'find_all/' + memberId).then(res => res.data)\n\n    },\n\n    get (object) {\n        let where = helper.Request.urlFromObject(object)\n        return Api.get(url + 'find_one' + where).then(res => res.data)\n    },\n\n    create(body){\n        return Api.post(url + 'create', body).then(res => res.data)\n    },\n\n    update(teamId, body){\n        return Api.put(url + 'update/' + teamId, body).then(res => res.data)\n    },\n\n\n\n}\n\nexport default Team","// import axios from 'axios';\nimport helper from '../helpers'\n// axios.defaults.headers.common['Authorization'] = localStorage.getItem('memberToken')\nimport Api from './Api'\n\nconst url = 'task/'\n\nconst Task = {\n\n    create(body){\n        return Api.post(url + 'create', body).then(res => res.data)\n    },\n\n    update(query, body){\n        let where = helper.Request.urlFromObject(query)\n        return Api.put(url + 'update' + where, body).then(res => res.data)\n    },\n\n    delete(query) {\n        let where = helper.Request.urlFromObject(query)\n        return Api.delete(url + 'delete' + where).then(res => res.data)\n    }\n\n}\n\nexport default Task","// import axios from 'axios';\nimport helper from '../helpers'\n// axios.defaults.headers.common['Authorization'] = localStorage.getItem('memberToken')\nimport Api from './Api'\n\nconst url = 'label/'\n\nconst Label = {\n\n    getAll (query) {\n        let where = helper.Request.urlFromObject(query)\n        return Api.get(url + 'find_all' + where).then(res => res.data)\n    }\n\n}\n\nexport default Label","import Action from './Action.service';\nimport Api from './Api'\nimport Card from './Card.service';\nimport List from './List.service';\nimport Member from './Member.service';\nimport Permission from './Permission.service';\nimport Project from './Project.service';\nimport Team from './Team.service';\nimport Task from './Task.service';\nimport Label from './Label.service'\n//import Comments from './Comments.service'\n// TODO Push comment service\n\nconst service = {\n    Api,\n    Action,\n    Card,\n    List,\n    Member,\n    Permission,\n    Project,\n    Team,\n    Task,\n    Label,\n    //Comments\n}\n\nexport default service","import _service from '../services'\nimport _helper from '../helpers'\nimport moment from \"moment\";\n\nconst labels = {\n    LOAD_DASHBOARD: \"LOAD_DASHBOARD\",\n    SELECT_PROJECT: 'project:select_one',\n    FIND_ONE_PROJECT: 'project:find_one',\n    RECEIVE_PROJECT: 'project:received',\n    SELECT_ALL_PROJECT: 'project:select_all', // at the begin\n    SELECT_ALL_PROJECT_MEMBER: 'project:select_all_project_member',\n    SELECT_ALL_TEAM_MEMBER: 'project:select_all_team_member',\n    CREATE_NEW_PROJECT: 'project:create_new',\n    UPDATE_MEMBER_HAS_PROJECT: 'project:update_member_has_project',\n    DASHBOARD_ACTION_ERROR: 'project:dashboard_error',\n    DASHBOARD_HIDE_ERROR_MSG: 'project:hide_error_msg' // to hide the error message\n}\n\n/**Find one project\n * \n */\nconst findOneProject = () => ({\n    type: labels.FIND_ONE_PROJECT,\n})\n\n/** Receive a project\n * @param json a project object\n */\nconst receivedProject = json => ({\n    type: labels.RECEIVE_PROJECT,\n    payload: json.project,\n})\n\n/** Fetch a project\n * @param attributes project attributes\n */\nfunction fetchProject(attributes) {\n    return (dispatch) => {\n\n        dispatch(findOneProject())\n\n        _service.Project.get(attributes)\n            .then(res => {\n                dispatch(receivedProject({project: res}));\n            })\n            .catch((err) => {\n                console.log('Error : ', err)\n            });\n    };\n}\n\n/** Get all project of a member\n * @param member_id member id\n */\nfunction getAllProjectsMember (member_id) {\n    return dispatch => {\n        dispatch({\n            type: labels.LOAD_DASHBOARD\n        })\n        _service.Project.getAllProjectsMember(member_id)\n            .then(projects => {\n                dispatch({\n                    type: labels.SELECT_ALL_PROJECT_MEMBER,\n                    payload: projects\n                })\n            })\n            .catch (e => {\n                console.log(e)\n                dispatch({\n                    type: labels.DASHBOARD_ACTION_ERROR,\n                    errorMsg: 'We can\\'t load your project for the moment, please try later or contact an administrator.'\n                })\n            })\n    }\n}\n\n/** Get all team of a member\n * @param member_id member id\n */\nfunction getAllTeams(member_id) {\n    return dispatch => {\n        _service.Team.getAll(member_id).then(teams => {\n            dispatch({\n                type: labels.SELECT_ALL_TEAM_MEMBER,\n                payload: teams\n            })\n        }).catch( () => dispatch({\n            type: labels.DASHBOARD_ACTION_ERROR,\n            errorMsg: 'Impossible to load your team for the moment. Please try later or contact an administrator.'\n        }))\n    }\n}\n\n/** Update status of a member project\n * @param projectId project id\n * @param memberId member id\n * @param projectIsFavorite \n */\nfunction updateMemberHasProject (projectId, memberId, projectIsFavorite) {\n    let dataObject = {\n        projectId, memberId, projectIsFavorite\n    }\n\n    return dispatch => _service.Project.updateMemberHasProject(dataObject)\n        .then(id => {\n            dispatch({\n                type: labels.UPDATE_MEMBER_HAS_PROJECT,\n                payload: {\n                    projectId, projectIsFavorite\n                }\n            })\n        })\n        .catch (e => {\n            dispatch({\n                type: labels.DASHBOARD_ACTION_ERROR,\n                errorMsg: 'impossible to execute this action'\n            })\n        })\n}\n\n/** Create a project\n * @param projectTitle new project title\n * @param projectVisibility visibility set on the new project\n * @param projectStatus status of the new project\n * @param projectDateTarget target date of the new project\n * @param memberId member id \n * @param memberhasprojectStatus \n * @param member\n */\nfunction createProject (projectTitle, projectVisibility, projectStatus = 0, projectDateTarget,\n                        memberId, memberhasprojectStatus = 0, member) {\n\n    return dispatch => _service.Project.createProject( projectTitle, projectVisibility, projectStatus, projectDateTarget)\n        .then(project => {\n            const projectId = project.projectId\n\n            _service.Project.createMemberHasProject(memberId, projectId, memberhasprojectStatus)\n                .then( () => {\n                    let project = {\n                        projectId,\n                        projectTitle,\n                        projectVisibility,\n                        projectStatus,\n                        projectDateTarget\n                    }\n\n\n                    /*\n                        permissionId = 3 because this member is the admin of the project\n                     */\n                    let permissionId = 3\n                    let mhppState = true\n                    _service.Permission\n                        .createMemberProjectPermission(memberId, projectId, permissionId, mhppState)\n                        .then(permission => {\n\n                            _service.Action.createActivityForAllMembers({\n                                actionType: 0,\n                                actionTitle: \"Project was created\",\n                                actionDescription: member.memberPseudo + \" has create the project '\" + projectTitle + \"'.\",\n                                memberId: memberId,\n                                projectId: projectId,\n                                actionDateCreation: moment(),\n                                mhaStatus: 0\n                            })\n                                .then(res => {\n                                    dispatch({\n                                        type: labels.CREATE_NEW_PROJECT,\n                                        payload: project\n                                    })\n                                    _helper.History.push('/project/' + projectId)\n                                })\n                                .catch(err => {\n                                    console.log(err)\n                                })\n\n\n                        })\n\n                })\n    }).catch (e => {\n            dispatch({\n                type: labels.DASHBOARD_ACTION_ERROR,\n                errorMsg: 'The project wasn`t able to be created. Please try later or contact an administrator.'\n            })\n        })\n}\n\n/**\n * Hide error message\n */\nfunction hideErrorMessage() {\n    return dispatch => dispatch({\n        type: labels.DASHBOARD_HIDE_ERROR_MSG\n    })\n}\n\nexport const dashboardAction = {\n    labels,\n    fetchProject,\n    getAllProjectsMember,\n    createProject,\n    updateMemberHasProject,\n    hideErrorMessage,\n    getAllTeams\n}","import { dashboardAction } from '../actions/Dashboard.action';\nimport Helper from '../helpers'\n\nconst labels = dashboardAction.labels\n\nconst initialState = {\n    /*project: {\n        projectTitle: 'Hello Moto'\n    },*/\n    projects: [],\n    teams: []\n};\n\nexport function dashboard (state = initialState, action) {\n    switch (action.type) {\n        case labels.LOAD_DASHBOARD:\n            return { ...state, isLoading: true, errorMsg: '' };\n\n        case labels.SELECT_PROJECT:\n            return { ...state, project: action.project, errorMsg: '' };\n\n        case labels.FIND_ONE_PROJECT:\n            return { ...state, loading: true, errorMsg:'' };\n\n        case labels.RECEIVE_PROJECT:\n            return { ...state, project: action.json, loading: false, errorMsg:'' };\n\n        case labels.SELECT_ALL_PROJECT_MEMBER:\n            return { ...state, projects:action.payload, errorMsg: '', isLoading: false };\n\n        case labels.SELECT_ALL_TEAM_MEMBER:\n            return { ...state, teams:action.payload, errorMsg: '' };\n\n        case labels.UPDATE_MEMBER_HAS_PROJECT:\n            let newProjects = Helper.Method.copy(state.projects)\n            //let found = false\n\n            for (let i =0; i < newProjects.length; i++) {\n                if (action.payload.projectId === newProjects[i].projectId) {\n                    //found = true\n                    newProjects[i].projectIsFavorite = action.payload.projectIsFavorite\n                }\n            }\n            return { ...state, projects:newProjects, errorMsg:'' };\n\n        case labels.CREATE_NEW_PROJECT:\n            return state // TODO\n\n        case labels.DASHBOARD_ACTION_ERROR:\n            return {...state, errorMsg: action.errorMsg}\n\n        case labels.DASHBOARD_HIDE_ERROR_MSG:\n            return { ...state, errorMsg:'' }\n        default:\n            return state\n    }\n};\n","import _service from '../services'\nimport _helper from '../helpers';\n\nconst labels = {\n    LOGIN : \"LOGIN\",\n    ERROR : \"ERROR\",\n    CREATE_USER : \"CREATE_USER\",\n    IS_LOGGED: \"IS_LOGGED\",\n    IS_NOT_LOGGED: \"IS_NOT_LOGGED\",\n    NEW_PASSWORD_SENT: \"NEW_PASSWORD_SENT\",\n    NEW_PASSWORD_FAILED: \"NEW_PASSWORD_FAILED\",\n    RESET_FIELD: \"RESET_FIELD\"\n}\n\nconst signSuccess = member => ({\n    type: labels.LOGIN,\n    payload: {\n        member: member\n    }\n})\n\nconst signError = {\n    type: labels.ERROR,\n    payload: \"Email or password is incorrect.\",\n}\n\nfunction signin (memberEmail, memberPassword, redirection) {\n    const body = {\n        memberEmail: memberEmail,\n        memberPassword: memberPassword\n    }\n\n\n\n    return dispatch => {\n        _service.Member.signIn(body)\n            .then(res => {\n                localStorage.setItem('memberToken', res.memberToken)\n                dispatch(signSuccess(res));\n                if (redirection) _helper.History.push(redirection);\n            })\n            .catch((err) => {\n                dispatch(signError)\n            });\n    }\n}\n\nfunction isMemberLogged () {\n    return (dispatch) => {\n        var memberToken = localStorage.getItem('memberToken')\n        if (memberToken) {\n            _service.Member.isLogged()\n                .then(res => {\n                    dispatch({\n                        type: labels.IS_LOGGED,\n                        payload: res\n                    })\n                })\n        } else {\n            dispatch({\n                type: labels.IS_NOT_LOGGED,\n                payload: { isLogged: false }\n            })\n        }\n    }\n}\n\nfunction isMemberLoggedGithub () {\n    return (dispatch) => {\n        var memberToken = localStorage.getItem('memberToken')\n        if (memberToken) {\n            _service.Member.isLogged()\n                .then(res => {\n                    dispatch({\n                        type: labels.IS_LOGGED,\n                        payload: res\n                    })\n                    _helper.History.push('/home')\n                })\n        } else {\n            dispatch({\n                type: labels.IS_NOT_LOGGED,\n                payload: { isLogged: false }\n            })\n            _helper.History.push('/home')\n        }\n    }\n}\n\nfunction sendNewPassword (memberEmail) {\n    return dispatch => {\n        _service.Member.sendNewPassword(memberEmail)\n            .then(res => {\n                dispatch({\n                    type: labels.NEW_PASSWORD_SENT\n                });\n            })\n            .catch((err) => {\n                dispatch({\n                    type: labels.NEW_PASSWORD_FAILED\n                })\n            });\n    }\n}\n\nfunction resetField () {\n    return dispatch => {\n        dispatch({\n            type: labels.RESET_FIELD\n\n        })\n    }\n}\n\nfunction signinWithGithub () {\n    return dispatch => {\n\n        _service.Member.signInWithGithub()\n            .then(res => {\n                //localStorage.setItem('memberToken', res.token)\n                //_helper.History.push('/home');\n                window.location.assign(res)\n            })\n            .catch((err) => {\n                dispatch(signError)\n            });\n\n    }\n}\n\nfunction confirmSigninGithub (memberEmail, token) {\n    const body={\n        memberEmail: memberEmail,\n        //memberToken: token,\n    }\n    localStorage.setItem('memberToken', token)\n    return dispatch => {\n        _service.Member.get(body)\n            .then(res => {\n                console.log(\"res get \\n\", res);\n\n                _helper.History.push('/home');\n                dispatch(signSuccess(res));\n            })\n            .catch((err) => {\n                dispatch(signError)\n            });\n    }\n\n}\n\nexport const signinAction = {\n    labels,\n    signin,\n    signinWithGithub,\n    confirmSigninGithub,\n    isMemberLoggedGithub,\n    isMemberLogged,\n    sendNewPassword,\n    resetField\n}","import _service from '../services'\nimport _helper from '../helpers';\n\nconst labels = {\n    //LOGIN : \"LOGIN\",\n    LOAD_SIGNUP: \"LOAD_SIGNUP\",\n    LOAD_INVITATION: \"LOAD_INVITATION\",\n    SIGN_UP : \"SIGN_UP\",\n    SIGN_UP_ERROR : \"SIGN_UP_ERROR\",\n    CREATE_USER : \"CREATE_USER\",\n    LOADING: \"LOADING\",\n    VALIDATE_ACCOUNT_TOKEN: \"VALIDATE_ACCOUNT_TOKEN\",\n    VALIDATE_ACCOUNT_TOKEN_ERROR: \"VALIDATE_ACCOUNT_TOKEN_ERROR\",\n    INVITATION_ACCEPTED: \"INVITATION_ACCEPTED\",\n    INVITATION_ACCEPTED_ERROR: \"INVITATION_ACCEPTED\"\n}\n\nconst signSuccess = token => ({\n    type: labels.SIGN_UP,\n    payload: token,\n})\n\nconst signError = msg => ({\n    type: labels.SIGN_UP_ERROR,\n    payload: msg || ['Failed to create the account.', ''],\n})\n\nfunction signup (body, isDirectlyValidate) {\n    return dispatch => {\n        dispatch({\n            type: labels.LOAD_INVITATION\n        })\n        let checking = checkSignupFields(body)\n        if (checking.isFieldsOk) {\n            let finalBody = Object.assign({memberStatus: 0}, body)\n\n            if (isDirectlyValidate) {\n                // A new member answered to an invitation\n                finalBody.memberStatus = 1\n                console.log(finalBody)\n                _service.Member.updateMemberInvitation(finalBody)\n                    .then(res => {\n                        dispatch({\n                            type: labels.INVITATION_ACCEPTED,\n                            payload: {member: res}\n                        });\n                    })\n                    .catch((err) => {\n                        dispatch(signError(err.response.data))\n                    });\n            } else {\n                _service.Member.signUp(finalBody)\n                    .then(res => {\n                        dispatch(signSuccess(res));\n                        _helper.History.push('/home');\n                    })\n                    .catch((err) => {\n                        dispatch(signError(err.response.data))\n                    });\n            }\n        } else {\n            console.log(checking.payload)\n            dispatch(signError(checking.payload))\n        }\n    }\n}\n\nfunction checkSignupFields (fields) {\n    let isEmpty = false\n    for (let field of Object.values(fields)) {\n        if (field === '') isEmpty = true\n    }\n    if (isEmpty) {\n        return { isFieldsOk: false, payload: [\"Some required fields are empty.\", \"all\"] }\n    }\n    else if (fields.memberPassword.length < 6) {\n        return { isFieldsOk: false, payload: [\"Password should be at least 6 characters.\", \"memberPassword\"] }\n    } else if (fields.memberPassword !== fields.memberCheckPassword) {\n        return {isFieldsOk: false, payload: [\"Password confirmation failed.\", \"memberCheckPassword\"]}\n    } else {\n        return { isFieldsOk: true }\n    }\n}\n\nfunction validateAccountWithToken (memberToken) {\n    return dispatch => {\n        _service.Member.validateAccount(memberToken)\n            .then(res => {\n                dispatch({\n                    type: labels.VALIDATE_ACCOUNT_TOKEN\n                });\n                _helper.History.push('/account-confirmation');\n            })\n            .catch((err) => {\n                _helper.History.push('/login');\n                dispatch({\n                    type: labels.VALIDATE_ACCOUNT_TOKEN_ERROR\n                })\n            });\n    }\n}\n\nexport const signupAction = {\n    labels,\n    signup,\n    validateAccountWithToken\n}","import _helper from '../helpers';\nimport _service from \"../services\";\n\nconst labels = {\n    LOG_OFF : \"LOG_OFF\",\n    GET_ALL_NOTIFICATIONS: \"GET_ALL_NOTIFICATIONS\",\n    GET_ALL_NOTIFICATIONS_ERROR: \"GET_ALL_NOTIFICATIONS_ERROR\",\n    UPDATE_NOTIFICATION: \"UPDATE_NOTIFICATION\",\n    UPDATE_NOTIFICATIONS__DB_ERROR: \"UPDATE_NOTIFICATIONS_DB_ERROR\",\n    UPDATE_NOTIFICATIONS_DB: \"UPDATE_NOTIFICATIONS_DB\",\n\n}\n\n/** Logg off, remove token from local storage\n * \n */\nfunction logOff () {\n    localStorage.removeItem('memberToken')\n    _helper.History.push('/')\n    return dispatch => {\n        dispatch({\n            type: labels.LOG_OFF\n        });\n    }\n}\n\n/* =============== NOTIFICATIONS =============== */\n/** Get all non archived notifications \n * \n */\nfunction getAllNonArchivedNotifications () {\n    return dispatch => {\n        _service.Action.getNonArchived()\n            .then(res => {\n                dispatch({\n                    type: labels.GET_ALL_NOTIFICATIONS,\n                    payload: res\n                });\n            })\n            .catch((err) => {\n                dispatch({\n                    type: labels.GET_ALL_NOTIFICATIONS_ERROR\n                })\n            });\n    }\n}\n\n/** Change the state of the checkbox locally */\nfunction handleCheckboxNotification (notifications, newNotification, index, isRead, nbUnread) {\n    return dispatch => {\n        var res;\n        notifications[index] = newNotification\n        if (isRead) {\n            res = {\n                notifications: notifications,\n                notificationsUnread: nbUnread -= 1\n            }\n        } else {\n            res = {\n                notifications: notifications,\n                notificationsUnread: nbUnread += 1\n            }\n        }\n        dispatch({\n            type: labels.UPDATE_NOTIFICATION,\n            payload: res\n        });\n    }\n}\n\n/** Update notifications, set as read\n * @param notifications array of notifications\n */\nfunction updateNotifications (notifications) {\n    return dispatch => {\n        _service.Action.updateMultiple(notifications)\n            .then(res => {\n                dispatch({\n                    type: labels.UPDATE_NOTIFICATIONS_DB,\n                    payload: res\n                });\n            })\n            .catch((err) => {\n                dispatch({\n                    type: labels.UPDATE_NOTIFICATIONS__DB_ERROR\n                })\n            });\n    }\n}\n\nexport const navbarAction = {\n    labels,\n    logOff,\n    getAllNonArchivedNotifications,\n    handleCheckboxNotification,\n    updateNotifications\n}","import cloneDeep from 'lodash/cloneDeep';\n\nconst labels = {\n    CHANGE_NOTIFICATION_READ_STATE: 'CHANGE_NOTIFICATION_READ_STATE',\n    FILTER_ONLY_UNREAD: 'FILTER_ONLY_UNREAD',\n    DISABLED_FILTER: 'DISABLED_FILTER'\n}\n\n// WARNING : Don't work, problem with object copy I guess\nfunction showOnlyUnreadAction (notifications, notificationsUnarchived, onlyUnread) {\n    if (onlyUnread) {\n        // We need to get only unread notifications in the store\n        let notificationsUnarchived = []\n        notificationsUnarchived = cloneDeep(notifications);\n        //Object.assign(notificationsUnarchived, notifications)\n        let newNotifications = []\n\n        for (let item of notificationsUnarchived) {\n            if (item.actionStatus === 0) {\n                newNotifications.push(item)\n            }\n        }\n        return (dispatch) => {\n            dispatch({\n                type: labels.FILTER_ONLY_UNREAD,\n                payload: {\n                    notifications: newNotifications,\n                    notificationsUnarchived: notifications\n                }\n            });\n        };\n    } else {\n        return (dispatch) => {\n            dispatch({\n                type: labels.DISABLED_FILTER,\n                payload: {\n                    notifications: notificationsUnarchived,\n                    notificationsUnarchived: []\n                }\n            });\n        }\n    }\n}\n\nexport const notificationAction = {\n    labels,\n    showOnlyUnreadAction\n}","import _service from '../services'\n\nconst labels = {\n    LOAD_PROFILE_PICTURE: 'LOAD_PROFILE_PICTURE',\n    UPDATE_MEMBER: 'UPDATE_MEMBER',\n    UPDATE_MEMBER_ERROR: 'UPDATE_MEMBER_ERROR',\n    UPDATE_PASSWORD: 'UPDATE_PASSWORD',\n    UPDATE_PASSWORD_ERROR: 'UPDATE_PASSWORD_ERROR'\n}\n\n/** Update a member\n * @param attributes Object contains data to update with\n */\nfunction updateMember(attributes) {\n    return (dispatch) => {\n        _service.Member.update(attributes)\n            .then(res => {\n                if (res) {\n                    localStorage.setItem('memberToken', res.memberToken)\n                    dispatch({\n                        type: labels.UPDATE_MEMBER,\n                        payload: {\n                            member: res\n                        }\n                    })\n                } else {\n                    dispatch({\n                        type: labels.UPDATE_MEMBER_ERROR,\n                    })\n                }\n\n            })\n            .catch((err) => {\n                dispatch({\n                    type: labels.UPDATE_MEMBER_ERROR,\n                })\n            });\n    };\n}\n\n/** Update member picture profile\n * @param attributes\n * @param memebrId\n */\nfunction updateMemberPicture (attributes, memberId) {\n    return (dispatch) => {\n        dispatch({\n            type: labels.LOAD_PROFILE_PICTURE,\n        })\n        _service.Member.updateProfilePicture(attributes, memberId)\n            .then(res => {\n                if (res) {\n                    localStorage.setItem('memberToken', res.memberToken)\n                    dispatch({\n                        type: labels.UPDATE_MEMBER,\n                        payload: {\n                            member: res\n                        }\n                    })\n                } else {\n                    dispatch({\n                        type: labels.UPDATE_MEMBER_ERROR,\n                    })\n                }\n\n            })\n            .catch((err) => {\n                dispatch({\n                    type: labels.UPDATE_MEMBER_ERROR,\n                })\n            });\n    };\n}\n\n/**Update member password\n * @param password\n */\nfunction updateMemberPassword (passwords) {\n    return (dispatch) => {\n        _service.Member.updatePassword(passwords)\n            .then(res => {\n                if (res) {\n                    localStorage.setItem('memberToken', res.memberToken)\n                    dispatch({\n                        type: labels.UPDATE_PASSWORD,\n                        payload: {\n                            updatePasswordMsg: 'Password updated.',\n                        }\n                    })\n                } else {\n                    dispatch({\n                        type: labels.UPDATE_PASSWORD_ERROR,\n                        payload: {\n                            updatePasswordMsg: 'Wrong password. Please, provide the right password for your account.',\n                        }\n                    })\n                }\n\n            })\n            .catch((err) => {\n                dispatch({\n                    type: labels.UPDATE_PASSWORD_ERROR,\n                    payload: {\n                        updatePasswordMsg: 'Wrong password. Please, provide the right password for your account.',\n                    }\n                })\n            });\n    }\n}\n\nexport const profileAction = {\n    labels,\n    updateMember,\n    updateMemberPassword,\n    updateMemberPicture\n}","import _service from '../services'\nimport moment from \"moment\";\n\nconst labels = {\n    LOAD_PROJECT: \"LOAD_PROJECT\",\n    GET_ALL_LISTS :\"GET_ALL_LISTS\",\n    CREATE_LIST : \"CREATE_LIST\",\n    CREATE_LIST_ERROR: \"CREATE_LIST_ERROR\",\n    UPDATE_LIST : \"UPDATE_LIST\",\n    UPDATE_LIST_ERROR : \"UPDATE_LIST_ERROR\",\n    GET_PROJECT_INFO : \"GET_PROJECT_INFO\",\n    GET_PROJECT_INFO_ERROR:\"GET_PROJECT_INFO_ERROR\",\n    GET_ALL_MEMBERS:\"GET_ALL_MEMBERS\",\n    GET_ALL_MEMBERS_ERROR:\"GET_ALL_MEMBERS_ERROR\",\n    INVITATION_SUCCESS: \"INVITATION_SUCCESS\",\n    INVITATION_ERROR: \"INVITATION_ERROR\",\n    GET_MEMBER_STATUS:\"GET_MEMBER_STATUS\",\n    GET_MEMBER_STATUS_ERROR: \"GET_MEMBER_STATUS_ERROR\",\n    REMOVE_MEMBER_FROM_PROJECT:\"REMOVE_MEMBER_FROM_PROJECT\",\n    REMOVE_MEMBER_FROM_PROJECT_ERROR:\"REMOVE_MEMBER_FROM_PROJECT_ERROR\",\n    SET_MEMBER_ADMIN : \"SET_MEMBER_ADMIN\",\n    GET_ACTIVITY:\"GET_ACTIVITY\",\n    GET_ACTIVITY_ERROR: \"GET_ACTIVITY_ERROR\",\n    MEMBER_HAS_PROJECT:\"MEMBER_HAS_PROJECT\",\n    MEMBER_HAS_PROJECT_ERROR:\"MEMBER_HAS_PROJECT_ERROR\",\n    LOAD: \"LOAD\",\n    GET_ALL_PERMISSIONS: \"GET_ALL_PERMISSIONS\",\n    GET_ALL_PERMISSIONS_ERROR: \"GET_ALL_PERMISSIONS_ERROR\",\n    UPDATE_PERMISSION_MEMBER: \"UPDATE_PERMISSION_MEMBER\",\n    UPDATE_PERMISSION_MEMBER_ERROR: \"UPDATE_PERMISSION_MEMBER_ERROR\",\n    UPDATE_PROJECT_INFO:\"UPDATE_PROJECT_INFO\"\n}\n\n/** Find all list of a project\n * Get all list with cards of a project\n * @param idProject project id to search lists for\n */\nfunction findAllLists (idProject) {\n    return dispatch => {\n        dispatch({ type: labels.LOAD_PROJECT })\n        const body ={\n            projectId: idProject\n        }\n        _service.Project.getAllWithCards(body)\n        .then(res => {\n            dispatch({\n                type: labels.GET_ALL_LISTS,\n                payload: res\n            });\n        })\n    }\n}\n\n/**Update store when receiving lists from socket\n * @param lists lists received from socket event\n */\nfunction loadLists(lists){\n    return dispatch => {\n        dispatch({\n            type: labels.GET_ALL_LISTS,\n            payload: lists\n        });\n    }\n}\n\n/**Update store when receiving new info from socket\n * @param projectInfo received from socket event\n */\nfunction loadProjectInfo(projectInfo){\n    return dispatch => {\n        dispatch({\n            type: labels.UPDATE_PROJECT_INFO,\n            payload: projectInfo\n        });\n    }\n}\n\n/**Find all member of a project\n * @param projectId project Id\n */\nfunction findAllMembers (projectId) {\n    return dispatch => {\n        _service.Project.getAllMembers({ projectId: projectId })\n            .then(res => {\n                dispatch({\n                    type: labels.GET_ALL_MEMBERS,\n                    payload: res\n                });\n            })\n            .catch((err) => {\n                dispatch({\n                    type: labels.GET_ALL_MEMBERS_ERROR,\n                    payload: err\n                });\n            });\n    }\n}\n\n/**Create a new list\n * @param listTitle new list title\n * @param projectId project Id of the list\n * @param member member that has created the list\n */\nfunction createList (listTitle, projectId, listFather, member) {\n\n    const body = {\n        listTitle: listTitle,\n        listStatus : 0,\n        projectId: projectId,\n        listFather:listFather\n    }\n        return dispatch => {\n            _service.List.create(body)\n            .then(res => { \n                dispatch({\n                    type: labels.CREATE_LIST,\n                    payload: res\n                });\n                _service.Action.createActivityForAllMembers({\n                    actionType: 0,\n                    actionTitle: \"List was created\",\n                    actionDescription: member.memberPseudo + \" has create the list '\" + listTitle + \"'.\",\n                    memberId: member.memberId,\n                    projectId: projectId,\n                    actionDateCreation: moment(),\n                    mhaStatus: 0\n                })\n            })\n            .catch((err) => {\n                console.log(err)\n                dispatch({\n                    type: labels.CREATE_LIST_ERROR,\n                    payload: err\n                });\n            });\n    }\n}\n\n/** Update a list\n * @param listId list Id\n * @param fatherListId list father id\n */\nfunction updateLists (listId,fatherListId) {\n    let body = {\n        listFather : fatherListId\n    }\n\n    return dispatch => {\n        _service.List.update(listId,body)\n            .then(res => {\n                dispatch({\n                    type: labels.UPDATE_LIST,\n                    payload: res\n                })\n            })\n            .catch((err) => {\n                dispatch({\n                    type: labels.UPDATE_LIST_ERROR,\n                    payload: err\n                })\n            });\n    }\n}\n\n/** Get all information about a project\n * @param projectId project Id\n */\nfunction getProjectInfo(projectId){\n    return dispatch => {\n        _service.Project.getOne(projectId)\n            .then(res => {\n                dispatch({\n                    type: labels.GET_PROJECT_INFO,\n                    payload: res\n                });\n            })\n            .catch((err) => {\n                dispatch({\n                    type: labels.GET_PROJECT_INFO_ERROR,\n                    payload: err\n                });\n            });\n    }\n}\n\n/**Update Project Title\n * @param newProjectTitle new title of the project\n * @param projectId project Id \n */\nfunction updateProjectTitle(newProjectTitle, projectId){\n    const body = {\n        projectTitle : newProjectTitle\n    }\n    return dispatch => {\n        _service.Project.update(projectId,body)\n            .then(res => {\n                _service.Project.getOne(projectId)\n                    .then(res => {\n                        dispatch({\n                            type: labels.GET_PROJECT_INFO,\n                            payload: res\n                        });\n                    })\n                    .catch((err) => {\n                        dispatch({\n                            type: labels.GET_PROJECT_INFO_ERROR,\n                            payload: err\n                        });\n                    });\n            })\n            .catch((err) => {\n                dispatch({\n                    type: labels.GET_PROJECT_INFO_ERROR,\n                    payload: err\n                });\n            });\n    }\n}\n\n/** Update visibility of a project\n * @param visibilityValue status of visibility, 0 is public, 1 is private\n * @param projectId project id\n */\nfunction updateProjectVisibility(visibilityValue, projectId){\n    const body = {\n        projectVisibility : visibilityValue\n    }\n    return dispatch => {\n        _service.Project.update(projectId,body)\n            .then(res => {\n                _service.Project.getOne(projectId)\n                    .then(res => {\n                        dispatch({\n                            type: labels.GET_PROJECT_INFO,\n                            payload: res\n                        });\n                    })\n                    .catch((err) => {\n                        dispatch({\n                            type: labels.GET_PROJECT_INFO_ERROR,\n                            payload: err\n                        });\n                    });\n            })\n            .catch((err) => {\n                dispatch({\n                    type: labels.GET_PROJECT_INFO_ERROR,\n                    payload: err\n                });\n            });\n    }\n}\n\n/** Check if user is a project member\n * @param memberId member id\n * @param projectId project id\n */\nfunction getMemberHasProject(memberId, projectId){\n    const body = {\n        memberId : memberId,\n        projectId: projectId,\n        memberhasprojectStatus: 1        \n    }\n    return dispatch => {\n        _service.Project.getMemberHasProject(body)\n        .then(res => {\n            dispatch({\n                type: labels.MEMBER_HAS_PROJECT,\n                payload: res\n            });\n        })\n        .catch((err) => {\n            dispatch({\n                type: labels.MEMBER_HAS_PROJECT_ERROR,\n                payload: err\n            });\n        });\n    }\n\n\n}\n\n/** Send an invitation to a member for a specific project.\n * @param body Object that contains member id and project id\n */\nfunction sendInvitationProject(body){\n    return dispatch => {\n\n        dispatch({\n            type: labels.LOAD\n        });\n\n        let newMember = {\n            memberLastname: 'unknow',\n            memberFirstname: 'unknow',\n            memberPseudo: 'unknow',\n            memberStatus: 2,\n            memberEmail: body.memberEmail\n        }\n        _service.Member.createIfNotExist(newMember)\n            .then(member => {\n                body.memberId = member.memberId\n                body.memberhasprojectStatus = 0\n                body.projectIsFavorite = false\n\n                _service.Project.createAndSendInvitation(body)\n                    .then(res => {\n                        _service.Project.getAllMembers({ projectId: body.projectId })\n                            .then(res => {\n                                dispatch({\n                                    type: labels.GET_ALL_MEMBERS,\n                                    payload: res\n                                });\n                            })\n                            .catch((err) => {\n                                dispatch({\n                                    type: labels.GET_ALL_MEMBERS_ERROR,\n                                    payload: err\n                                });\n                            });\n                    })\n                    .catch((err) => {\n                        dispatch({\n                            type: labels.INVITATION_ERROR\n                        })\n                    });\n            })\n            .catch((err) => {\n                dispatch({\n                    type: labels.INVITATION_ERROR\n                })\n            });\n\n\n    }\n}\n\n/** Get the status of a member for a specific project (if he is admin or not)\n * @param projectId project Id\n * @param memberId member Id\n */\nfunction getMemberStatus(projectId, memberId){\n    return dispatch => {\n        _service.Project.getMemberStatus(({projectId: projectId, memberId: memberId}))\n        .then(res => {\n            dispatch({\n                type: labels.GET_MEMBER_STATUS,\n                payload: res.mhppState\n            });\n        })\n        .catch((err) => {\n            dispatch({\n                type: labels.GET_MEMBER_STATUS_ERROR,\n                payload: false\n            });\n        });\n    }\n}\n\n/** Remove a member from a project\n * @param query Contains member Id and project id\n */\nfunction removeMemberFromProject(query){\n    return dispatch => {\n        dispatch({\n            type: labels.LOAD\n        });\n        _service.Member.deleteInvitation(query)\n            .then(res => {\n                _service.Permission.deleteForMemberOnProject(query)\n                    .then(isDeleted => {\n                        dispatch({\n                            type: labels.REMOVE_MEMBER_FROM_PROJECT\n                        })\n                        dispatch({ type: labels.LOAD_PROJECT })\n                        const body ={\n                            projectId: query.projectId\n                        }\n                        _service.Project.getAllWithCards(body)\n                            .then(res => {\n                                dispatch({\n                                    type: labels.GET_ALL_LISTS,\n                                    payload: res\n                                });\n                            })\n                        _service.Project.getAllMembers({ projectId: query.projectId })\n                            .then(res => {\n                                dispatch({\n                                    type: labels.GET_ALL_MEMBERS,\n                                    payload: res\n                                });\n                            })\n                            .catch((err) => {\n                                dispatch({\n                                    type: labels.GET_ALL_MEMBERS_ERROR,\n                                    payload: err\n                                });\n                            });\n                    })\n                    .catch((err) => {\n                        dispatch({\n                            type: labels.REMOVE_MEMBER_FROM_PROJECT_ERROR\n                        })\n                    });\n            })\n            .catch((err) => {\n                dispatch({\n                    type: labels.REMOVE_MEMBER_FROM_PROJECT_ERROR\n                })\n            });\n    }\n}\n\n/** Get all activities related to a project (Limit 15)\n * @param projectId project Id\n */\nfunction getActivity(projectId){\n    return dispatch => {\n        _service.Project.getAllActions({ projectId: projectId })\n            .then(res => {\n                dispatch({\n                    type: labels.GET_ACTIVITY,\n                    payload: res\n                });\n            })\n            .catch(err => {\n                dispatch({\n                    type: labels.GET_ACTIVITY_ERROR\n                });\n            })\n    }\n}\n\n/**Get all labels related to a project\n */\nfunction getLabels(){\n    return dispatch => {\n        _service.Project.getLabels()\n            .then(res => {\n                dispatch({\n                    type: labels.GET_ALL_LABELS,\n                    payload: res\n                });\n            })\n            .catch((err) => {\n                dispatch(err)\n            });\n    }\n}\n\n/** Fetch all permissions of all members of a project\n * @param projectId project Id\n */\nfunction getAllPermissions (projectId) {\n    return dispatch => {\n        _service.Permission.getAllOnProject({ projectId: projectId })\n            .then(res => {\n                dispatch({\n                    type: labels.GET_ALL_PERMISSIONS,\n                    payload: res\n                });\n            })\n            .catch((err) => {\n                dispatch({\n                    type: labels.GET_ALL_PERMISSIONS_ERROR\n                });\n            });\n    }\n}\n\n/** Update permission of a member in a project (store and db permissions)\n * @param projectId project Id\n * @param memberId member Id\n * @param permissionId permission Id\n * @param mhppState \n * @param storeMembers\n */\nfunction updatePermissionMember (projectId, memberId, permissionId, mhppState, storeMembers) {\n    let query = {\n        projectId: projectId,\n        memberId: memberId,\n        permissionId: permissionId\n    }\n    let body = {\n        mhppState: mhppState\n    }\n    return dispatch => {\n        _service.Permission.updateOnProject(query, body)\n            .then(res => {\n                if (res) {\n                    dispatch({\n                        type: labels.UPDATE_PERMISSION_MEMBER,\n                        payload: storeMembers\n                    });\n                } else {\n                    dispatch({\n                        type: labels.UPDATE_PERMISSION_MEMBER_ERROR\n                    });\n                }\n            })\n            .catch((err) => {\n                dispatch({\n                    type: labels.UPDATE_PERMISSION_MEMBER_ERROR\n                });\n            });\n    }\n}\n\nexport const projectAction = {\n    labels,\n    findAllLists,\n    createList,\n    updateLists,\n    getProjectInfo,\n    updateProjectTitle,\n    findAllMembers,\n    updateProjectVisibility,\n    sendInvitationProject,\n    getMemberStatus,\n    removeMemberFromProject,\n    getActivity,\n    getLabels,\n    updatePermissionMember,\n    getMemberHasProject,\n    getAllPermissions,\n    loadLists,\n    loadProjectInfo\n}","import _service from '../services'\nimport moment from \"moment\";\n\nconst labels = {\n    GET_ALL_CARDS :\"GET_ALL_CARDS\",\n    GET_ALL_CARDS_ERROR:\"GET_ALL_CARDS_ERROR\",\n    CREATE_CARD:\"CREATE_CARD\",\n    UPDATE_LIST_TITLE:\"UPDATE_LIST_TITLE\",\n    UPDATE_LIST_TITLE_ERROR:\"UPDATE_LIST_TITLE_ERROR\",\n    DELETE_LIST:\"DELETE_LIST\",\n    DELETE_LIST_ERROR:\"DELETE_LIST_ERROR\",\n    UPDATE_CARD: \"UPDATE_CARD\",\n    UPDATE_CARD_ERROR:\"UPDATE_CARD_ERROR\",\n    UPDATE_LIST_STATUS: \"UPDATE_LIST_STATUS\",\n    UPDATE_LIST_STATUS_ERROR:\"UPDATE_LIST_STATUS_ERROR\",\n    UPDATE_POSITION_LISTS:\"UPDATE_POSITION_LISTS\",\n    LOAD_PROJECT:\"LOAD_PROJECT\",\n    RESTORE_CARD:\"RESTORE_CARD\",\n    RESTORE_CARD_ERROR:\"RESTORE_CARD_ERROR\",\n    UPDATE_DATE_CARD:\"UPDATE_DATE_CARD\",\n    UPDATE_DATE_CARD_ERROR:\"UPDATE_DATE_CARD_ERROR\",\n    UPDATE_DESCRIPTION_CARD:\"UPDATE_DESCRIPTION_CARD\",\n    UPDATE_DESCRIPTION_CARD_ERROR:\"UPDATE_DESCRIPTION_CARD_ERROR\",\n    UPDATE_TITLE_CARD:\"UPDATE_TITLE_CARD\",\n    UPDATE_TITLE_CARD_ERROR:\"UPDATE_TITLE_CARD_ERROR\",\n    CREATE_CARD_ERROR: \"CREATE_CARD_ERROR\"\n\n}\n\n/** Create a new card\n * @param cardTitle new card title\n * @param listId list id linked to the new card\n * @param projectId project id linked to the new card\n * @param member member that created the card\n * @param cardFather card father to keep card order\n */\nfunction createCard(cardTitle,listId,projectId, member, cardFather) {\n    console.log(cardFather)\n    const body = {\n        cardTitle: cardTitle,\n        cardStatus : 0,\n        listId: listId,\n        cardDescription: '',\n        cardFather: cardFather\n    }\n    return dispatch => {\n        dispatch({ type: labels.LOAD_PROJECT })\n        _service.Card.create(body)\n            .then(res => {\n                const card = {\n                    ...res,\n                    CardListFks : []\n                }\n                _service.Action.createActivityForAllMembers({\n                    actionType: 0,\n                    actionTitle: \"Card was created\",\n                    actionDescription: member.memberPseudo + \" has create the card '\" + cardTitle + \"'.\",\n                    memberId: member.memberId,\n                    projectId: projectId,\n                    actionDateCreation: moment(),\n                    mhaStatus: 0\n                })\n                dispatch({\n                    type: labels.CREATE_CARD,\n                    payload: card\n                });\n            })\n            .catch((err) => {\n                console.log(err)\n                dispatch({\n                    type: labels.CREATE_CARD_ERROR\n                })\n            });\n    }\n}\n\n/** Find all cards\n * \n */\nfunction findAllCards() {\n\n    return dispatch => {\n        _service.Card.getAll()\n            .then(res => {\n                dispatch({\n                    type: labels.GET_ALL_CARDS,\n                    payload: res\n                });\n            })\n            .catch((err) => {\n                dispatch({\n                    type: labels.GET_ALL_CARDS_ERROR\n                })\n            });\n    }\n}\n\n/** Update a card\n * @param cardId card Id\n * @param listId list Id\n * @param newLists newLists\n */\nfunction updateCard(cardId, listId, newLists){\n    const body={\n        listId : listId\n    }\n    return dispatch => {\n        _service.Card.update(cardId,body)\n            .then(res => {\n\n                dispatch({\n                    type: labels.UPDATE_CARD,\n                    payload: newLists\n                });\n            })\n            .catch((err) => {\n                dispatch({\n                    type: labels.UPDATE_CARD_ERROR\n                })\n            });\n    }\n}\n\n/** Update due date of a card\n * @param card updated card\n * @param body object with data to update\n */\nfunction updateDueDateCard(card, body){\n    return dispatch =>{\n        _service.Card.update(card.cardId, body)\n            .then(res =>{\n                    dispatch({\n                        type: labels.UPDATE_DATE_CARD,\n                        payload: {\n                            card : card,\n                            dueDate : body.cardDateTarget\n                        }\n                    });\n                }\n            ).catch(e => {\n            dispatch({\n                type: labels.UPDATE_DATE_CARD_ERROR\n            })\n        })\n    }\n\n}\n\n/** Update description of a card\n * @param card card to update\n * @param body Object that contains data to update with\n */\nfunction updateDescription(card, body){\n    return dispatch =>{\n        _service.Card.update(card.cardId, body)\n            .then(res =>{\n                    dispatch({\n                        type: labels.UPDATE_DESCRIPTION_CARD,\n                        payload: {\n                            card : card,\n                            description : body.cardDescription\n                        }\n                    });\n                }\n            ).catch(e => {\n            dispatch({\n                type: labels.UPDATE_DESCRIPTION_CARD_ERROR\n            })\n        })\n    }\n}\n\n/** Update card title\n * @param card card to update title\n * @param body Object that contains new title\n */\nfunction updateCardTitle(card, body){\n    return dispatch =>{\n        _service.Card.update(card.cardId, body)\n            .then(res =>{\n                    dispatch({\n                        type: labels.UPDATE_TITLE_CARD,\n                        payload: {\n                            card : card,\n                            title : body.cardTitle\n                        }\n                    });\n                }\n            ).catch(e => {\n            dispatch({\n                type: labels.UPDATE_TITLE_CARD_ERROR\n            })\n        })\n    }\n}\n\n\n/** Update list Title\n * @param newListTitle new list title\n * @param listId list Id\n */\nfunction updateListTitle(newListTitle, listId){\n    const body = {\n        listTitle : newListTitle,\n        listId : listId\n    }\n    const setDispacth = {\n        listTitle : newListTitle,\n        listId : listId,\n        newListTitle : newListTitle\n    }\n\n    return dispatch => {\n        _service.List.update(listId,body)\n            .then(res => {\n                dispatch({\n                    type: labels.UPDATE_LIST_TITLE,\n                    payload: setDispacth\n                });\n            })\n            .catch((err) => {\n                dispatch({\n                    type: labels.UPDATE_LIST_TITLE_ERROR,\n                });\n            });\n    }\n}\n\n/** Delete a list from a project\n * @param listId list id\n * @param projectId project id\n */\nfunction deleteList(listId, projectId) {\n\n\n    return dispatch => {\n        _service.List.delete(listId)\n            .then(res => {\n                dispatch({\n                    type: labels.DELETE_LIST,\n                    payload: listId\n                });\n            })\n            .catch((err) => {\n                dispatch({\n                    type: labels.DELETE_LIST_ERROR,\n                });\n            });\n    }\n}\n\n/** Update list status (archive)\n * @param listId list id\n * @param status status to update\n */\nfunction updateListStatus(listId, status){\n    const body ={\n        listId:listId,\n        listStatus:status\n    }\n    return dispatch => {\n        _service.List.update(listId,body)\n            .then(res => {\n                dispatch({\n                    type: labels.UPDATE_LIST_STATUS,\n                    payload: body\n                });\n            })\n            .catch((err) => {\n                dispatch({\n                    type: labels.UPDATE_LIST_STATUS_ERROR,\n                });\n            });\n    }\n}\n\n/** Update position of lists\n * @param newOrderedArray array of ordered list\n * @param listOrder order of lists\n */\nfunction updatePositionLists(newOrderedArray, listsOrder){\n    return dispatch => {\n        _service.List.updateListOrder(listsOrder)\n        dispatch({\n            type: labels.UPDATE_POSITION_LISTS,\n            payload: newOrderedArray\n        });\n    }\n}\n\n/** Restore a card from archived\n * @param card card to restore\n * @param body information to update\n */\nfunction restoreCard(card, body){\n    return dispatch => {\n        _service.Card.update(card.cardId,body)\n            .then(res => {\n\n                dispatch({\n                    type: labels.RESTORE_CARD,\n                    payload: card\n                });\n            })\n            .catch((err) => {\n                dispatch({\n                    type: labels.RESTORE_CARD_ERROR,\n                });\n            });\n    }\n}\n\n\nexport const listAction = {\n    labels,\n    createCard,\n    findAllCards,\n    updateCard,\n    updateListTitle,\n    deleteList,\n    updateListStatus,\n    updatePositionLists,\n    restoreCard,\n    updateDueDateCard,\n    updateDescription,\n    updateCardTitle\n}\n\n","import _service from \"../services\";\n\nconst labels = {\n    GET_CARD: 'GET_CARD',\n    GET_CARD_ERROR: 'GET_CARD_ERROR',\n    UPDATE_CARD: 'UPDATE_CARD',\n    UPDATE_POSITION_CARD : \"UPDATE_POSITION_CARD\",\n    ERROR_UPDATE_CARD : 'ERROR_UPDATE_CARD',\n    DELETE_CARD: 'DELETE_CARD',\n    DELETE_CARD_ERROR: 'DELETE_CARD_ERROR',\n    ADD_MEMBER_ON_CARD: \"ADD_MEMBER_ON_CARD\",\n    ADD_MEMBER_ON_CARD_ERROR: \"ADD_MEMBER_ON_CARD_ERROR\",\n    DELETE_MEMBER: \"DELETE_MEMBER\",\n    DELETE_MEMBER_ERROR: \"DELETE_MEMBER_ERROR\",\n    UPDATE_TASK: 'UPDATE_TASK',\n    UPDATE_TASK_ERROR: 'UPDATE_TASK_ERROR',\n    DELETE_TASK: 'DELETE_TASK',\n    DELETE_TASK_ERROR: 'DELETE_TASK_ERROR',\n    CREATE_TASK: 'CREATE_TASK',\n    CREATE_TASK_ERROR: 'CREATE_TASK_ERROR',\n    LOAD_CARD: \"LOAD_CARD\",\n    GET_ALL_LABEL: 'GET_ALL_LABEL',\n    GET_ALL_LABEL_ERROR:\"GET_ALL_LABEL_ERROR\",\n    CREATE_LINK_LABEL: 'CREATE_LINK_LABEL',\n    CREATE_LINK_LABEL_ERROR: 'CREATE_LINK_LABEL_ERROR',\n    DELETE_LINK_LABEL: 'CREATE_LINK_LABEL',\n    DELETE_LINK_LABEL_ERROR: 'CREATE_LINK_LABEL_ERROR',\n    LOAD_PROJECT: \"LOAD_PROJECT\",\n    ARCHIVE_CARD:\"ARCHIVE_CARD\",\n    FIND_ALL_MEMBERS_ON_CARD: \"FIND_ALL_MEMBERS_ON_CARD\",\n    FIND_ALL_MEMBERS_ON_CARD_ERROR: \"FIND_ALL_MEMBERS_ON_CARD_ERROR\",\n    FIND_ALL_COMMENTS_ON_CARD: 'FIND_ALL_COMMENTS_ON_CARD',\n    ADD_COMMENTS_ON_CARD: 'ADD_COMMENTS_ON_CARD'\n}\n\n/** Get a card\n * @param cardId card Id\n */\nfunction getCard(cardId) {\n    return dispatch => {\n        _service.Card.get({cardId: cardId})\n            .then(res => {\n                dispatch({\n                    type: labels.GET_CARD,\n                    payload: res\n                });\n            })\n            .catch((err) => {\n                dispatch({\n                    type: labels.GET_CARD_ERROR,\n                });\n            });\n    }\n}\n\n/** Get labels of a specific project\n * @param projectId  project id\n */\nfunction getLabels(projectId) {\n    return dispatch => {\n        _service.Label.getAll({ projectId: projectId })\n            .then(res => {\n                dispatch({\n                    type: labels.GET_ALL_LABEL,\n                    payload: res\n                });\n            })\n            .catch((err) => {\n                dispatch({\n                    type: labels.GET_ALL_LABEL_ERROR,\n                });\n            });\n    }\n}\n\n/**Update a card\n * @param card card to update\n * @param body object containing information to update with\n * @param listIndex index of the list containing this card\n * @param cardIndex index of the card in the list\n */\nfunction updatecard(card, body,listIndex, cardIndex) {\n\n\n    return dispatch => _service.Card.update(card.cardId, body)\n        .then(id => {\n            dispatch({\n                type : labels.ARCHIVE_CARD,\n                payload: {\n                    listIndex: listIndex,\n                    cardIndex: cardIndex\n                }\n            })\n        })\n        .catch (e => {\n            dispatch({\n                type: labels.ERROR_UPDATE_CARD,\n                errorMsg: 'impossible to execute this action'\n            })\n        })\n};\n\n/**Update a task\n * @param taskId task id\n * @param body Object containing updates\n */\nfunction updateTask(taskId, body) {\n    return dispatch => _service.Task.update({taskId: taskId}, body)\n        .then(isUpdated => {\n            if(isUpdated){\n                dispatch({\n                    type: labels.UPDATE_TASK\n                })\n            }else{\n                dispatch({\n                    type: labels.UPDATE_TASK_ERROR\n                })\n            }\n        })\n        .catch (e => {\n            dispatch({\n                type: labels.UPDATE_TASK_ERROR\n            })\n        })\n};\n\n/** Delete a task\n * @param taskId task Id\n * @param card card containing task\n */\nfunction deleteTask(taskId, card) {\n    return dispatch => _service.Task.delete({taskId: taskId})\n        .then(isDeleted => {\n            if(isDeleted){\n                dispatch({\n                    type: labels.DELETE_TASK,\n                    payload: card\n                })\n            }else{\n                dispatch({\n                    type: labels.DELETE_TASK_ERROR\n                })\n            }\n        })\n        .catch (e => {\n            dispatch({\n                type: labels.DELETE_TASK_ERROR\n            })\n        })\n};\n\n/**Delete a card\n * @param cardId card Id\n * @param listIndex list index that contains the card\n * @param cardIndex card index under the list\n */\nfunction deleteCard(cardId, listIndex, cardIndex) {\n    return dispatch => {\n        dispatch({ type: labels.LOAD_PROJECT })\n        _service.Card.delete({cardId: cardId})\n            .then(isDeleted => {\n                if(isDeleted){\n                    dispatch({\n                        type: labels.DELETE_CARD,\n                        payload: {\n                            listIndex: listIndex,\n                            cardIndex: cardIndex\n                        }\n                    })\n                }else{\n                    dispatch({\n                        type: labels.DELETE_CARD_ERROR\n                    })\n                }\n            })\n            .catch (e => {\n                dispatch({\n                    type: labels.DELETE_CARD_ERROR\n                })\n            })\n    }\n};\n\n/** Get all member affected to a card\n * @param cardId card Id\n * @param projectId project Id \n */\nfunction getMembersOnCard (cardId, projectId) {\n    return dispatch => {\n        dispatch({type: labels.LOAD_CARD})\n        _service.Card.findAllMembers({\n            cardId: cardId,\n            projectId: projectId,\n            memberhasprojectStatus: 1\n        })\n            .then(members => {\n                dispatch({\n                    type: labels.FIND_ALL_MEMBERS_ON_CARD,\n                    payload: {\n                        membersOnCard: members.membersOnCard,\n                        membersOffCard: members.membersOffCard\n                    }\n                })\n            })\n            .catch (e => {\n                dispatch({\n                    type: labels.FIND_ALL_MEMBERS_ON_CARD_ERROR\n                })\n            })\n    }\n}\n\n/** Add a member to a card\n * @param memberId\n * @param cardId\n * @param membersOnCard\n * @param membersOffCard\n * @param listIndex\n * @param cardIndex\n * @param member\n */\nfunction addMember(memberId, cardId, membersOnCard, membersOffCard, listIndex, cardIndex, member) {\n    let body = {\n        cardId: cardId,\n        memberId: memberId\n    }\n    return dispatch => {\n        dispatch({ type: labels.LOAD_CARD })\n\n        _service.Card.addMember(body)\n            .then(mhc => {\n                dispatch({\n                    type: labels.ADD_MEMBER_ON_CARD,\n                    payload: {\n                        membersOnCard: membersOnCard,\n                        membersOffCard: membersOffCard,\n                        newMember: member,\n                        cardIndex: cardIndex,\n                        listIndex: listIndex\n                    }\n                })\n            })\n            .catch (e => {\n                dispatch({\n                    type: labels.ADD_MEMBER_ON_CARD_ERROR\n                })\n            })\n    }\n};\n\n/** Remove a member from a card\n * @param memberId\n * @param cardId\n * @param membersOnCard\n * @param membersOffCard\n */\nfunction removeMember (memberId, cardId, membersOnCard, membersOffCard, listIndex, cardIndex, elementIndex) {\n\n    let query = {\n        cardId: cardId,\n        memberId: memberId\n    }\n    return dispatch => {\n        dispatch({ type: labels.LOAD_CARD })\n\n        _service.Card.removeMember(query)\n            .then(isDeleted => {\n                if (isDeleted) {\n                    dispatch({\n                        type: labels.DELETE_MEMBER,\n                        payload: {\n                            membersOnCard: membersOnCard,\n                            membersOffCard: membersOffCard,\n                            listIndex: listIndex,\n                            cardIndex: cardIndex,\n                            elementIndex: elementIndex\n                        }\n                    })\n                } else {\n                    dispatch({\n                        type: labels.DELETE_MEMBER_ERROR\n                    })\n                }\n            })\n            .catch (e => {\n                dispatch({\n                    type: labels.DELETE_MEMBER_ERROR\n                })\n            })\n    }\n};\n\n/**Create a new task\n * @param newTask new task name\n * @param card card that contains the task\n */\nfunction createTask(newTask, card) {\n    return dispatch => {\n        dispatch({\n            type: labels.LOAD_CARD\n        })\n        _service.Task.create(newTask)\n            .then(res => {\n                card.TaskCardFks.push(res)\n                dispatch({\n                    type: labels.CREATE_TASK,\n                    payload : card\n                })\n            }).catch (e => {\n            dispatch({\n                type: labels.CREATE_TASK_ERROR\n            })\n        })\n    }\n};\n\n/** Create label link with a card\n * @param query Object that contains cardId and labelId\n */\nfunction createLinkLabel(query) {\n    return dispatch => {\n        //{cardId: 1, labelId :1}\n        _service.Card.createLinkLabel(query)\n            .then(res => {\n                dispatch({\n                    type: labels.CREATE_LINK_LABEL\n                })\n            }).catch (e => {\n            dispatch({\n                type: labels.CREATE_LINK_LABEL_ERROR\n            })\n        })\n    }\n};\n\n/** Delete a label link with a card\n * @param query Object that contains cardId and labelId\n */\nfunction deleteLinkLabel(query) {\n    return dispatch => _service.Card.deleteLinkLabel(query)\n        .then(isDeleted => {\n            if (isDeleted) {\n                dispatch({\n                    type: labels.DELETE_LINK_LABEL,\n                })\n            } else {\n                dispatch({\n                    type: labels.DELETE_LINK_LABEL_ERROR\n                })\n            }\n        })\n        .catch (e => {\n            dispatch({\n                type: labels.DELETE_LINK_LABEL_ERROR\n            })\n        })\n};\n\n/** Find all comment of a card\n * @param cardId card Id\n */\nfunction findAllComments(cardId) {\n    return dispatch => _service.Comments.getAllComments(cardId).then(comments => dispatch({\n        type: labels.FIND_ALL_COMMENTS_ON_CARD,\n        payload: comments\n    }))\n}\n\n/** Add comments to a card\n * @param cardId card Id\n * @param memberId member id\n * @param text comment text\n */\nfunction addComments (cardId, memberId, text) {\n    return dispatch => _service.Comments.addComments().then(comment => {\n        // TODO trigger notification\n        dispatch({\n            type: labels.ADD_COMMENTS_ON_CARD,\n            payload: comment\n        })\n    })\n}\n\n/**Update position of cards\n * @param cards an array of cards\n */\nfunction updatePositionCard (cards) {\n    return dispatch => {\n        _service.Card.updateCardOrder(cards)\n            .then(res => {\n                dispatch({\n                    type: labels.UPDATE_POSITION_CARD\n                })\n            })\n    }\n}\n\nexport const cardAction = {\n    labels,\n    getCard,\n    updatecard,\n    updateTask,\n    deleteCard,\n    deleteTask,\n    createTask,\n    getLabels,\n    addMember,\n    removeMember,\n    createLinkLabel,\n    deleteLinkLabel,\n    getMembersOnCard,\n    findAllComments,\n    addComments,\n    updatePositionCard\n}","import _service from '../services'\n\nconst labels = {\n    SEARCH_PROJECTS :\"SEARCH_PROJECTS\",\n    SEARCH_PROJECTS_ERROR :\"SEARCH_PROJECTS_ERROR\",\n    SEARCH_CARDS :\"SEARCH_CARDS\",\n    SEARCH_CARDS_ERROR :\"SEARCH_CARDS_ERROR\",\n    SEARCH_LISTS :\"SEARCH_LISTS\",\n    SEARCH_LISTS_ERROR :\"SEARCH_LISTS_ERROR\",\n    SEARCH_RESET: \"SEARCH_RESET\"\n}\n\n/** Search for projects\n * @param value name to search\n * @param memberId member id\n */\nfunction searchProjects (value, memberId) {\n    return dispatch => {\n        if (value !== '') {\n            _service.Project.searchbarProjects({str: value, memberId: memberId})\n                .then(res => {\n                    dispatch({\n                        type: labels.SEARCH_PROJECTS,\n                        payload: res\n                    });\n                })\n                .catch((err) => {\n                    dispatch({\n                        type: labels.SEARCH_PROJECTS_ERROR\n                    });\n                });\n        } else {\n            dispatch({\n                type: labels.SEARCH_PROJECTS,\n                payload: []\n            });\n        }\n    }\n}\n\n/** Search for lists\n * @param value name to search\n * @param memberId member id\n */\nfunction searchLists (value, memberId) {\n    return dispatch => {\n        if (value !== '') {\n            _service.List.searchbarLists({str: value, memberId: memberId})\n                .then(res => {\n                    dispatch({\n                        type: labels.SEARCH_LISTS,\n                        payload: res\n                    });\n                })\n                .catch((err) => {\n                    dispatch({\n                        type: labels.SEARCH_LISTS_ERROR\n                    });\n                });\n        } else {\n            dispatch({\n                type: labels.SEARCH_LISTS,\n                payload: []\n            });\n        }\n    }\n}\n\n/** Search for cards\n * @param value name to search\n * @param memberId member id \n */\nfunction searchCards (value, memberId) {\n    return dispatch => {\n        if (value !== '') {\n            _service.Card.searchbarCards({str: value, memberId: memberId})\n                .then(res => {\n                    dispatch({\n                        type: labels.SEARCH_CARDS,\n                        payload: res\n                    });\n                })\n                .catch((err) => {\n                    dispatch({\n                        type: labels.SEARCH_CARDS_ERROR\n                    });\n                });\n        } else {\n            dispatch({\n                type: labels.SEARCH_CARDS,\n                payload: []\n            });\n        }\n    }\n}\n\nfunction resetSearchArrays () {\n    return dispatch => {\n        dispatch({\n            type: labels.SEARCH_RESET\n        });\n    }\n}\n\nexport const searchbarAction = {\n    labels,\n    searchProjects,\n    searchLists,\n    searchCards,\n    resetSearchArrays\n}\n\n","import _service from '../services'\nimport _helper from '../helpers'\n\nconst labels = {\n    MEMBER_EXIST: 'MEMBER_EXIST',\n    MEMBER_NOT_EXIST: 'MEMBER_NOT_EXIST',\n    DECRYPT_ERROR: 'DECRYPT_ERROR',\n    INVITATION_REPLY: 'INVITATION_REPLY',\n    INVITATION_REPLY_ERROR: 'INVITATION_REPLY_ERROR'\n}\n\n/** Check if member exist in the database\n * @param memberToken member token\n */\nfunction isMemberExist (memberToken) {\n    return (dispatch) => {\n        _service.Member.decrpytInvitation(memberToken)\n            .then(res => {\n                if (res.isExist) {\n                    _service.Member.getInvitation({ projectId: res.projectId, memberId: res.memberId, memberhasprojectStatus: 0 })\n                        .then(memberProject => {\n                            if (memberProject) {\n                                dispatch({\n                                    type: labels.MEMBER_EXIST,\n                                    payload: {\n                                        member: memberProject.Member,\n                                        project: memberProject.Project,\n                                        isAccountValid: res.memberStatus === 1\n                                    }\n                                })\n                            } else {\n                                _helper.History.push('/home')\n                                dispatch({\n                                    type: labels.DECRYPT_ERROR\n                                })\n                            }\n                        })\n                        .catch((err) => {\n                           dispatch({\n                                type: labels.DECRYPT_ERROR\n                            })\n                        });\n                } else {\n                    dispatch({\n                        type: labels.MEMBER_NOT_EXIST,\n                        payload: {\n                            informations: res,\n                            isAccountExist: false,\n                            isAccountValid: false\n                        }\n                    })\n                }\n\n            })\n            .catch((err) => {\n                _helper.History.push('/home')\n                dispatch({\n                    type: labels.DECRYPT_ERROR\n                })\n            });\n    };\n}\n\n/** Reply to an invitation \n * @param accept\n * @param body\n * @param query\n * @param member\n */\nfunction replyToInvitation (accept, body, query, member) {\n    return (dispatch) => {\n        if (accept) {\n            _service.Member.updateInvitation(body, query)\n                .then(isUpdated => {\n                    if (isUpdated) {\n                        _service.Permission.createMemberProjectPermission(member.memberId, query.projectId, 3, true)\n                            .then(res => {\n                                dispatch({\n                                    type: labels.INVITATION_REPLY\n                                })\n                            })\n                        /*_service.Action.createActivityForAllMembers({\n                            actionType: 2,\n                            actionTitle: member.memberPseudo + ' has join the project',\n                            actionDescription: member.memberPseudo + ' has accept the invitation.',\n                            memberId: query.memberId,\n                            projectId: query.projectId,\n                            actionDateCreation: moment(),\n                            mhaStatus: 0\n                        })*/\n                        _helper.History.push('/home')\n                    } else {\n                        dispatch({\n                            type: labels.INVITATION_REPLY_ERROR\n                        })\n                    }\n\n                })\n                .catch((err) => {\n                    dispatch({\n                        type: labels.INVITATION_REPLY_ERROR\n                    })\n                });\n        } else {\n            _service.Member.deleteInvitation(query)\n                .then(isDeleted => {\n                    if (isDeleted) {\n                        dispatch({\n                            type: labels.INVITATION_REPLY\n                        })\n                        _helper.History.push('/home')\n                    } else {\n                        dispatch({\n                            type: labels.INVITATION_REPLY_ERROR\n                        })\n                    }\n\n                })\n                .catch((err) => {\n                    dispatch({\n                        type: labels.INVITATION_REPLY_ERROR\n                    })\n                });\n        }\n    }\n}\n\nexport const invitationAction = {\n    labels,\n    isMemberExist,\n    replyToInvitation\n}","const labels = {\n    CREATE_TEAM: 'CREATE_TEAM',\n    CREATE_TEAM_ERROR: 'CREATE_TEAM_ERROR'\n}\n\nfunction createTeam (memberToken) {\n\n}\n\nexport const teamAction = {\n    labels,\n    createTeam\n}","import _service from \"../services\";\nimport _helper from \"../helpers\";\nimport moment from \"moment\";\n\nconst labels = {\n    LOAD_DASHBOARD: \"LOAD_DASHBOARD\",\n    LOAD_ALL_PROJECTS_FOR_MEMBER: \"LOAD_ALL_PROJECTS_FOR_MEMBER\",\n    LOAD_ALL_PROJECTS_FOR_MEMBER_ERROR: \"LOAD_ALL_PROJECTS_FOR_MEMBER_ERROR\",\n    CREATE_PROJECT: \"CREATE_PROJECT\",\n    CREATE_PROJECT_ERROR: \"CREATE_PROJECT_ERROR\",\n    SET_PROJECT_FAVORITE: \"SET_PROJECT_FAVORITE\",\n    SET_PROJECT_FAVORITE_ERROR: \"SET_PROJECT_FAVORITE_ERROR\"\n}\n\nfunction findAllProjectsMember (memberId) {\n    let query = {\n        memberId: memberId,\n        memberhasprojectStatus: 1\n    }\n    return dispatch => {\n        dispatch({ type: labels.LOAD_DASHBOARD })\n        _service.Project.getAllProjectsForMember(query)\n            .then(res => {\n                dispatch({\n                    type: labels.LOAD_ALL_PROJECTS_FOR_MEMBER,\n                    payload: res\n                });\n            })\n            .catch((err) => {\n                dispatch({\n                    type: labels.LOAD_ALL_PROJECTS_FOR_MEMBER_ERROR,\n                });\n            });\n    }\n}\n\nfunction createProject (memberId, projectTitle, projectVisibility, member) {\n    let body = {\n        projectTitle: projectTitle,\n        projectVisibility: projectVisibility,\n        projectStatus: 0\n    }\n    return dispatch => {\n        dispatch({ type: labels.LOAD_DASHBOARD })\n        _service.Project.createProjectFix(body)\n            .then(project => {\n                body = {\n                    projectId: project.projectId,\n                    memberId: memberId,\n                    memberhasprojectStatus: 1,\n                    projectIsFavorite: false\n                }\n                _service.Project.createProjectForMember(body)\n                    .then(mhp => {\n                        /** Let's create permission */\n                        let permissionId = 3\n                        let mhppState = true\n                        _service.Permission\n                            .createMemberProjectPermission(memberId, project.projectId, permissionId, mhppState)\n                            .then(permission => {\n\n                                _service.Action.createActivityForAllMembers({\n                                    actionType: 0,\n                                    actionTitle: \"Project was created\",\n                                    actionDescription: member.memberPseudo + \" has create the project '\" + projectTitle + \"'.\",\n                                    memberId: memberId,\n                                    projectId: project.projectId,\n                                    actionDateCreation: moment(),\n                                    mhaStatus: 0\n                                })\n                                    .then(res => {\n                                        dispatch({\n                                            type: labels.CREATE_PROJECT,\n                                            payload: {\n                                                project: {\n                                                    Project: project\n                                                },\n                                                contributors: 1\n                                            }\n                                        })\n                                        console.log(project.projectId)\n                                        _helper.History.push('/project/' + project.projectId)\n                                    })\n                                    .catch((err) => {\n                                        console.log(err)\n                                        dispatch({\n                                            type: labels.CREATE_PROJECT_ERROR,\n                                        });\n                                    });\n\n\n                            })\n                    })\n                    .catch((err) => {\n                        console.log(err)\n\n                        dispatch({\n                            type: labels.CREATE_PROJECT_ERROR,\n                        });\n                    });\n            })\n            .catch((err) => {\n                console.log(err)\n\n                dispatch({\n                    type: labels.CREATE_PROJECT_ERROR,\n                });\n            });\n    }\n}\n\nfunction setAsProjectFavorite (memberId, projectId, projectIsFavorite, index) {\n    let query = {\n        memberId: memberId,\n        projectId: projectId\n    }\n    let body = {\n        projectIsFavorite: projectIsFavorite\n    }\n    return dispatch => {\n        _service.Project.updateFix(query, body)\n            .then(res => {\n                dispatch({\n                    type: labels.SET_PROJECT_FAVORITE,\n                    payload: {\n                        projectIsFavorite: projectIsFavorite,\n                        index: index\n                    }\n                });\n            })\n            .catch((err) => {\n                dispatch({\n                    type: labels.SET_PROJECT_FAVORITE_ERROR,\n                });\n            });\n    }\n}\n\nexport const dashboardFixAction = {\n    labels,\n    findAllProjectsMember,\n    createProject,\n    setAsProjectFavorite\n}","import { dashboardAction } from './Dashboard.action';\nimport { signinAction } from './Signin.action';\nimport { signupAction } from './Signup.action';\nimport { navbarAction } from './Navbar.action';\nimport { notificationAction } from './Notification.action';\nimport { profileAction } from './Profile.action';\nimport { projectAction} from './Project.action';\nimport { listAction} from './List.action';\nimport { cardAction} from \"./Card.action\";\nimport { searchbarAction } from \"./Searchbar.action\";\nimport { invitationAction } from \"./Invitation.action\";\nimport { memberAction } from \"./Member.action\";\nimport { teamAction } from \"./Team.action\";\nimport { dashboardFixAction } from './DashboardFix.action';\n\nconst _action = {\n    dashboardAction,\n    signinAction,\n    signupAction,\n    navbarAction,\n    notificationAction,\n    profileAction,\n    projectAction,\n    listAction,\n    cardAction,\n    searchbarAction,\n    invitationAction,\n    memberAction,\n    teamAction,\n    dashboardFixAction\n}\n\nexport default _action","const labels = {\n\n}\n\nfunction searchMember(search_word) {\n    // todo search a member to add him\n}\n\nexport const memberAction = {\n    labels,\n    searchMember\n\n}","import _action from '../actions';\n\nconst labels = _action.signinAction.labels\nconst labelsNavbar = _action.navbarAction.labels\nconst labelsProfile = _action.profileAction.labels\n\n\nconst initialState = {\n    isLoading: true,\n    isPasswordReset: false,\n    member: {\n        memberId: -1,\n        memberFirstname: 'unknow',\n        memberLastname: 'unknow',\n        memberPseudo: 'unknow',\n        memberEmail: 'unknow@gmail.com'\n    }\n}\n\nexport function signin (state = initialState, action){\n    switch (action.type) {\n        case labels.LOGIN:\n            return {\n                ...state,\n                member: action.payload.member,\n                isLogged: true,\n                isLoading: false\n            };\n\n        case labels.ERROR:\n            return {\n                ...state,\n                msgError: action.payload,\n                isLogged: false\n            }\n\n        case labels.IS_LOGGED:\n            return {\n                ...state,\n                member: action.payload.member,\n                isLogged: action.payload.isLogged,\n                isLoading: false\n            }\n\n        case labels.IS_NOT_LOGGED:\n            return {\n                ...state,\n                member: {},\n                isLogged: action.payload.isLogged,\n                isLoading: false\n            }\n\n        case labelsNavbar.LOG_OFF:\n            return {\n                ...state,\n                isLogged: false,\n                member: {},\n                isLoading: false\n            }\n\n        case labelsProfile.UPDATE_MEMBER:\n            return {\n                ...state,\n                member: action.payload.member,\n            }\n\n        case labels.NEW_PASSWORD_SENT:\n            return {\n                ...state,\n                isPasswordReset: true,\n                resetPasswordMsg: 'New password sent.'\n            }\n\n        case labels.NEW_PASSWORD_FAILED:\n            return {\n                ...state,\n                isPasswordReset: true,\n                resetPasswordMsg: 'No email adress found.'\n            }\n\n        case labels.RESET_FIELD:\n            return {\n                ...state,\n                isPasswordReset: false,\n                resetPasswordMsg: ''\n            }\n\n        default:\n            return state\n    }\n}\n","import _action from '../actions';\n\nconst labels = _action.signupAction.labels\n\n\nconst initialState = {\n    isAccountValidNow: false,\n    msgError: ['', ''],\n    isInvitation: false,\n    isLoading: false\n}\n\nexport function signup (state = initialState, action){\n\n    switch (action.type) {\n        case labels.LOAD_SIGNUP:\n            return {\n                ...state,\n                isLoading: true\n            }\n\n        case labels.LOAD_INVITATION:\n            return {\n                ...state,\n                isLoading: true\n            }\n\n        case labels.SIGN_UP:\n            return {\n                ...state,\n                isLoading: false,\n                msgError: ['', '']\n            };\n\n        case labels.SIGN_UP_ERROR:\n            return {\n                ...state,\n                isLoading: false,\n                msgError: action.payload\n            }\n\n        case labels.VALIDATE_ACCOUNT_TOKEN:\n            return {\n                ...state,\n                isAccountValidNow: true\n            }\n\n        case labels.VALIDATE_ACCOUNT_TOKEN_ERROR:\n            return {\n                ...state,\n                isAccountValidNow: false\n            }\n\n        default:\n            return state\n    }\n}\n","import { navbarAction } from '../actions/Navbar.action';\nimport { notificationAction } from '../actions/Notification.action';\n\nconst labels = navbarAction.labels;\nconst notificationLabels = notificationAction.labels\n\nconst initialState = {\n    notifications: [],\n    notificationsUnread: 0\n};\n\nexport function navbar (state = initialState, action) {\n    switch (action.type) {\n        case labels.GET_ALL_NOTIFICATIONS:\n            return {\n                ...state,\n                notifications: action.payload.notifications,\n                notificationsUnread: action.payload.notificationsUnread,\n            };\n\n        case labels.GET_ALL_NOTIFICATIONS_ERROR:\n            return state;\n\n        case labels.UPDATE_NOTIFICATION:\n            return {\n                ...state,\n                notifications: action.payload.notifications,\n                notificationsUnread: action.payload.notificationsUnread\n            };\n\n        case notificationLabels.FILTER_ONLY_UNREAD:\n            return {\n                ...state,\n                notifications: action.payload.notifications,\n                notificationsUnarchived: action.payload.notificationsUnarchived\n            };\n\n        case notificationLabels.DISABLED_FILTER:\n            return {\n                ...state,\n                notifications: action.payload.notifications,\n                notificationsUnarchived: action.payload.notificationsUnarchived\n            };\n\n        default:\n            return state\n    }\n};\n","import { profileAction } from '../actions/Profile.action';\n\nconst labels = profileAction.labels\n\nconst initialState = {\n    updatePasswordMsg: '',\n    isPasswordUpdated: false,\n    isPasswordError: false,\n    isLoading: false\n};\n\nexport function profile (state = initialState, action) {\n    switch (action.type) {\n        case labels.LOAD_PROFILE_PICTURE:\n            return { ...state,\n                isLoading: true\n            };\n\n        case labels.UPDATE_MEMBER:\n            return { ...state,\n                updatePasswordMsg: action.payload.updatePasswordMsg,\n                isPasswordUpdated: true,\n                isPasswordError: false,\n                isLoading: false\n            };\n\n        case labels.UPDATE_PASSWORD:\n            return { ...state,\n                updatePasswordMsg: action.payload.updatePasswordMsg,\n                isPasswordUpdated: true,\n                isPasswordError: false\n            };\n\n        case labels.UPDATE_PASSWORD_ERROR:\n            return {\n                ...state,\n                updatePasswordMsg: action.payload.updatePasswordMsg,\n                isPasswordUpdated: false,\n                isPasswordError: true\n            };\n\n        default:\n            return state\n    }\n};\n","/**SOCKET IO CONFIG\n * Define url from where to listen and emit\n */\n\nimport io from \"socket.io-client\"\n\nconst socket = io('https://prello-ig.herokuapp.com')\n\nexport default socket\n\n","import { projectAction } from '../actions/Project.action';\nimport { listAction } from '../actions/List.action';\nimport { cardAction } from '../actions/Card.action';\nimport socket from '../helpers/SocketIo.helper'\n\nconst projectLabels = projectAction.labels\nconst listLabels = listAction.labels\nconst cardLabels = cardAction.labels\n\nconst initialState = {\n    lists: [],\n    members: [],\n    isLoading: false,\n    activities: [],\n    permissions: [],\n    maj: ''\n};\n\nexport function project (state = initialState, action) {\n   \n    switch (action.type) {\n        case projectLabels.LOAD:\n            return {\n                ...state,\n                isLoading: true\n            };\n\n        case projectLabels.LOAD_PROJECT:\n            return {\n                ...state,\n                isLoading: true\n            };\n\n        case cardLabels.LOAD_PROJECT:\n            return {\n                ...state,\n                isLoading: true\n            };\n\n        case projectLabels.GET_ALL_LISTS:\n\n            return {\n                ...state,\n                lists:action.payload,\n                isLoading: false\n            };\n\n        case projectLabels.CREATE_LIST:\n            let newList = action.payload\n            newList.CardListFks = []\n            let lists = [...state.lists,newList]\n             \n            socket.emit(\"updateLists\", {projectId:lists[0].projectId,lists:lists})\n            return {\n                ...state,\n                lists \n            };\n\n        case projectLabels.CREATE_LIST_ERROR:\n            return {\n                ...state,\n                isLoading: false\n            };\n\n        case listLabels.CREATE_CARD:\n            let listWithCard = Array.from(state.lists)\n            let findList = listWithCard.find(list => list.listId === action.payload.listId)\n            let findListIndex = listWithCard.findIndex(list => list.listId === action.payload.listId)\n            let notarchivedCardsCreate = findList.CardListFks.filter(card => card.cardStatus === 0)\n            let archivedCardsCreate = findList.CardListFks.filter(card => card.cardStatus === 1)\n            let newCreatedCard = action.payload\n            newCreatedCard.ActionCardFks = [] \n            newCreatedCard.AttachmentCardFks = [] \n            newCreatedCard.HaslabelCardFks = [] \n            newCreatedCard.MemberhascardCardFks = [] \n            newCreatedCard.TaskCardFks = [] \n            \n            notarchivedCardsCreate.push(action.payload)\n            findList.CardListFks = notarchivedCardsCreate.concat(archivedCardsCreate)\n            listWithCard.splice(findListIndex,1)\n            listWithCard.splice(findListIndex,0,findList)\n            socket.emit(\"updateLists\", {projectId:listWithCard[0].projectId,lists:listWithCard})\n            return {\n                ...state,\n                lists : listWithCard,\n                isLoading:false\n            };\n\n        case cardLabels.ADD_MEMBER_ON_CARD:\n            let newMember = action.payload.newMember\n            let listIndex = action.payload.listIndex\n            let cardIndexx = action.payload.cardIndex\n            let listsCards = Array.from(state.lists)\n\n            let element = {Member: newMember}\n\n            listsCards[listIndex].CardListFks[cardIndexx].MemberhascardCardFks.push(element)\n            socket.emit(\"updateLists\", {projectId:listsCards[0].projectId,lists:listsCards})\n\n            let maj2 = state.maj\n            if (maj2 === '') maj2 = ' '\n            else maj2 = ''\n            return {\n                ...state,\n                lists: listsCards,\n                maj: maj2\n            };\n\n        case cardLabels.DELETE_MEMBER:\n            let listIndex1 = action.payload.listIndex\n            let cardIndex1 = action.payload.cardIndex\n            let elementIndex = action.payload.elementIndex\n\n            let listsCards1 = Array.from(state.lists)\n\n            listsCards1[listIndex1].CardListFks[cardIndex1].MemberhascardCardFks.splice(elementIndex, 1)\n            socket.emit(\"updateLists\", {projectId:listsCards1[0].projectId,lists:listsCards1})\n\n            let maj3 = state.maj\n            if (maj3 === '') maj3 = ' '\n            else maj3 = ''\n\n            return {\n                ...state,\n                lists: listsCards1,\n                maj: maj3\n            };\n\n        case cardLabels.CREATE_LINK_LABEL:\n            let maj = state.maj\n            if (maj === '') maj = ' '\n            else maj = ''\n            return {\n                ...state,\n                maj: maj\n            }\n\n        case cardLabels.DELETE_LINK_LABEL:\n            let maj1 = state.maj\n            if (maj1 === '') maj1 = ' '\n            else maj1 = ''\n            return {\n                ...state,\n                maj: maj1\n            }\n\n        case listLabels.UPDATE_CARD:   \n            socket.emit(\"updateLists\", {projectId:action.payload[0].projectId,lists:action.payload})\n            return {\n                ...state,\n                lists : action.payload\n            }; \n        case listLabels.GET_ALL_CARDS:\n            return {\n                ...state,\n                cards: action.payload,\n            }; \n        case listLabels.UPDATE_LIST_TITLE:\n            let updateList  = state.lists.find(list => list.listId === action.payload.listId)\n            let updateListIndex =  state.lists.findIndex(list => list.listId === action.payload.listId)\n            let newListTitle = {...updateList, listTitle:action.payload.newListTitle}\n            let allList = Array.from(state.lists)\n            allList.splice(updateListIndex,1)\n            allList.splice(updateListIndex,0,newListTitle)\n            socket.emit(\"updateLists\", {projectId:allList[0].projectId,lists:allList})\n            return {\n                ...state,\n                lists: allList\n            };\n        case listLabels.UPDATE_LIST_STATUS:\n            let updateListStatus  = state.lists.find(list => list.listId === action.payload.listId)\n            let updateListStatusIndex =  state.lists.findIndex(list => list.listId === action.payload.listId)\n            let newListStatus = {...updateListStatus, listStatus:action.payload.listStatus}\n            let newLists = Array.from(state.lists)\n            newLists.splice(updateListStatusIndex,1)\n            newLists.splice(updateListStatusIndex,0,newListStatus)\n            socket.emit(\"updateLists\", {projectId:newLists[0].projectId,lists:newLists})\n            return {\n                ...state,\n                lists: newLists\n            };\n        case listLabels.DELETE_LIST:\n\n        const deletedListIndex = state.lists.findIndex(list => list.listId === action.payload )\n        const projectId = state.lists.find(list => list.listId === action.payload ).projectId\n        let newlists = Array.from(state.lists)\n        newlists.splice(deletedListIndex,1)\n        socket.emit(\"updateLists\", {projectId:projectId,lists:newlists})    \n            return {\n                ...state,\n                lists: newlists,\n            };\n        case projectLabels.GET_PROJECT_INFO:\n        socket.emit(\"updateProject\", {projectId:action.payload[0].projectId,info:action.payload[0]})  \n            return {\n                ...state,\n                projectInfo: action.payload[0]\n            };\n        case projectLabels.UPDATE_PROJECT_INFO:\n        return {\n            ...state,\n            projectInfo: action.payload\n        };\n        case projectLabels.GET_ALL_MEMBERS:\n            return {\n                ...state,\n                members: action.payload,\n                isLoading: false\n            };\n        //TODO\n        case projectLabels.SEND_INVITATION:\n            return {\n                ...state\n            };\n        case projectLabels.GET_MEMBER_STATUS:\n            return {\n                ...state,\n                isAdmin : action.payload\n            };\n        //TODO\n        case projectLabels.REMOVE_MEMBER_FROM_PROJECT:\n            return {\n                ...state,\n                maj: ''\n            };\n        //TODO\n        case projectLabels.SET_MEMBER_ADMIN:\n            return {\n                ...state,\n            };\n        //TODO\n        case projectLabels.GET_ACTIVITY:\n            return {\n                ...state,\n                activities: action.payload\n            };\n\n        case projectLabels.GET_ACTIVITY_ERROR:\n            return {\n                ...state,\n            };\n\n        case projectLabels.GET_ALL_LABELS:\n            return {\n                 ...state,\n            };\n\n        case projectLabels.INVITATION_SUCCESS:\n            return {\n                ...state,\n                isLoading: false\n            };\n\n        case projectLabels.INVITATION_ERROR || projectLabels.GET_ALL_PERMISSIONS_ERROR || projectLabels.UPDATE_PERMISSION_MEMBER_ERROR:\n            return {\n                ...state,\n                isLoading: false\n            };\n\n        case projectLabels.GET_ALL_PERMISSIONS:\n            return {\n                ...state,\n                permissions: action.payload,\n                isLoading: false\n            };\n        case projectLabels.REMOVE_MEMBER_FROM_PROJECT_ERROR:\n                return {\n                    ...state,\n                    isLoading: false\n                };\n\n        case projectLabels.MEMBER_HAS_PROJECT:\n            return {\n                 ...state,\n                 loggedHasProject : action.payload\n            };\n\n        case projectLabels.UPDATE_PERMISSION_MEMBER:\n            return {\n                ...state,\n                members : action.payload\n            };\n        case listLabels.UPDATE_POSITION_LISTS:\n            socket.emit(\"updateLists\", {projectId:action.payload[0].projectId,lists:action.payload})\n            return {\n                ...state,\n                lists : action.payload\n            };\n\n        case cardLabels.DELETE_CARD:\n\n            let updatedLists = Array.from(state.lists)\n            updatedLists[action.payload.listIndex].CardListFks.splice(action.payload.cardIndex, 1)\n            socket.emit(\"updateLists\", {projectId:updatedLists[0].projectId,lists:updatedLists}) \n            return {\n                ...state,\n                lists : updatedLists,\n                isLoading: false\n            };\n       case cardLabels.ARCHIVE_CARD:\n            //Copy array of list\n            let archivedCards = Array.from(state.lists)\n            // modify card status\n            archivedCards[action.payload.listIndex].CardListFks[action.payload.cardIndex].cardStatus = 1\n            // reorder archived and not archived card of the updated list in order to correspond to good index\n            let notarchivedCardsArray = archivedCards[action.payload.listIndex].CardListFks.filter(card => card.cardStatus === 0)\n            let archivedCardsArray = archivedCards[action.payload.listIndex].CardListFks.filter(card => card.cardStatus === 1)\n            //concat both lists\n            archivedCards[action.payload.listIndex].CardListFks = notarchivedCardsArray.concat(archivedCardsArray)\n            socket.emit(\"updateLists\", {projectId:archivedCards[0].projectId,lists:archivedCards}) \n            return {\n                ...state,\n                lists : archivedCards,\n            };\n            case listLabels.RESTORE_CARD:\n            //Copy array of list\n            let arrayOfList = Array.from(state.lists)\n\n            //Find index of the list \n            let listWithCardIndex = arrayOfList.findIndex(list => list.listId === action.payload.listId)\n            let cardIndex = arrayOfList[listWithCardIndex].CardListFks.findIndex(card => card.cardId === action.payload.cardId)\n\n            // modify card status\n            arrayOfList[listWithCardIndex].CardListFks[cardIndex].cardStatus = 0\n            // reorder archived and not archived card of the updated list in order to correspond to good index\n            let notarchivedCards = arrayOfList[listWithCardIndex].CardListFks.filter(card => card.cardStatus === 0)\n            let archiveCards =  arrayOfList[listWithCardIndex].CardListFks.filter(card => card.cardStatus === 1)\n            \n            //concat both lists\n            arrayOfList[listWithCardIndex].CardListFks = notarchivedCards.concat(archiveCards)\n            socket.emit(\"updateLists\", {projectId:arrayOfList[0].projectId,lists:arrayOfList})  \n            return {\n                ...state,\n                lists : arrayOfList,\n            };\n\n        case listLabels.UPDATE_DATE_CARD:\n            let listsOld = Array.from(state.lists)\n\n            let listDueDateIndex = listsOld.findIndex(list => list.listId === action.payload.card.listId)\n\n            let cardDueDateIndex = listsOld[listDueDateIndex].CardListFks.findIndex(card => card.cardId === action.payload.card.cardId)\n\n            listsOld[listDueDateIndex].CardListFks[cardDueDateIndex].cardDateTarget =  action.payload.dueDate\n            socket.emit(\"updateLists\", {projectId:listsOld[0].projectId,lists:listsOld}) \n            return {\n                ...state,\n                lists : listsOld\n            };\n        case listLabels.UPDATE_DESCRIPTION_CARD:\n            let oldLists = Array.from(state.lists)\n\n            let listDescriptionIndex = oldLists.findIndex(list => list.listId === action.payload.card.listId)\n\n            let cardDescriptionIndex = oldLists[listDescriptionIndex].CardListFks.findIndex(card => card.cardId === action.payload.card.cardId)\n\n            oldLists[listDescriptionIndex].CardListFks[cardDescriptionIndex].cardDescription =  action.payload.description\n            socket.emit(\"updateLists\", {projectId:oldLists[0].projectId,lists:oldLists}) \n            return {\n                ...state,\n                lists : oldLists\n            };\n        case listLabels.UPDATE_TITLE_CARD:\n            let listsArray = Array.from(state.lists)\n\n            let listTitleIndex = listsArray.findIndex(list => list.listId === action.payload.card.listId)\n\n            let cardTitleIndex = listsArray[listTitleIndex].CardListFks.findIndex(card => card.cardId === action.payload.card.cardId)\n\n            listsArray[listTitleIndex].CardListFks[cardTitleIndex].cardTitle=  action.payload.title\n            socket.emit(\"updateLists\", {projectId:listsArray[0].projectId,lists:listsArray}) \n            return {\n                ...state,\n                lists : listsArray\n            };       \n            \n        default:\n            return state\n    }\n}","import { cardAction } from '../actions/Card.action';\n\nconst labels = cardAction.labels\n\nconst initialState = {\n    card: {\n        cardTitle: '',\n        cardDescription: '',\n        cardStatus: -1,\n        cardDateTarget: null,\n        cardDateEnd: null,\n        cardFather: null,\n        cardChild: null,\n        listId: null,\n        comments: []\n    },\n    isLoading: false,\n    membersOnCard: [],\n    membersOffCard: []\n};\n\nexport function card (state = initialState, action) {\n    switch (action.type) {\n        case labels.LOAD_CARD:\n            return { ...state, isLoading: true };\n        case labels.UPDATE_CARD:\n            return { ...state, card: action.payload };\n        case labels.CREATE_TASK:\n            return { ...state,\n                card: action.payload,\n                isLoading: false\n            };\n        case labels.DELETE_TASK:\n            return { ...state, card: action.payload };\n        case labels.GET_CARD:\n            return { ...state, card: action.payload };\n        case labels.GET_ALL_LABEL:\n            return { ...state, labels: action.payload };\n        case labels.UPDATE_TASK:\n            return { ...state, card: action.payload };\n        case labels.DELETE_CARD:\n            return { ...state};\n        case labels.ADD_MEMBER_ON_CARD:\n            return {\n                ...state,\n                membersOnCard: action.payload.membersOnCard,\n                membersOffCard: action.payload.membersOffCard,\n                isLoading: false\n            };\n\n        case labels.DELETE_MEMBER:\n            return {\n                ...state,\n                membersOnCard: action.payload.membersOnCard,\n                membersOffCard: action.payload.membersOffCard,\n                isLoading: false\n            };\n\n        case labels.DELETE_MEMBER_ERROR:\n            return {\n                ...state,\n                isLoading: false\n            };\n\n        case labels.ADD_MEMBER_ON_CARD_ERROR:\n            return {\n                ...state,\n                isLoading: false\n            };\n\n        case labels.FIND_ALL_MEMBERS_ON_CARD_ERROR:\n            return {\n                ...state,\n                isLoading: false\n            };\n\n        case labels.FIND_ALL_MEMBERS_ON_CARD:{\n            return {\n                ...state,\n                membersOnCard: action.payload.membersOnCard,\n                membersOffCard: action.payload.membersOffCard,\n                isLoading: false\n            };\n        }\n\n        case labels.FIND_ALL_COMMENTS_ON_CARD:\n            let card = state.card\n            card.comments = action.payload\n            return { ...state, card: card };\n\n        case labels.ADD_COMMENTS_ON_CARD:\n            let cd = state.card\n            cd.comments.push(action.payload)\n            return { ...state, card: cd };\n\n        default:\n            return state\n    }\n};\n","import { searchbarAction } from '../actions/Searchbar.action';\n\nconst labels = searchbarAction.labels\n\nconst initialState = {\n    projectsFound: [],\n    listsFound: [],\n    cardsFound: []\n};\n\nexport function searchbar (state = initialState, action) {\n    switch (action.type) {\n        case labels.SEARCH_PROJECTS:\n            return { ...state,\n                projectsFound: action.payload\n            };\n\n        case labels.SEARCH_PROJECTS_ERROR:\n            return {\n                ...state,\n                projectsFound: []\n            };\n\n        case labels.SEARCH_LISTS:\n            return { ...state,\n                listsFound: action.payload\n            };\n\n        case labels.SEARCH_LISTS_ERROR:\n            return {\n                ...state,\n                listsFound: []\n            };\n\n        case labels.SEARCH_CARDS:\n            return { ...state,\n                cardsFound: action.payload\n            };\n\n        case labels.SEARCH_CARDS_ERROR:\n            return {\n                ...state,\n                cardsFound: []\n            };\n\n        case labels.SEARCH_RESET:\n            return {\n                ...state,\n                projectsFound: [],\n                listsFound: [],\n                cardsFound: []\n            };\n\n        default:\n            return state\n    }\n};\n","import { invitationAction } from '../actions/Invitation.action';\nimport { signupAction } from '../actions/Signup.action';\n\nconst labels = invitationAction.labels\nconst labelsSignup = signupAction.labels\n\nconst initialState = {\n    isLoading: true,\n};\n\nexport function invitation (state = initialState, action) {\n    switch (action.type) {\n        case labelsSignup.LOAD_INVITATION:\n            return { ...state,\n                isLoading: true\n            };\n\n        case labelsSignup.SIGN_UP_ERROR:\n            return { ...state,\n                isLoading: false\n            };\n\n        case labels.MEMBER_EXIST:\n            return { ...state,\n                project: action.payload.project,\n                member: action.payload.member,\n                isAccountExist: true,\n                isAccountValid: action.payload.isAccountValid,\n                isLoading: false\n            };\n\n        case labels.MEMBER_NOT_EXIST:\n            return {\n                ...state,\n                informations: action.payload.informations,\n                isAccountExist: false,\n                isLoading: false\n            };\n\n        case labels.DECRYPT_ERROR:\n            return {\n                ...state,\n                isLoading: false\n            };\n\n        case labels.INVITATION_REPLY:\n            return {\n                ...state,\n                isLoading: false\n            };\n\n        case labels.INVITATION_REPLY_ERROR:\n            return {\n                ...state,\n                isLoading: false\n            };\n\n        case labelsSignup.INVITATION_ACCEPTED:\n            return {\n                ...state,\n                isAccountValidNow: true,\n                isLoading: false,\n                member: action.payload.member\n            }\n\n        default:\n            return state\n    }\n};\n","import _action from '../actions';\n\nconst labels = _action.dashboardFixAction.labels\n\nconst initialState = {\n    isLoading: false,\n    projects: []\n};\n\nexport function dashboardFix (state = initialState, action) {\n    switch (action.type) {\n        case labels.LOAD_DASHBOARD:\n            return {\n                ...state,\n                isLoading: true\n            };\n\n        case labels.CREATE_PROJECT:\n            let newProjects = Array.from(state.projects)\n            newProjects.push(action.payload)\n\n            return {\n                ...state,\n                isLoading: false,\n                projects: newProjects\n            };\n\n        case labels.CREATE_PROJECT_ERROR:\n            return {\n                ...state,\n                isLoading: false\n            };\n\n        case labels.LOAD_ALL_PROJECTS_FOR_MEMBER:\n            return {\n                ...state,\n                isLoading: false,\n                projects: action.payload\n            };\n\n        case labels.LOAD_ALL_PROJECTS_FOR_MEMBER_ERROR:\n            return {\n                ...state,\n                isLoading: false\n            };\n\n        case labels.SET_PROJECT_FAVORITE:\n            let newProjects1 = Array.from(state.projects)\n            let index = action.payload.index\n            newProjects1[index].project.projectIsFavorite = !newProjects1[index].project.projectIsFavorite\n            return {\n                ...state,\n                isLoading: false,\n                projects: newProjects1\n            };\n\n        case labels.SET_PROJECT_FAVORITE_ERROR:\n            return {\n                ...state,\n                isLoading: false\n            };\n\n        default:\n            return state\n    }\n};\n","import { combineReducers } from 'redux';\nimport { dashboard } from './Dashboard.reducer';\nimport { signin } from './Signin.reducer';\nimport { signup } from './Signup.reducer';\nimport { navbar } from './Navbar.reducer';\nimport { profile } from './Profile.reducer';\nimport { project } from './Project.reducer';\nimport { card } from \"./Card.reducer\";\nimport { searchbar } from \"./Searchbar.reducer\";\nimport { invitation } from \"./Invitation.reducer\";\nimport { dashboardFix } from './DashboardFix.reducer';\n\nconst rootReducer = combineReducers({\n    dashboard,\n    signin,\n    signup,\n    navbar,\n    profile,\n    project,\n    card,\n    searchbar,\n    invitation,\n    dashboardFix\n});\n\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\n\nexport const Store = createStore(\n    rootReducer,\n    composeWithDevTools(\n        applyMiddleware(\n            thunk\n        )\n    )\n);","import Request from './Request.helper';\nimport History from './History.helper';\nimport Method from './Method.helper'\n\nconst helper = {\n    Request,\n    History,\n    Method\n}\n\nexport default helper\n\nexport * from './Store.helper';\n","import React from 'react'\nimport {connect} from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport { style } from './Style'\nimport { withStyles } from '@material-ui/core/styles';\nimport _action from '../../../../actions'\nimport _helper from '../../../../helpers'\n\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from \"@material-ui/core/IconButton\";\n\nimport StarIcon from '@material-ui/icons/Star'\nimport StarBorderIcon from '@material-ui/icons/StarBorder'\n\nimport AddIcon from '@material-ui/icons/Add';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\n\nimport Button from '@material-ui/core/Button';\nimport Switch from '@material-ui/core/Switch';\nimport Typography from \"@material-ui/core/es/Typography/Typography\";\nimport GridListTile from \"@material-ui/core/es/GridListTile/GridListTile\";\nimport GridList from \"@material-ui/core/es/GridList/GridList\";\nimport GridListTileBar from \"@material-ui/core/es/GridListTileBar/GridListTileBar\";\nimport TextField from \"@material-ui/core/es/TextField/TextField\";\n\nclass ProjectList extends React.Component {\n\n    constructor (props) {\n        super(props)\n        this.createProject = this.createProject.bind(this)\n        this.handleChangeProjectVisibility = this.handleChangeProjectVisibility.bind(this)\n        this.setProjectFavorite = this.setProjectFavorite.bind(this)\n\n        this.state = {\n            projectTitle: '',\n            projectVisibility: 1,\n            isProjectPublic: false,\n            openDialog: false\n        }\n    }\n\n    /** Open and close the dialog */\n    handleClickOpenDialog = () => {\n        this.setState({ openDialog: true });\n    };\n\n    handleCloseDialog = () => {\n        this.setState({\n            openDialog: false,\n            projectVisibility: 0});\n    };\n\n    /** Update and create the project */\n    handleChangeProjectTitle = name => event => {\n        this.setState({\n            [name]: event.target.value,\n        });\n    };\n\n    handleChangeProjectVisibility = name => event => {\n        // Private\n        let projectVisibility = 1\n        // Public\n        if (event.target.checked) projectVisibility = 0\n        this.setState({\n            [name]: event.target.checked,\n            projectVisibility: projectVisibility\n        });\n    };\n\n    createProject () {\n        let title = this.state.projectTitle\n        let visibility = this.state.projectVisibility\n        let status = 0; // Active and normal project\n        let statusMemberProject = 1 // Current member is active on the project\n        let targetDate = null\n        let memberId = this.props.memberId\n\n        this.props.createProjectMember(title, visibility, status, targetDate, memberId, statusMemberProject, this.props.member)\n        this.handleCloseDialog()\n    }\n\n    /** Go the the clicked project */\n    goToProject (event) {\n        let projectId = event.currentTarget.id\n        _helper.History.push('/project/' + projectId)\n    }\n\n    // TODO\n    setProjectFavorite (event) {\n        let index = event.currentTarget.id.split('/')[1]\n        let projectIsFavorite = !this.props.projects[index].projectIsFavorite\n        let projectId = this.props.projects[index].projectId\n        let memberId = this.props.memberId\n        this.props.updateProject(projectId, memberId, projectIsFavorite)\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        /** NEW DIALOG */\n        const createProjectDialog = (\n            <Dialog\n                open={this.state.openDialog}\n                onClose={this.handleCloseDialog}\n                aria-labelledby=\"form-dialog-title\"\n            >\n                <Grid container justify='center'>\n                    <Typography variant='overline'>\n                        Create a new project\n                    </Typography>\n                    <Grid xs={12} item>\n                        <Divider/>\n                    </Grid>\n                </Grid>\n\n                <DialogContent>\n                    <form noValidate autoComplete=\"off\">\n                        <TextField\n                            id=\"projectTitle\"\n                            label=\"Project title\"\n                            className={classes.textField}\n                            value={this.state.projectTitle}\n                            onChange={this.handleChangeProjectTitle('projectTitle')}\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            fullWidth\n                        />\n                        <Grid container alignItems='center' justify='space-around'>\n                            <Typography variant='overline'>\n                                Private\n                            </Typography>\n                            <Switch\n                                checked={this.state.isProjectPublic}\n                                defaultChecked\n                                onChange={this.handleChangeProjectVisibility('isProjectPublic')}\n                                value='isProjectPublic'\n                                color=\"default\"\n                            />\n                            <Typography variant='overline'>\n                                Public\n                            </Typography>\n                        </Grid>\n                    </form>\n\n                    <Button\n                        color=\"primary\"\n                        fullWidth\n                        disabled={this.state.projectTitle.trim() === ''}\n                        onClick={this.createProject}\n                    >\n                        Create\n                    </Button>\n                </DialogContent>\n            </Dialog>\n        )\n\n        /** NEW PROJECT LIST */\n        const projectList2 = (\n            <GridList className={classes.gridList} cols={5}>\n                {this.props.projects.map(project => {\n                    if (this.props.isFavorite && project.projectIsFavorite) {\n                        return (\n                            <GridListTile\n                                key={project.projectId}\n                                className={ classes.borderRadius }\n                            >\n                                <Grid container\n                                      onClick={this.goToProject}\n                                      id={project.projectId}\n                                      className={classes.imgInformationsFav + ' ' + classes.borderRadius + ' ' + classes.borderRadiusBottom }\n                                >\n\n                                </Grid>\n                                <GridListTileBar\n                                    title={project.projectTitle}\n                                    subtitle={'Contributors : ' + project.contributor}\n                                    classes={{\n                                        root: classes.titleBar,\n                                        title: classes.gridTitle,\n                                    }}\n                                    className={ classes.borderRadiusBottom }\n                                    actionIcon={\n                                        <IconButton>\n                                            <StarIcon\n                                                className={ classes.favoriteButtonIcon }\n                                                id={'project/' + this.props.projects.indexOf(project)}\n                                                onClick={this.setProjectFavorite}\n                                            />\n                                        </IconButton>\n                                    }\n                                />\n                            </GridListTile>\n                        )\n                    } else if (!this.props.isFavorite && !project.projectIsFavorite) {\n                        return (\n                            <GridListTile\n                                key={project.projectId}\n                                className={ classes.borderRadius }\n                            >\n                                <Grid container\n                                      onClick={this.goToProject}\n                                      id={project.projectId}\n                                      className={classes.imgInformations + ' ' + classes.borderRadius + ' ' + classes.borderRadiusBottom }\n                                >\n                                </Grid>\n                                <GridListTileBar\n                                    title={project.projectTitle}\n                                    subtitle={'Contributors : ' + project.contributor}\n                                    classes={{\n                                        root: classes.titleBar,\n                                        title: classes.gridTitle,\n                                    }}\n                                    className={ classes.borderRadiusBottom }\n                                    actionIcon={\n                                        <IconButton>\n                                            <StarBorderIcon\n                                                className={classes.addFavoriteButtonIcon}\n                                                id={'project/' + this.props.projects.indexOf(project)}\n                                                onClick={this.setProjectFavorite}\n                                            />\n                                        </IconButton>\n                                    }\n                                />\n                            </GridListTile>\n                        )\n                    } else {\n                        return null\n                    }\n                })}\n            </GridList>\n        )\n\n        return (\n            <Grid container className={ classes.projectLayout}>\n                {createProjectDialog}\n                <Grid container justify='space-between'>\n                    <Typography variant=\"overline\">\n                        {this.props.title}\n                    </Typography>\n                    { !this.props.isFavorite ? (\n                        <Button color=\"primary\" className={classes.button} onClick={this.handleClickOpenDialog}>\n                            New\n                            <AddIcon className={classes.rightIcon} />\n                        </Button>\n                    ) : null}\n                </Grid>\n                <Grid xs={12} item>\n                    <Divider/>\n                </Grid>\n                <Grid xs={12} item>\n                    {projectList2}\n                </Grid>\n            </Grid>\n        )\n    }\n}\n\nProjectList.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    memberId: state.signin.member.memberId,\n    member: state.signin.member\n})\n\nconst mapDispatchToProps = {\n    createProjectMember: _action.dashboardAction.createProject, // create un new project\n    searchMember: _action.memberAction.searchMember,\n    updateProject: _action.dashboardAction.updateMemberHasProject\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(withStyles(style)(ProjectList));","export const style = theme => ({\n    root: {\n        flexGrow: 1,\n        marginLeft: '2%',\n        marginBottom: '3%',\n        paddingLeft: '4%',\n        textAlign: 'center'\n    },\n    title: {\n        textAlign: 'left',\n        color: '#4d4d4d'\n    },\n    default_card: {\n        maxWidth: 400,\n        marginRight: '1.5%',\n        marginBottom: '3%',\n        borderRadius: '5px',\n        background: '#b3e0ff' // default color will be replaced by image\n\n    },\n    add_project_card: {\n        maxWidth: 400,\n        marginRight: '2.5%',\n        borderRadius: '5px',\n        background: '#d9d9d9',\n        opacity: 0.8\n    },\n    media: {\n        height: 0,\n        paddingTop: '56.25%', // 16:9\n    },\n    actions: {\n        display: 'flex',\n    },\n    favoriteButtonIcon: {\n        color: '#ffeb3b',\n        '&:hover': {\n            color: '#ffc107',\n        }\n    },\n    addFavoriteButtonIcon: {\n        color: '#ffffe6',\n        '&:hover': {\n            color: '#ffc107',\n        }\n    },\n    Icon: {\n        fontSize: '22px',\n        '&:hover': {\n            fontSize: '24px'\n        }\n    },\n\n    addIcon: {\n        color: '#808080',\n        fontSize: '28px',\n        '&:hover': {\n            fontSize: '36px'\n        }\n    },\n    bootstrapRoot: {\n        'label + &': {\n            marginTop: theme.spacing.unit * 3,\n        },\n    },\n    bootstrapInput: {\n        borderRadius: 4,\n        backgroundColor: theme.palette.common.white,\n        border: '1px solid #ced4da',\n        fontSize: 16,\n        padding: '10px 12px',\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\n        // Use the system font instead of the default Roboto font.\n        fontFamily: [\n            '-apple-system',\n            'BlinkMacSystemFont',\n            '\"Segoe UI\"',\n            'Roboto',\n            '\"Helvetica Neue\"',\n            'Arial',\n            'sans-serif',\n            '\"Apple Color Emoji\"',\n            '\"Segoe UI Emoji\"',\n            '\"Segoe UI Symbol\"',\n        ].join(','),\n        '&:focus': {\n            borderColor: '#80bdff',\n            boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n        },\n    },\n    bootstrapFormLabel: {\n        fontSize: 18,\n    },\n\n    // New CSS version\n    rightIcon: {\n        marginLeft: theme.spacing.unit,\n    },\n    gridList: {\n        flexWrap: 'nowrap',\n        // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n        //transform: 'translateZ(0)',\n    },\n    gridTitle: {\n        color: '#fff',\n    },\n    titleBar: {\n        background:\n            'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\n    },\n    projectLayout: {\n        marginBottom: theme.spacing.unit * 5\n    },\n    imgInformationsFav: {\n        backgroundColor: '#f44336',\n        height: '100%'\n    },\n    imgInformations: {\n        backgroundColor: '#3f51b5',\n        height: '100%'\n    },\n    borderRadius: {\n        borderTopLeftRadius: '10px',\n        borderTopRightRadius: '10px'\n    },\n    borderRadiusBottom: {\n        borderBottomLeftRadius: '10px',\n        borderBottomRightRadius: '10px'\n    },\n});\n\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst styles = theme => ({\n    progress: {\n        margin: theme.spacing.unit * 2,\n    },\n});\n\nfunction Loader(props) {\n    const { classes } = props;\n    return (\n        <div>\n            <CircularProgress className={classes.progress} size={150} />\n        </div>\n    );\n}\n\nLoader.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Loader);","/** REACT */\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport _action from '../../actions'\n\n/** COMPONENTS */\nimport ProjectList from './projectPanel/projectList/ProjectList'\n\n/** MATERIAL UI */\nimport { style } from './Style'\nimport Grid from '@material-ui/core/Grid';\nimport Loader from \"../ui/loader/Loader\";\n\nclass Dashboard extends React.Component {\n    constructor (props) {\n        super(props)\n        this.onClick = this.onClick.bind(this);\n\n        this.state = { // will be load at start\n            teams: [\n                {\n                    teamName: 'Test'\n                },\n                {\n                    teamName: 'Test2'\n                }\n            ] // todo change\n        }\n    }\n\n    onClick () {\n        // do something\n    }\n\n    componentWillMount () {\n        this.props.loadProjects(this.props.memberId) // load all the project that the member is involved in\n        this.props.loadTeams(this.props.memberId) // load all the member team\n\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <Grid container justify='center' alignItems='center' className={classes.layout}>\n                { !this.props.isLoading ?\n                    <Grid xs={10} item className={classes.subLayout}>\n                        <ProjectList\n                            title={\"Favorite projects\"}\n                            iconList={'work_outline'}\n                            projects={this.props.allProjects}\n                            isFavorite={true}\n                        />\n\n                        <ProjectList\n                            title={\"Personal projects\"}\n                            iconList={'work_outline'}\n                            projects={this.props.allProjects}\n                            isFavorite={false}\n                        />\n                    </Grid>\n                    :\n                    <Loader/>\n                }\n\n            </Grid>\n        )\n    }\n}\n\nDashboard.propTypes = {\n    classes: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n    errorMessage: state.dashboard.errorMsg,\n    allProjects: state.dashboard.projects,\n    teamProjects: [], // todo\n    memberId: state.signin.member.memberId,\n    teams: state.dashboard.teams,\n    isLoading: state.dashboard.isLoading\n})\n\nconst mapDispatchToProps = {\n    loadProjects: _action.dashboardAction.getAllProjectsMember,\n    hideErrorMessage: _action.dashboardAction.hideErrorMessage,\n    loadTeams: _action.dashboardAction.getAllTeams\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(withStyles(style)(Dashboard));","export const style = theme => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor: 'grey'\n    },\n    leftLayout: {\n        height: '100%',\n        padding: theme.spacing.unit * 2,\n    },\n    layout: {\n        //height: '100%',\n        margin: 0,\n        //backgroundColor: '#f0f0f5',\n        /*borderRadius: '5px',\n        backgroundImage: `url(${backgroundimage})`,\n        backgroundPosition: 'center',\n        backgroundSize: 'cover',\n        backgroundRepeat: 'noRepeat'*/\n    },\n    rightLayout: {\n        //height: '100%',\n        padding: theme.spacing.unit * 2,\n    },\n    xsMarginBottom: {\n        marginBottom: theme.spacing.unit * 5\n    },\n    errorMsg: {\n        backgroundColor: '#ffb3b3',\n        border: 'solid 5px #ff0000'\n    },\n    subLayout: {\n        paddingRight: theme.spacing.unit * 5,\n        paddingLeft: theme.spacing.unit * 5\n\n    }\n});\n\n\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport _action from '../../actions'\nimport { style } from './Style'\nimport logo from '../../public/images/prello-logo-2.png'\n\n// CSS imports\nimport TextField from '@material-ui/core/TextField';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Grid from \"@material-ui/core/Grid/Grid\";\nimport CloudIcon from '@material-ui/icons/Cloud'\nimport Typography from \"@material-ui/core/Typography/Typography\";\nimport _helper from \"../../helpers\";\nimport HowToRegIcon from \"@material-ui/icons/HowToReg\"\nimport GetAppIcon from '@material-ui/icons/GetApp'\n\nclass Signin extends React.Component {\n    constructor (props) {\n        super(props)\n\n        this.submit = this.submit.bind(this);\n\n        if (props.invitation) {\n            this.state = {\n                memberEmail: props.invitation.memberEmail,\n                memberPassword: '',\n            };\n        } else {\n            this.state = {\n                memberEmail: '',\n                memberPassword: '',\n            };\n        }\n        this.signinWithGithub = this.signinWithGithub.bind(this);\n    }\n    submit () {\n        let memberEmail = this.state.memberEmail\n        let memberPassword = this.state.memberPassword\n\n        if (this.props.invitation) {\n            this.props.onLogin(memberEmail, memberPassword, null)\n        } else {\n            this.props.onLogin(memberEmail, memberPassword, '/home')\n        }\n    }\n\n    signinWithGithub () {\n        this.props.onSigninWithGithub()\n    }\n\n    goToForgottenPassword () {\n        _helper.History.push('/password-forgotten')\n    }\n\n    goToSignUp () {\n        _helper.History.push('/signup')\n    }\n\n    goToDownloadPage () {\n        _helper.History.push('/download')\n    }\n\n    handleChange (event) {\n        var { name, value } = event.target; \n        this.setState({ [name]: value });\n    }\n\n    render() {\n        const { classes, errorMsg } = this.props;\n        return (\n            <Grid container alignItems='flex-start' className={classes.layout}>\n\n                <Grid xs={1} sm={3} md={5} item className={classes.leftLayout}>\n\n                </Grid>\n\n                <Grid xs={10} sm={9} md={7} item className={classes.rightLayout}>\n                    <Grid container justify=\"center\">\n\n                        <Grid xs={12} item className={classes.xsMarginBottom}>\n                            <form>\n                                <Grid spacing={16} alignItems='flex-start' container>\n                                    <Grid xs={6} sm={4} item>\n                                        <TextField\n                                            error={!!errorMsg}\n                                            required\n                                            disabled={this.props.invitation}\n                                            className={classes.textfield}\n                                            name=\"memberEmail\"\n                                            id='email'\n                                            label=\"Email\"\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            type=\"email\"\n                                            value={this.state.memberEmail}\n                                            fullWidth\n                                            onChange={this.handleChange.bind(this)}\n                                        />\n                                    </Grid>\n                                    <Grid xs={6} sm={4} item>\n                                        <TextField\n                                            required\n                                            className={classes.textfield}\n                                            error={!!errorMsg}\n                                            id='password'\n                                            name=\"memberPassword\"\n                                            label=\"Password\"\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            type=\"password\"\n                                            fullWidth\n                                            onChange={this.handleChange.bind(this)}\n                                        />\n                                        <Button\n                                            size=\"small\"\n                                            onClick={this.goToForgottenPassword}\n                                        >\n                                            Forgot password\n                                        </Button>\n                                    </Grid>\n                                    <Grid xs={12} sm={4} item>\n                                        <Button\n                                            variant=\"contained\"\n                                            fullWidth\n                                            size=\"large\"\n                                            color=\"primary\"\n                                            onClick={this.submit}\n                                        >\n                                            Sign In\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n                            </form>\n                        </Grid>\n\n                        <Grid xs={12} item>\n                            <Grid container>\n                                <Grid xs={1} sm={2} lg={3} item>\n                                </Grid>\n                                <Grid xs={11} sm={8} lg={6} item>\n                                    <Grid justify='center' container className={classes.xsMarginBottom}>\n                                        <Grid item>\n                                            <img src={logo} width=\"70\" alt=\"prello logo\"/>\n                                        </Grid>\n                                    </Grid>\n\n                                    <Typography variant=\"h4\" gutterBottom className={classes.xsMarginBottom}>\n                                        Start managing your projects and share them\n                                    </Typography>\n                                    { !this.props.invitation ? (\n                                        <div>\n                                            <Typography variant=\"h6\" gutterBottom>\n                                                Join Prello today\n                                            </Typography>\n\n                                            <Button\n                                            variant=\"outlined\"\n                                            color=\"primary\"\n                                            fullWidth\n                                            className={classes.button}\n                                            onClick={this.goToSignUp}\n                                            >\n                                                Create your account\n                                                <HowToRegIcon className={classes.rightIcon} />\n                                            </Button>\n\n                                            <Button\n                                            variant=\"outlined\"\n                                            color=\"inherit\"\n                                            fullWidth\n                                            className={classes.button}\n                                            onClick={this.signinWithGithub}\n                                            >\n                                                Sign In with Github\n                                                <CloudIcon className={classes.rightIcon} />\n                                            </Button>\n\n                                            <Button\n                                                variant=\"outlined\"\n                                                color=\"inherit\"\n                                                fullWidth\n                                                className={classes.button}\n                                                onClick={this.goToDownloadPage}\n                                            >\n                                                Download desktop app\n                                                <GetAppIcon className={classes.rightIcon} />\n                                            </Button>\n                                        </div>\n                                    ) : null }\n                                </Grid>\n                            </Grid>\n                        </Grid>\n\n\n                        <Grid item>\n\n                        </Grid>\n                    </Grid>\n\n                    <label className={classes.errorLabel}>{errorMsg}</label>\n                </Grid>\n            </Grid>\n        )\n    }\n\n\n}\n\nSignin.propTypes = {\n    classes: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n    errorMsg: state.signin.msgError\n})\nconst mapDispatchToProps = {\n    onLogin : _action.signinAction.signin,\n    onSigninWithGithub: _action.signinAction.signinWithGithub,\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(style)(Signin));","import bg from '../../public/images/bg-singin.png'\n\nexport const style = theme => ({\n    layout: {\n        height: '100%',\n        margin: 0\n    },\n    textfield: {\n        marginTop: 0\n    },\n    paper: {\n        marginTop: theme.spacing.unit * 8,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`,\n    },\n    avatar: {\n        margin: theme.spacing.unit,\n        backgroundColor: theme.palette.secondary.main,\n    },\n    rightLayout: {\n        height: '100%',\n        padding: theme.spacing.unit * 2,\n    },\n    leftLayout: {\n        height: '100%',\n        //backgroundColor: '#2c387e',\n        backgroundImage: `url(${bg})`,\n        padding: theme.spacing.unit * 2,\n    },\n    errorLabel: {\n        marginTop: theme.spacing.unit * 2,\n    },\n    cardPresentation: {\n        marginTop: 200\n    },\n    rightIcon: {\n        marginLeft: theme.spacing.unit,\n    },\n    button: {\n        margin: theme.spacing.unit,\n    },\n    card: {\n        minWidth: 275,\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n    typography: {\n        useNextVariants: true,\n    },\n    paddingSide: {\n        paddingLeft: theme.spacing.unit * 23,\n        paddingRight: theme.spacing.unit * 23,\n    },\n    xsMarginBottom: {\n        marginBottom: theme.spacing.unit * 5\n    },\n    logo: {\n        marginRight: 'auto',\n        marginLeft:'auto'\n    }\n});","import Loader from '../ui/loader/Loader'\nimport React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { withStyles } from \"@material-ui/core\";\nimport { style } from \"./Style\";\nimport PropTypes from 'prop-types';\n\nclass LoaderPage extends Component {\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <Grid container justify=\"center\" className={classes.layout}>\n                <Loader />\n            </Grid>\n        );\n    }\n\n}\n\nLoaderPage.propTypes = {\n    classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(style)(LoaderPage);","export const style = theme => ({\n    layout: {\n        paddingTop: theme.spacing.unit * 10,\n    }\n})","import React from 'react'\nimport { connect } from 'react-redux'\nimport _action from '../../actions'\nimport _helper from '../../helpers'\nimport { style } from './Style'\nimport logo from '../../public/images/prello-logo-2.png'\n\nimport TextField from '@material-ui/core/TextField';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Grid from \"@material-ui/core/Grid/Grid\";\nimport LoaderPage from \"../loaderPage/LoaderPage\";\n\nclass Signup extends React.Component {\n    constructor (props) {\n        super(props)\n        this.handleChange = this.handleChange.bind(this)\n        this.generateTextfields = this.generateTextfields.bind(this)\n        this.submit = this.submit.bind(this);\n\n        this.state = {\n            memberFirstname: '',\n            memberLastname: '',\n            memberPseudo: '',\n            memberEmail: '',\n            memberPassword: '',\n            memberCheckPassword: ''\n        };\n\n        if (props.invitation) {\n            this.state.memberEmail = props.invitation.memberEmail\n        }\n    }\n\n    submit () {\n        let isInvitation = false\n        this.state.memberPseudo.trim().toLowerCase()\n        if (this.props.invitation) isInvitation = true\n        this.props.onAdd(this.state, isInvitation)\n    }\n\n    goBackToLogin () {\n        _helper.History.push('/login')\n    }\n\n    handleChange (event) {\n        var { name, value } = event.target;\n        this.setState({ [name]: value });\n    }\n\n    // Loop that create textfields\n    generateTextfields = () => {\n        const labelsForClient = [\n            'First name',\n            'Last name',\n            'Pseudo',\n            'Email',\n            'Password',\n            'Password confirmation'\n        ]\n        const type = [\n            'text',\n            'text',\n            'text',\n            'email',\n            'password',\n            'password'\n        ]\n\n        let values = Object.values(this.state)\n        let keys = Object.keys(this.state)\n        var textfields = [];\n        let index = 0\n\n        for (let item of values) {\n            textfields.push(\n                <TextField\n                    error={\n                        this.props.errorMsg[1] === keys[index] ||\n                        (this.props.errorMsg[1] === 'all' && item === '')\n                    }\n                    disabled={this.props.invitation && type[index] === 'email'}\n                    required\n                    key={keys[index]}\n                    name={keys[index]}\n                    label={labelsForClient[index]}\n                    value={item}\n                    fullWidth\n                    type={type[index]}\n                    onChange={this.handleChange}\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                />\n            )\n            index += 1\n        }\n        return textfields\n    }\n\n    render() {\n        const {classes} = this.props;\n        return (\n            <div>\n                { this.props.isLoading ? (\n                    <LoaderPage/>\n                ) : (\n                    <Grid justify='center' className={classes.layout} container>\n                        <Grid justify='center' container className={classes.logo}>\n                            <Grid item>\n                                <img src={logo} width=\"60\" alt=\"prello logo\"/>\n                            </Grid>\n                        </Grid>\n                        <Typography component=\"h1\" variant=\"h5\">\n                            Create your account\n                        </Typography>\n\n                        <Grid justify='center' container className={ classes.marginBottom }>\n                            <Grid xs={10} sm={6} md={4} item>\n                                <form className={classes.form}>\n                                    {this.generateTextfields()}\n                                </form>\n\n                                <Grid container>\n                                    <Grid container justify=\"center\" className={ classes.marginBottom }>\n                                        <Typography variant=\"overline\">\n                                            {this.props.errorMsg[0]}\n                                        </Typography>\n                                    </Grid>\n                                    <Grid xs={6} className={ classes.paddingRight } item>\n                                        <Button\n                                            variant=\"outlined\"\n                                            fullWidth color=\"primary\"\n                                            onClick={this.goBackToLogin}\n                                        >\n                                            Back\n                                        </Button>\n                                    </Grid>\n                                    <Grid xs={6} className={ classes.paddingLeft } item>\n                                        <Button\n                                            variant=\"contained\"\n                                            fullWidth color=\"primary\"\n                                            onClick={this.submit}\n                                        >\n                                            Sign Up\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                )}\n\n            </div>\n        )\n    }\n}\n\nSignup.propTypes = {\n    classes: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n    errorMsg: state.signup.msgError,\n    isInvitation: state.signup.isInvitation,\n    isLoading: state.signup.isLoading\n})\n\nconst mapDispatchToProps = {\n    onAdd : _action.signupAction.signup\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(style)(Signup));","export const style = theme => ({\n    layout: {\n        height: '100%',\n    },\n    paper: {\n        marginTop: theme.spacing.unit * 8,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`,\n    },\n    avatar: {\n        margin: theme.spacing.unit,\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing.unit,\n        marginBottom: theme.spacing.unit * 3,\n    },\n    submit: {\n        marginTop: theme.spacing.unit * 3,\n\n    },\n    marginBottom: {\n        marginBottom: theme.spacing.unit * 3,\n    },\n    logo: {\n        marginTop: theme.spacing.unit * 3,\n        marginBottom: theme.spacing.unit * 2,\n    },\n    paddingLeft: {\n        paddingLeft: theme.spacing.unit,\n    },\n    paddingRight: {\n        paddingRight: theme.spacing.unit,\n    }\n});","import React from 'react'\nimport { connect } from 'react-redux'\nimport { withStyles} from \"@material-ui/core\";\nimport { style } from './Style'\nimport _action from \"../../actions\";\n\nimport LoaderPage from \"../loaderPage/LoaderPage\"\nimport Grid from \"@material-ui/core/Grid/Grid\";\nimport logo from \"../../public/images/prello-logo-2.png\";\nimport Typography from \"@material-ui/core/Typography/Typography\";\nimport Button from \"@material-ui/core/Button/Button\";\nimport DoneIcon from \"@material-ui/icons/Done\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport PropTypes from 'prop-types';\nimport Signup from \"../signup/Signup\";\nimport Signin from \"../signin/Signin\";\n\nclass Invitation extends React.Component {\n    constructor(props){\n        super(props)\n        this.componentDidMount = this.componentDidMount.bind(this)\n        this.acceptInvitation = this.acceptInvitation.bind(this)\n        this.refuseInvitation = this.refuseInvitation.bind(this)\n    }\n\n    componentDidMount () {\n        let params = this.props.location.pathname.split('/')\n        let token = params[2]\n        this.props.onDecryptInvitation(token)\n\n    }\n\n    acceptInvitation () {\n        let body = {\n            memberhasprojectStatus: 1,\n            projectIsFavorite: false\n        }\n        let query = {\n            projectId: this.props.project.projectId,\n            memberId: this.props.member.memberId\n        }\n        this.props.onReplyToInvitation(true, body, query, this.props.member)\n    }\n\n    refuseInvitation () {\n        let query = {\n            projectId: this.props.project.projectId,\n            memberId: this.props.member.memberId\n        }\n        this.props.onReplyToInvitation(false, null, query)\n    }\n\n    render() {\n        const {classes} = this.props;\n        console.log(this.props)\n        return (\n            <div className={ classes.layout }>\n                {this.props.isLoading || this.props.isLoadingGlobal ? (\n                    <LoaderPage/>\n                ) : this.props.isLogged ? (\n                    <div>\n                        {this.props.isAccountValid ? (\n                            <Grid container justify=\"center\">\n                                <Grid justify='center' container className={classes.logo}>\n                                    <Grid item>\n                                        <img src={logo} width=\"100\" alt=\"prello logo\"/>\n                                    </Grid>\n                                </Grid>\n\n                                <Grid justify=\"center\" container>\n                                    <Typography variant=\"h5\" gutterBottom className={classes.marginBottom}>\n                                        You received an invitation to join a project.\n                                    </Typography>\n                                </Grid>\n                                <Grid justify=\"center\" container>\n                                    <Typography variant=\"overline\" gutterBottom className={classes.marginBottom}>\n                                        {this.props.project.projectTitle}\n                                    </Typography>\n                                </Grid>\n\n                                <Grid container justify=\"center\">\n                                    <Grid item xs={8} sm={4} md={3}>\n                                        <Button\n                                            fullWidth\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            className={classes.button}\n                                            onClick={this.acceptInvitation}\n                                        >\n                                            join\n                                            <DoneIcon className={classes.rightIcon} />\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n\n                                <Grid container justify=\"center\">\n                                    <Grid item xs={8} sm={4} md={3}>\n                                        <Button\n                                            fullWidth\n                                            variant=\"outlined\"\n                                            color=\"secondary\"\n                                            className={classes.button}\n                                            onClick={this.refuseInvitation}\n                                        >\n                                            Refuse\n                                            <CloseIcon className={classes.rightIcon} />\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        ) : (\n                            <div>Error</div>\n                        )}\n                    </div>\n                ) : this.props.member.memberStatus === 1 ? (\n                    <Signin parent='Invitation' invitation={{memberEmail: this.props.member.memberEmail}} />\n                ) : (\n                    <Signup invitation={{memberEmail: this.props.member.memberEmail}} />\n                )}\n            </div>\n        )\n    }\n}\n\nInvitation.propTypes = {\n    classes: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n    isLoadingGlobal: state.signin.isLoading,\n    isLoading: state.invitation.isLoading,\n    isAccountExist: state.invitation.isAccountExist,\n    isAccountValid: state.invitation.isAccountValid,\n    isLogged: state.signin.isLogged,\n    member: state.invitation.member,\n    project: state.invitation.project\n})\n\nconst mapDispatchToProps = {\n    onDecryptInvitation: _action.invitationAction.isMemberExist,\n    onReplyToInvitation: _action.invitationAction.replyToInvitation\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(withStyles(style)(Invitation));","export const style = theme => ({\n    marginBottom: {\n        marginBottom: theme.spacing.unit * 10\n    },\n    logo: {\n        marginTop: theme.spacing.unit * 5,\n        marginBottom: theme.spacing.unit * 10\n    },\n    rightIcon: {\n        marginLeft: theme.spacing.unit,\n    },\n    button: {\n        margin: theme.spacing.unit,\n    },\n    layout: {\n        height: '100%'\n    }\n});\n\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Paper from '@material-ui/core/Paper';\nimport { withStyles } from '@material-ui/core/styles';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport connect from \"react-redux/es/connect/connect\";\n\nconst styles = theme => ({\n    menuItem: {\n        '&:focus': {\n            backgroundColor: theme.palette.primary.main,\n            '& $primary, & $icon': {\n                color: theme.palette.common.white\n            }\n        },\n    },\n    primary: {},\n    icon: {},\n});\n\nclass Menu extends React.Component {\n    /* Need to get a property links which is an array of objects\n     * object = {label: String, route: String, icon: <Icon/>}\n     */\n\n    constructor (props) {\n        super(props)\n        this.displayComponent = this.displayComponent.bind(this);\n    }\n\n    displayComponent = (event) => {\n        let route = event.currentTarget.id\n        this.props.history.push(route)\n    }\n\n    /* Build the item list of the menu */\n    buildLinks = () => {\n        const {classes} = this.props;\n        let menuList = []\n\n        for (let link of this.props.links) {\n            menuList.push(\n                <MenuItem id={link.route} className={classes.menuItem} key={link.label} onClick={this.displayComponent}>\n                    <ListItemIcon className={classes.icon}>\n                        {link.icon}\n                    </ListItemIcon>\n                    <ListItemText classes={{primary: classes.primary}} inset primary={link.label}/>\n                </MenuItem>\n            )\n        }\n        return menuList\n    }\n\n    render() {\n        return (\n            <Paper>\n                <MenuList>\n                    {this.buildLinks()}\n                </MenuList>\n            </Paper>\n        );\n    }\n}\n\nMenu.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n})\n\nexport default connect(mapStateToProps, null)(withStyles(styles)(Menu));","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst  classic = createMuiTheme({\n    palette: {\n        secondary: {\n            main: '#ffc50a'\n        }\n    },\n});\n\nconst  successWarningError = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#4caf50'\n        }\n    },\n});\n\nexport const Theme = {\n    classic,\n    successWarningError\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst styles = theme => ({\n    close: {\n        padding: theme.spacing.unit / 2,\n    },\n});\n\nclass SimpleSnackbar extends React.Component {\n    /*  You need to add two methods in parent component\n     *\n     *  nameOfTheMethod () = {\n     *      this.setState({ openSnackbar: true })\n     *  }\n     *\n     *  handleSnackbarClose = (event, reason) => {\n     *      if (reason === 'clickaway') {\n     *          return;\n     *      }\n     *      this.setState({ openSnackbar: false });\n     *  };\n     *\n     *  Add this field to the state : openSnackbar: false\n     *\n     *  Call the component like this :\n     *  <Snackbar handleSnackbarClose={this.handleSnackbarClose} open={this.state.openSnackbar} message=\"myMsg\"/>\n     */\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <div>\n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left',\n                    }}\n                    open={this.props.open}\n                    autoHideDuration={6000}\n                    onClose={this.props.handleSnackbarClose}\n                    ContentProps={{\n                        'aria-describedby': 'message-id',\n                    }}\n                    message={<span id=\"message-id\">{this.props.message}</span>}\n                    action={[\n                        <IconButton\n                            key=\"close\"\n                            aria-label=\"Close\"\n                            color=\"inherit\"\n                            className={classes.close}\n                            onClick={this.props.handleSnackbarClose}\n                        >\n                            <CloseIcon />\n                        </IconButton>,\n                    ]}\n                />\n            </div>\n        );\n    }\n}\n\nSimpleSnackbar.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(SimpleSnackbar);","import React from 'react'\nimport { connect } from 'react-redux'\nimport TextField from \"@material-ui/core/TextField/TextField\";\nimport Grid from \"@material-ui/core/Grid/Grid\";\nimport {MuiThemeProvider} from \"@material-ui/core/es\";\nimport {Theme} from \"../../ui/palette/Palette\";\nimport Button from \"@material-ui/core/Button/Button\";\nimport SaveIcon from '@material-ui/icons/Save';\nimport { style } from './Style'\nimport {withStyles} from \"@material-ui/core\";\nimport Snackbar from \"../../ui/snackbar/Snackbar\"\nimport _action from \"../../../actions\";\n\nclass Password extends React.Component {\n    constructor (props) {\n        super(props)\n        this.submit = this.submit.bind(this)\n        this.handleChange = this.handleChange.bind(this)\n        this.generateTextfields = this.generateTextfields.bind(this)\n        this.checkFields = this.checkFields.bind(this)\n        this.handleSnackbarClose = this.handleSnackbarClose.bind(this)\n        this.state = {\n            labelsForClient: ['Current password', 'New password', 'Confirmation'],\n            oldPassword: '',\n            newPassword: '',\n            newPasswordConfirmation: '',\n            openSnackbar: false,\n            updatePasswordMsg: this.props.updatePasswordMsg\n        }\n    }\n\n    // Submit the member form to update db and store\n    submit () {\n        if (this.checkFields()) {\n            this.setState({\n                oldPassword: '',\n                newPassword: '',\n                newPasswordConfirmation: '',\n                openSnackbar: true\n            })\n            this.props.onUpdateMemberPassword({\n                memberId: this.props.memberId,\n                memberPassword: this.state.oldPassword,\n                newMemberPassword: this.state.newPassword\n            })\n        }\n    }\n\n    // Disabled submit button if one field is empty\n    checkFields () {\n        return (\n            this.state.oldPassword !== '' &&\n            this.state.newPassword !== '' &&\n            this.state.newPasswordConfirmation !== '' &&\n            this.state.newPassword === this.state.newPasswordConfirmation\n        )\n    }\n\n    // Update passwords state with new informations of textfields\n    handleChange = name => event => {\n        this.setState({ [name]: event.target.value.trim() });\n    };\n\n    // Handle the snackbar state\n    handleSnackbarClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        this.setState({ openSnackbar: false });\n    };\n\n    // Loop that reate textfields\n    generateTextfields = () => {\n        const { classes } = this.props;\n\n        let attributes = {\n            oldPassword: this.state.oldPassword,\n            newPassword: this.state.newPassword,\n            newPasswordConfirmation: this.state.newPasswordConfirmation\n        }\n\n        let values = Object.values(attributes)\n        let keys = Object.keys(attributes)\n        var textfields = [];\n        let index = 0\n\n        for (let item of values) {\n            textfields.push(\n                <Grid container justify=\"center\" item key={keys[index]}>\n                    <TextField\n                        id={keys[index]}\n                        label={this.state.labelsForClient[index]}\n                        className={classes.textField}\n                        value={item}\n                        onChange={this.handleChange(keys[index])}\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        type=\"password\"\n                    />\n                </Grid>\n            )\n            index += 1\n        }\n        return textfields\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <Grid\n                container\n                alignItems=\"center\"\n                justify=\"center\"\n            >\n                <Grid item>\n                    <MuiThemeProvider theme={Theme.successWarningError}>\n                        <Button\n                            color=\"primary\"\n                            variant=\"contained\"\n                            size=\"small\"\n                            className={classes.button}\n                            onClick={this.submit}\n                        >\n                            <SaveIcon className={(classes.leftIcon, classes.iconSmall)} />\n                             Change\n                        </Button>\n                    </MuiThemeProvider>\n                </Grid>\n                <Grid xs={12} item>\n                    <form className={classes.container} noValidate autoComplete=\"off\">\n                        {this.generateTextfields()}\n                    </form>\n                </Grid>\n\n                <Snackbar\n                    handleSnackbarClose={this.handleSnackbarClose}\n                    open={this.state.openSnackbar}\n                    message={this.props.updatePasswordMsg}\n                />\n            </Grid>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    memberId: state.signin.member.memberId,\n    updatePasswordMsg: state.profile.updatePasswordMsg\n})\n\nconst mapDispatchToProps = {\n    onUpdateMemberPassword: _action.profileAction.updateMemberPassword\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(withStyles(style)(Password));","export const style = theme => ({\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n    },\n    dense: {\n        marginTop: 16,\n    },\n    menu: {\n        width: 200,\n    },\n    button: {\n        margin: theme.spacing.unit,\n        color: '#fff'\n    },\n    leftIcon: {\n        marginRight: theme.spacing.unit,\n    },\n    rightIcon: {\n        marginLeft: theme.spacing.unit,\n    },\n    iconSmall: {\n        fontSize: 20,\n    },\n});","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst styles = theme => ({\n    progress: {\n        margin: theme.spacing.unit * 2,\n    },\n});\n\nfunction MiniLoader(props) {\n    const { classes, size } = props;\n    return (\n        <div>\n            <CircularProgress className={classes.progress} size={size || 30} />\n        </div>\n    );\n}\n\nMiniLoader.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(MiniLoader);","import React from 'react'\nimport { connect } from 'react-redux'\nimport { style } from './Style'\nimport TextField from \"@material-ui/core/TextField/TextField\";\nimport {withStyles} from \"@material-ui/core\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch/Switch\";\nimport Button from \"@material-ui/core/Button/Button\";\nimport SaveIcon from '@material-ui/icons/Save';\nimport { Theme } from \"../../ui/palette/Palette\";\nimport {MuiThemeProvider} from \"@material-ui/core/es\";\nimport Grid from \"@material-ui/core/Grid/Grid\";\nimport _action from \"../../../actions\";\nimport Snackbar from \"../../ui/snackbar/Snackbar\"\nimport Avatar from \"@material-ui/core/Avatar/Avatar\";\nimport MiniLoader from \"../../ui/loader/MiniLoader\"\nimport classNames from 'classnames';\nimport Divider from \"@material-ui/core/Divider/Divider\";\nimport AddAPhotoIcon from '@material-ui/icons/AddAPhoto';\nimport { FilePond } from 'react-filepond';\nimport 'filepond/dist/filepond.min.css';\n\nclass Overview extends React.Component {\n    constructor (props) {\n        super(props)\n        this.handleChange = this.handleChange.bind(this)\n        this.submit = this.submit.bind(this)\n        this.changePicture = this.changePicture.bind(this)\n        this.handleProfilePicture = this.handleProfilePicture.bind(this)\n\n        this.state = {\n            labelsForClient: ['First name', 'Last name', 'Pseudo'],\n            memberFirstname: this.props.member.memberFirstname,\n            memberLastname: this.props.member.memberLastname,\n            memberPseudo: this.props.member.memberPseudo,\n            memberEmail: this.props.member.memberEmail,\n            isEditable: false,\n            openSnackbar: false\n        }\n    }\n\n    // Update member state with new informations of textfields\n    handleChange = name => event => {\n        this.setState({ [name]: event.target.value });\n    };\n\n    // Make textfields editable\n    handleIsEditable = name => event => {\n        this.setState({ [name]: event.target.checked });\n    };\n\n    // Submit the member form to update db and store\n    submit () {\n        let body = {\n            memberId: this.props.member.memberId,\n            memberFirstname: this.state.memberFirstname,\n            memberLastname: this.state.memberLastname,\n            memberEmail: this.state.memberEmail,\n            memberPseudo: this.state.memberPseudo\n        }\n        this.props.onUpdateMember(body)\n        this.setState({\n            openSnackbar: true,\n            isEditable: false\n        })\n    }\n\n    handleProfilePicture (event) {\n        this.setState({\n            file: event.target.files[0]\n        })\n    }\n\n    changePicture () {\n        if (this.state.file) {;\n            const formData = new FormData()\n            formData.append('image', this.state.file[0], this.state.file[0].name)\n\n            this.props.onUpdateMemberPicture(formData, this.props.member.memberId)\n            this.setState({\n                openSnackbar: true,\n                isEditable: false\n            })\n        }\n    }\n\n    // Handle the snackbar state\n    handleSnackbarClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        this.setState({ openSnackbar: false });\n    };\n\n    // Loop that create textfields\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <Grid\n                container\n                alignItems=\"center\"\n                justify=\"center\"\n            >\n                <Grid container justify='center' className={ classes.logoContainer }>\n                    { !this.props.isLoading ? (\n                        <Avatar\n                            alt={this.state.memberFirstname + 'sharp'}\n                            src={this.props.member.memberPicture}\n                            className={classNames(classes.avatar, classes.bigAvatar)}\n                        />\n                    ) : (\n                        <MiniLoader size={200} />\n                    )}\n\n                </Grid>\n                <Grid justify='center' alignItems='center' container>\n                    <Grid xs={4} item>\n                        <FilePond\n                            maxFiles={3}\n                            className={classes.upload }\n                            onupdatefiles={(fileItems) => {\n                                // Set current file objects to this.state\n                                this.setState({\n                                    file: fileItems.map(fileItem => fileItem.file)\n                                });\n                            }}\n                        />\n                    </Grid>\n                    <Button\n                        color=\"primary\"\n                        variant=\"contained\"\n                        size=\"small\"\n                        className={classes.button}\n                        disabled={!this.state.isEditable}\n                        onClick={this.changePicture}\n                    >\n                        <AddAPhotoIcon className={(classes.leftIcon, classes.iconSmall)} />\n                    </Button>\n                </Grid>\n                <Grid justify='center' container>\n                    <Grid item xs={12}>\n                        <Divider/>\n                    </Grid>\n                </Grid>\n                <Grid container justify='flex-start'>\n                    <FormControlLabel\n                        control={\n                            <Switch\n                                checked={this.state.isEditable}\n                                onChange={this.handleIsEditable('isEditable')}\n                                value=\"isEditable\"\n                                color=\"primary\"\n                            />\n                        }\n                        label=\"Edit informations\"\n                    />\n                    <MuiThemeProvider theme={Theme.successWarningError}>\n                        <Button\n                            color=\"primary\"\n                            variant=\"contained\"\n                            size=\"small\"\n                            className={classes.button}\n                            disabled={!this.state.isEditable}\n                            onClick={this.submit}\n                        >\n                            <SaveIcon className={(classes.leftIcon, classes.iconSmall)} />\n                            Save\n                        </Button>\n                    </MuiThemeProvider>\n                </Grid>\n                <Grid item>\n\n                </Grid>\n                <Grid container justify=\"flex-start\">\n                    <form className={classes.container} noValidate autoComplete=\"off\">\n                        <TextField\n                            disabled={!this.state.isEditable}\n                            id='memberFirstname'\n                            label='Firstname'\n                            className={classes.textField}\n                            value={this.state.memberFirstname}\n                            onChange={this.handleChange('memberFirstname')}\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                        />\n                        <TextField\n                            disabled={!this.state.isEditable}\n                            id='memberLastname'\n                            label='Lastname'\n                            className={classes.textField}\n                            value={this.state.memberLastname}\n                            onChange={this.handleChange('memberLastname')}\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                        />\n                        <TextField\n                            disabled={!this.state.isEditable || this.props.member.memberIsLinkWithGithub}\n                            id='memberPseudo'\n                            label='Pseudo'\n                            className={classes.textField}\n                            value={this.state.memberPseudo}\n                            onChange={this.handleChange('memberPseudo')}\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                        />\n                        <TextField\n                            disabled={!this.state.isEditable || this.props.member.memberEmail !== null}\n                            id='memberEmail'\n                            label='Email'\n                            className={classes.textField}\n                            value={this.state.memberEmail}\n                            onChange={this.handleChange('memberEmail')}\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                        />\n                    </form>\n                </Grid>\n                <Snackbar\n                    handleSnackbarClose={this.handleSnackbarClose}\n                    open={this.state.openSnackbar}\n                    message=\"Informations updated.\"\n                />\n            </Grid>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    member: state.signin.member,\n    isLoading: state.profile.isLoading\n})\n\nconst mapDispatchToProps = {\n    onUpdateMember: _action.profileAction.updateMember,\n    onUpdateMemberPicture: _action.profileAction.updateMemberPicture\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(withStyles(style)(Overview));","export const style = theme => ({\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n    },\n    dense: {\n        marginTop: 16,\n    },\n    menu: {\n        width: 200,\n    },\n    button: {\n        margin: theme.spacing.unit,\n        color: '#fff'\n    },\n    leftIcon: {\n        marginRight: theme.spacing.unit,\n    },\n    rightIcon: {\n        marginLeft: theme.spacing.unit,\n    },\n    iconSmall: {\n        fontSize: 20,\n    },\n    avatar: {\n        margin: 10,\n    },\n    bigAvatar: {\n        width: 200,\n        height: 200,\n    },\n    logoContainer: {\n        marginBottom: theme.spacing.unit * 5,\n    },\n    upload: {\n        color: 'black',\n        width: '100%'\n    }\n});","import React from 'react'\nimport { connect } from 'react-redux'\nimport Menu from '../ui/menu/Menu'\nimport {Grid, withStyles} from \"@material-ui/core\";\nimport {Redirect, Route, Router, Switch} from \"react-router-dom\";\nimport Password from './password/Password'\nimport Overview from \"./overview/Overview\";\nimport AccountBoxIcon from '@material-ui/icons/AccountBox'\nimport FingerprintIcon from '@material-ui/icons/Fingerprint'\nimport _helper from '../../helpers'\nimport { style } from './Style'\n\nclass Profile extends React.Component {\n\n    render() {\n\n        const links = [\n            {label: 'Overview', route: '/profile/overview', icon: <AccountBoxIcon/>},\n            {label: 'Change Password', route: '/profile/password', icon: <FingerprintIcon/>}\n        ];\n\n        const { classes } = this.props;\n\n        return (\n            <Grid container spacing={16} className={classes.body}>\n                <Grid item xs={3} >\n                    <Menu links={links} history={_helper.History}/>\n                </Grid>\n\n                <Grid item xs={9}>\n                    <Router history={_helper.History}>\n                        <Switch>\n                            <Route component={Overview} exact path='/profile/overview'/>\n                            <Route component={Password} exact path='/profile/password'/>\n                            <Route component={Overview} exact path='/profile/parameters'/>\n                            <Route path='*' render={() => <Redirect to=\"/profile/overview\" />}/>\n                        </Switch>\n                    </Router>\n                </Grid>\n            </Grid>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n})\n\nconst mapDispatchToProps = {\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(withStyles(style)(Profile));","export const style = theme => ({\n    body: {\n        width: '100%',\n        paddingLeft: 8\n    },\n});\n\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport FormControlLabel from \"@material-ui/core/FormControlLabel/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox/Checkbox\";\nimport _action from \"../../../actions\";\nimport connect from \"react-redux/es/connect/connect\";\nimport Tooltip from \"@material-ui/core/Tooltip/Tooltip\";\nimport Fade from \"@material-ui/core/Fade/Fade\";\n\nconst styles = {\n    card: {\n        width: '100%',\n    },\n    cardUnread: {\n        width: '100%',\n        backgroundColor: '#e7ecff'\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        paddingBottom: 0,\n    },\n    content: {\n        paddingTop: 10,\n        paddingBottom: 0,\n    }\n};\n\nclass Notification extends React.Component {\n    /*  Need to get a property notification which is an objects\n     *  object = {\n     *      actionId: Int,\n     *      actionType: Int,\n     *      actionTitle: String,\n     *      actionDescription: String,\n     *      memberId: Int\n     *  }\n     */\n\n    constructor (props) {\n        super(props)\n        this.handleChange = this.handleChange.bind(this);\n\n        this.state = {\n            isRead: this.props.notification.mhaStatus === 1,\n            updatedNotifications: []\n        }\n    }\n\n    handleChange = name => event => {\n        this.setState({ [name]: event.target.checked });\n        var item = this.props.notification\n        var index = this.props.notifications.indexOf(item)\n        if (event.target.checked) {\n            item.mhaStatus = 1\n        }\n        else item.mhaStatus = 0\n\n        // Update the notification in the store\n        this.props.onHandleCheckbox(this.props.notifications, item, index, event.target.checked, this.props.notificationsUnread)\n\n        // Store the new item in navbar array, which will update the database\n        // this.props.updateNotification(item)\n    };\n\n    computeBackground = () => {\n        const { classes } = this.props;\n        if (this.props.notification.mhaStatus === 1) return classes.card\n        else return classes.cardUnread\n    }\n\n    render() {\n        const { classes } = this.props;\n        const notification = this.props.notification\n\n        return (\n            <Card className={this.computeBackground()}>\n                <CardContent className={classes.content}>\n                    <Typography align='right' variant=\"caption\" className={classes.pos}>\n                        {notification.Action.actionDateCreation}\n                    </Typography>\n                    <Tooltip\n                        TransitionComponent={Fade}\n                        TransitionProps={{ timeout: 600 }}\n                        title=\"Mark as read\"\n                        placement=\"top-start\">\n                        <FormControlLabel\n                            control={\n                                <Checkbox\n                                    checked={this.state.isRead}\n                                    onChange={this.handleChange('isRead')}\n                                    value=\"isRead\"\n                                    color=\"primary\"\n                                />\n                            }\n                            label={notification.Action.actionTitle}\n                        />\n                    </Tooltip>\n                    <Typography className={classes.pos} variant=\"caption\">\n                        {notification.Action.actionDescription}\n                    </Typography>\n                </CardContent>\n            </Card>\n        );\n    }\n}\n\nNotification.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    notifications: state.navbar.notifications,\n    notificationsUnread: state.navbar.notificationsUnread\n})\n\nconst mapDispatchToProps = {\n    onHandleCheckbox: _action.navbarAction.handleCheckboxNotification\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(withStyles(styles)(Notification));","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Notification from \"./Notification\"\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\n\nconst styles = theme => ({\n    menuItem: {},\n    primary: {},\n    icon: {},\n    list: {\n        width: 300,\n    },\n    fullList: {\n        width: 'auto',\n    }\n});\n\nclass NotificationList extends React.Component {\n    /*  Need to get a property notifications which is an array of objects\n     *  object = {\n     *      actionId: Int,\n     *      actionType: Int,\n     *      actionTitle: String,\n     *      actionDescription: String,\n     *      memberId: Int\n     *  }\n     */\n    constructor (props) {\n        super(props)\n        this.state = {\n\n        }\n    }\n\n    render() {\n        const {classes} = this.props;\n\n        return (\n            <div className={classes.list}>\n                <List>\n                    {this.props.notifications.map((notification, index) =>\n                        this.props.unreadFilter ?\n                            notification.mhaStatus === 0 ?\n                                <ListItem key={index}>\n                                    <Notification\n                                        notification={notification}\n                                        notifications={this.props.notifications}\n                                        notificationsUnread={this.props.notificationsUnread}\n                                    />\n                                </ListItem>\n                            : null\n                        :\n                            <ListItem key={index}>\n                                <Notification\n                                    notification={notification}\n                                    notifications={this.props.notifications}\n                                    notificationsUnread={this.props.notificationsUnread}\n                                />\n                            </ListItem>\n                    )}\n                </List>\n            </div>\n        );\n    }\n}\n\nNotificationList.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(NotificationList);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport deburr from 'lodash/deburr';\nimport Downshift from 'downshift';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { style } from './Style'\nimport connect from \"react-redux/es/connect/connect\";\nimport _action from \"../../../../actions\";\nimport _helper from \"../../../../helpers\";\n\nimport Typography from \"@material-ui/core/Typography/Typography\";\nimport Divider from \"@material-ui/core/Divider/Divider\";\n\nclass SearchResults extends React.Component {\n\n    constructor (props) {\n        super(props)\n        this.fetchSuggestions = this.fetchSuggestions.bind(this)\n        this.getSuggestions = this.getSuggestions.bind(this)\n        this.setWrapperRef = this.setWrapperRef.bind(this);\n        this.handleClickOutside = this.handleClickOutside.bind(this);\n        this.renderSuggestion = this.renderSuggestion.bind(this)\n        this.handleClickSuggestion = this.handleClickSuggestion.bind(this)\n        this.renderSuggestion.propTypes = {\n            highlightedIndex: PropTypes.number,\n            index: PropTypes.number,\n            itemProps: PropTypes.object,\n            selectedItem: PropTypes.string,\n            suggestion: PropTypes.shape({ label: PropTypes.string }).isRequired,\n        };\n        this.state = ({\n            searchInput: '',\n            isOpen: false\n        })\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    renderSuggestion({ suggestion, index, itemProps, highlightedIndex, selectedItem, type }) {\n        const isSelected = (selectedItem || '').indexOf(suggestion.label) > -1;\n        var id = ''\n        if (type === 'project') id += 'project/' + suggestion.id\n        if (type === 'list') id += 'list/' + suggestion.projectId + '/' + suggestion.id\n        if (type === 'card') id += 'card/' + suggestion.projectId + '/' + suggestion.listId + '/' + suggestion.id\n        const { classes } = this.props;\n\n        return (\n            <MenuItem\n                {...itemProps}\n                key={id}\n                id={id}\n                className={ classes.highlight }\n                onClick={this.handleClickSuggestion}\n                component=\"div\"\n                style={{\n                    fontWeight: isSelected ? 500 : 400,\n                }}\n            >\n\n                {suggestion.label}\n            </MenuItem>\n        );\n    }\n\n    fetchSuggestions = (event) => {\n        var { name, value } = event.target;\n        this.setState({ [name]: value });\n\n        this.props.onSearchProjects(value, this.props.memberId)\n        this.props.onSearchLists(value, this.props.memberId)\n        this.props.onSearchCards(value, this.props.memberId)\n    }\n\n    /**\n     * Set the wrapper ref for the click outside handler\n     */\n    setWrapperRef(node) {\n        this.wrapperRef = node;\n    }\n\n    /**\n     * Alert if clicked on outside of element\n     */\n    handleClickOutside(event) {\n        if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\n            this.setState({ isOpen: false })\n        } else {\n            this.setState({ isOpen: true })\n        }\n    }\n\n    getSuggestions(value, array) {\n        const inputValue = deburr(value.trim());\n        const inputValueLower = inputValue.toLowerCase();\n        const inputValueCapitalize = inputValue.charAt(0).toUpperCase() + inputValue.slice(1);\n\n        const inputLength = inputValue.length;\n\n        let count = 0;\n\n        return inputLength === 0\n            ? []\n            : array.filter(suggestion => {\n                const keep =\n                    count < 5 && ( suggestion.label.includes(inputValue) ||\n                    suggestion.label.includes(inputValueLower) ||\n                    suggestion.label.includes(inputValueCapitalize)\n                    );\n\n                if (keep) {\n                    count += 1;\n                }\n                return keep;\n            });\n    }\n\n    handleClickSuggestion (event) {\n        let split = event.target.id.split('/')\n        let route = '/project/' + split[1]\n        if (split[0] === 'card') route += '/' + split[2] + '/' + split[3]\n        this.setState({\n            isOpen: false,\n            searchInput: ''\n        })\n        this.props.onResetSearchArrays()\n        _helper.History.push(route)\n    }\n\n    render() {\n\n        const { classes } = this.props;\n        return (\n            <div className={classes.root} ref={this.setWrapperRef}>\n                <Downshift id=\"downshift-simple\">\n                    {({\n                          getInputProps,\n                          getItemProps,\n                          getMenuProps,\n                          highlightedIndex,\n                          inputValue,\n                          isOpen,\n                          selectedItem,\n                      }) => (\n                        <div className={classes.container}>\n                            <TextField\n                                InputProps={{\n                                    classes: {\n                                        root: classes.inputRoot,\n                                        input: classes.inputInput,\n                                    }\n                                }}\n                                required\n                                id='searchInput'\n                                name=\"searchInput\"\n                                fullWidth\n                                onChange={this.fetchSuggestions}\n                                value={this.state.searchInput}\n                            />\n                            <div {...getMenuProps()}>\n                                {this.state.isOpen && this.state.input !== '' ? (\n                                    <Paper className={classes.paper} square>\n                                        {this.props.projects.length > 0 ?(\n                                            <div>\n                                                <div id='label' className={classes.labelSearchTitle}>\n                                                    <Typography variant=\"overline\" >\n                                                        Projects {this.props.projects.length}\n                                                    </Typography>\n                                                </div>\n                                                <Divider/>\n                                                {this.getSuggestions(this.state.searchInput, this.props.projects).map((suggestion, index) => {\n                                                        return this.renderSuggestion({\n                                                            suggestion,\n                                                            index,\n                                                            itemProps: getItemProps({item: suggestion.label}),\n                                                            highlightedIndex,\n                                                            selectedItem,\n                                                            type: 'project'\n                                                        })\n                                                    }\n                                                )}\n                                                <Divider/>\n                                            </div>\n                                        ) : null}\n\n                                        {this.props.lists.length > 0 ?(\n                                            <div>\n                                                <div id='label' className={classes.labelSearchTitle}>\n                                                    <Typography variant=\"overline\" >\n                                                        Lists\n                                                    </Typography>\n                                                </div>\n                                                <Divider/>\n                                                {this.getSuggestions(this.state.searchInput, this.props.lists).map((suggestion, index) => {\n                                                        return this.renderSuggestion({\n                                                            suggestion,\n                                                            index,\n                                                            itemProps: getItemProps({item: suggestion.label}),\n                                                            highlightedIndex,\n                                                            selectedItem,\n                                                            type: 'list'\n                                                        })\n                                                    }\n                                                )}\n                                                <Divider/>\n                                            </div>\n                                        ) : null}\n\n                                        {this.props.cards.length > 0 ?(\n                                            <div>\n                                                <div id='label' className={classes.labelSearchTitle}>\n                                                    <Typography variant=\"overline\" >\n                                                        Cards\n                                                    </Typography>\n                                                </div>\n                                                <Divider/>\n                                                {this.getSuggestions(this.state.searchInput, this.props.cards).map((suggestion, index) => {\n                                                        return this.renderSuggestion({\n                                                            suggestion,\n                                                            index,\n                                                            itemProps: getItemProps({item: suggestion.label}),\n                                                            highlightedIndex,\n                                                            selectedItem,\n                                                            type: 'card'\n                                                        })\n                                                    }\n                                                )}\n                                            </div>\n                                        ) : null}\n                                    </Paper>\n                                ) : null}\n                            </div>\n                        </div>\n                    )}\n                </Downshift>\n            </div>\n        );\n    }\n}\n\nSearchResults.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    projects: state.searchbar.projectsFound,\n    lists: state.searchbar.listsFound,\n    cards: state.searchbar.cardsFound,\n    memberId: state.signin.member.memberId\n})\nconst mapDispatchToProps = {\n    onSearchProjects : _action.searchbarAction.searchProjects,\n    onSearchLists : _action.searchbarAction.searchLists,\n    onSearchCards : _action.searchbarAction.searchCards,\n    onResetSearchArrays: _action.searchbarAction.resetSearchArrays\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(style)(SearchResults));","export const style = theme => ({\n    root: {\n        flexGrow: 1,\n        //height: 250,\n    },\n    container: {\n        flexGrow: 1,\n        position: 'relative',\n    },\n    paper: {\n        position: 'absolute',\n        zIndex: 2,\n        opacity: 1,\n        marginTop: theme.spacing.unit,\n        left: 0,\n        right: 0,\n    },\n    chip: {\n        margin: `${theme.spacing.unit / 2}px ${theme.spacing.unit / 4}px`,\n    },\n    inputRoot: {\n        color: 'inherit',\n        width: '100%',\n    },\n    inputInput: {\n        paddingTop: theme.spacing.unit,\n        paddingRight: theme.spacing.unit,\n        paddingBottom: theme.spacing.unit,\n        paddingLeft: theme.spacing.unit * 10,\n        transition: theme.transitions.create('width'),\n\n        width: '100%',\n        [theme.breakpoints.up('md')]: {\n            width: 200,\n        },\n    },\n    divider: {\n        height: theme.spacing.unit * 2,\n    },\n    labelSearchTitle: {\n        paddingLeft: theme.spacing.unit * 2\n    },\n    highlight: {\n        // WARNING : Trigger a warning in the console. Need to find another way to hover result's list.\n        /*'&:hover:not($disabled):not($error):not($focused):before': {\n            //backgroundColor: '#e72b34',\n            borderBottomColor: '#cdcde7',\n        },*/\n    }\n});\n\n\n","import React from 'react';\nimport { connect } from 'react-redux'\nimport { Link } from \"react-router-dom/\";\n\nimport _helper from '../../../helpers'\nimport _action from \"../../../actions\";\n\n// Components\nimport NotificationList from '../../ui/notification/NotificationList'\nimport SearchResults from \"./searchResults/SearchResults\"\nimport Logo from '../../../public/images/prello-logo-2.png'\n\n// Material UI\nimport Menu from '@material-ui/core/Menu';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport Drawer from \"@material-ui/core/Drawer/Drawer\";\nimport Divider from \"@material-ui/core/Divider/Divider\";\nimport Button from \"@material-ui/core/Button/Button\";\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\n\n// Material UI style\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { style } from './Style'\nimport { Theme } from \"../../ui/palette/Palette\";\nimport { MuiThemeProvider } from \"@material-ui/core/es/styles\";\nimport Grid from \"@material-ui/core/Grid/Grid\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch/Switch\";\n\nclass Navbar extends React.Component {\n\n    constructor (props) {\n        super(props)\n\n        this.logOff = this.logOff.bind(this);\n\n        // Notifications\n        this.updateNotifications = this.updateNotifications.bind(this)\n        this.handleFilterChange = this.handleFilterChange.bind(this)\n        this.toggleDrawer = this.toggleDrawer.bind(this)\n\n        // Profile\n        this.displayComponent = this.displayComponent.bind(this)\n\n        this.state = {\n            anchorEl: null,\n            mobileMoreAnchorEl: null,\n            resultsAnchorEl: null,\n            right: false,\n            showSearchResults: false,\n            filterOnlyUnread: false\n        };\n    }\n\n    componentDidMount () {\n        this.props.onGetAllNonArchivedNotifications()\n    }\n\n    /* ================= Profile regular ================= */\n    handleProfileMenuOpen = event => {\n        this.setState({\n            anchorEl: event.currentTarget\n        });\n    };\n    handleMenuClose = (event) => {\n        this.setState({\n            anchorEl: null\n        });\n        this.displayComponent(event)\n        this.handleMobileMenuClose();\n    };\n    displayComponent = (event) => {\n        let route = event.currentTarget.id\n        if (route !== '/login' && route !== '') {\n            _helper.History.push(route)\n        }\n    }\n\n    /* ================= Profile mobile ================= */\n    handleMobileMenuOpen = event => {\n        this.setState({ mobileMoreAnchorEl: event.currentTarget });\n    };\n    handleMobileMenuClose = () => {\n        this.setState({ mobileMoreAnchorEl: null });\n    };\n\n    /** ================= Notifications ================= */\n    toggleDrawer = (side, open) => () => {\n        this.updateNotifications()\n        this.setState({\n            [side]: open,\n        });\n    }\n    updateNotifications () {\n        this.props.onUpdateNotifications(this.props.notifications)\n    }\n    handleFilterChange = name => event => {\n        this.setState({ [name]: event.target.checked });\n    };\n    handleFilter = name => event => {\n        this.setState({ [name]: event.target.checked });\n    };\n\n    /** ================= Search results ================= */\n    handleSearchResultsOpen = event => {\n        this.setState({showSearchResults: event.target.id === \"searchbar\" });\n    };\n    handleSearchResultsClose = () => {\n        this.setState({ showSearchResults: false });\n    };\n\n    /** ================= Other methods ================= */\n    logOff (event) {\n        this.handleMenuClose(event)\n        this.props.onLogOff()\n    }\n\n    goToDownloadPage () {\n        _helper.History.push('/download')\n    }\n\n    render() {\n        const { anchorEl, mobileMoreAnchorEl, resultsAnchorEl } = this.state;\n        const { classes } = this.props;\n        const isMenuOpen = Boolean(anchorEl);\n        const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n        const isSearchResultsOpen = Boolean(resultsAnchorEl);\n\n        /** ================= Profile regular ================= */\n        const renderMenu = (\n            <Menu\n                anchorEl={anchorEl}\n                anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n                transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n                open={isMenuOpen}\n                className={classes.openedMenu}\n                onClose={this.handleMenuClose}\n            >\n                <MenuItem id='/profile/overview' onClick={this.handleMenuClose}>Profile</MenuItem>\n                <MenuItem id='/login' onClick={this.logOff}>Log off</MenuItem>\n            </Menu>\n        );\n\n        /** ================= Notifications ================= */\n        const renderNotifications = (\n            <Drawer\n                anchor=\"right\"\n                open={this.state.right}\n                onClose={this.toggleDrawer('right', false)}\n            >\n                <div\n                    tabIndex={0}\n                    role=\"button\"\n                    onKeyDown={this.toggleDrawer('right', false)}\n                >\n                    <Grid alignItems='center' justify='center' container>\n                        <Grid xs={2} item>\n                            <IconButton\n                                onClick={this.toggleDrawer('right', false)}\n                                color=\"inherit\"\n                            >\n                                <ChevronLeftIcon color='primary' />\n                            </IconButton>\n                        </Grid>\n                        <Grid xs={8} item>\n                            <Button fullWidth color=\"primary\" className={classes.button}>\n                                {this.props.notificationsUnread} Notifications\n                            </Button>\n                        </Grid>\n                        <Grid xs={2} item>\n                        </Grid>\n                    </Grid>\n                    <Divider/>\n                    <div className={classes.notificationList}>\n                        <NotificationList\n                            notifications={this.props.notifications}\n                            notificationsUnread={this.props.notificationsUnread}\n                            unreadFilter={this.state.filterOnlyUnread}\n                        />\n                    </div>\n                    <Divider/>\n\n                    <Button fullWidth color=\"primary\" className={classes.button}>\n                        Filters\n                    </Button>\n                    <Divider/>\n                    <Grid justify=\"center\" container>\n                        <FormControlLabel\n                            control={\n                                <Switch\n                                    checked={this.state.filterOnlyUnread}\n                                    onChange={this.handleFilter('filterOnlyUnread')}\n                                    value=\"filterOnlyUnread\"\n                                    color=\"primary\"\n                                />\n                            }\n                            label=\"Only unread\"\n                        />\n                    </Grid>\n                </div>\n            </Drawer>\n        );\n\n        /* ================= Profile mobile ================= */\n        const renderMobileMenu = (\n            <Menu\n                anchorEl={mobileMoreAnchorEl}\n                anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n                transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n                open={isMobileMenuOpen}\n                onClose={this.handleMobileMenuClose}\n            >\n                <MenuItem onClick={this.goToDownloadPage}>\n                    <IconButton color=\"primary\">\n                        <GetAppIcon />\n                    </IconButton>\n                    <p>Download</p>\n                </MenuItem>\n                <MenuItem onClick={this.toggleDrawer('right', true)}>\n                    <IconButton color=\"primary\">\n                        <Badge badgeContent={this.props.notificationsUnread} color=\"secondary\">\n                            <NotificationsIcon />\n                        </Badge>\n                    </IconButton>\n                    <p>Notifications</p>\n                </MenuItem>\n                <MenuItem onClick={this.handleProfileMenuOpen}>\n                    <IconButton coloar=\"primary\">\n                        <AccountCircle />\n                    </IconButton>\n                    <p>Profile</p>\n                </MenuItem>\n            </Menu>\n        );\n\n        /* ================= Search results ================= */\n        const renderSearchResults = (\n            <Menu\n                anchorEl={resultsAnchorEl}\n                anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n                transformOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n                open={isSearchResultsOpen}\n                onClose={this.handleSearchResultsClose}\n            >\n                <SearchResults/>\n            </Menu>\n        );\n\n        /* ================= TOOL BAR ================= */\n        /* ================= TOOL BAR ================= */\n        return (\n            <MuiThemeProvider theme={Theme.classic}>\n                <div className={classes.root}>\n                    <AppBar position=\"static\">\n                        <Toolbar variant=\"dense\">\n                            <Link to='/home'>\n                                <IconButton className={classes.menuButton} color=\"inherit\">\n                                    <img src={Logo} width={30} color=\"secondary\" alt='prello logo' />\n                                </IconButton>\n                            </Link>\n\n                            <div\n                                className={classes.search}\n                            >\n                                <div className={classes.searchIcon}>\n                                    <SearchIcon />\n                                </div>\n\n                                <SearchResults/>\n\n                            </div>\n                            <div className={classes.grow} />\n                            <div className={classes.sectionDesktop}>\n                                <IconButton\n                                    aria-owns={isMenuOpen ? 'material-appbar' : null}\n                                    aria-haspopup=\"true\"\n                                    onClick={this.goToDownloadPage}\n                                    color=\"inherit\"\n                                >\n                                    <GetAppIcon />\n                                </IconButton>\n                                <IconButton\n                                    aria-owns={isMenuOpen ? 'material-appbar' : null}\n                                    aria-haspopup=\"true\"\n                                    onClick={this.toggleDrawer('right', true)}\n                                    color=\"inherit\"\n                                >\n                                    <Badge badgeContent={this.props.notificationsUnread} color=\"secondary\">\n                                        <NotificationsIcon />\n                                    </Badge>\n                                </IconButton>\n                                <IconButton\n                                    aria-owns={isMenuOpen ? 'material-appbar' : null}\n                                    aria-haspopup=\"true\"\n                                    onClick={this.handleProfileMenuOpen}\n                                    color=\"inherit\"\n                                >\n                                    <AccountCircle />\n                                </IconButton>\n                            </div>\n                            <div className={classes.sectionMobile}>\n                                <IconButton aria-haspopup=\"true\" onClick={this.handleMobileMenuOpen} color=\"inherit\">\n                                    <MoreIcon />\n                                </IconButton>\n                            </div>\n                        </Toolbar>\n                    </AppBar>\n                    {renderMenu}\n                    {renderSearchResults}\n                    {renderMobileMenu}\n                    {renderNotifications}\n                    { this.state.showSearchResults ? <SearchResults/> : null }\n                </div>\n            </MuiThemeProvider>\n        );\n    }\n}\n\nNavbar.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n    notifications: state.navbar.notifications,\n    notificationsUnread: state.navbar.notificationsUnread,\n    notificationsUnarchived: state.navbar.notificationsUnarchived\n\n})\n\nconst mapDispatchToProps = {\n    onLogOff: _action.navbarAction.logOff,\n    onGetAllNonArchivedNotifications: _action.navbarAction.getAllNonArchivedNotifications,\n    onUpdateNotifications: _action.navbarAction.updateNotifications,\n    onShowOnlyUnread: _action.notificationAction.showOnlyUnreadAction\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(style)(Navbar));","import { fade } from '@material-ui/core/styles/colorManipulator';\n\n\nexport const style = theme => ({\n    root: {\n        width: '100%',\n        marginBottom: theme.spacing.unit * 4\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginLeft: -12,\n        marginRight: 20,\n    },\n    title: {\n        display: 'none',\n        [theme.breakpoints.up('sm')]: {\n            display: 'block',\n        },\n    },\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginRight: theme.spacing.unit * 2,\n        marginLeft: 0,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing.unit * 3,\n            width: 'auto',\n        },\n    },\n    searchIcon: {\n        width: theme.spacing.unit * 9,\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n        width: '100%',\n    },\n    inputInput: {\n        paddingTop: theme.spacing.unit,\n        paddingRight: theme.spacing.unit,\n        paddingBottom: theme.spacing.unit,\n        paddingLeft: theme.spacing.unit * 10,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('md')]: {\n            width: 200,\n        },\n    },\n    sectionDesktop: {\n        display: 'none',\n        [theme.breakpoints.up('md')]: {\n            display: 'flex',\n        },\n    },\n    sectionMobile: {\n        display: 'flex',\n        [theme.breakpoints.up('md')]: {\n            display: 'none',\n        },\n    },\n    openedMenu: {\n        textDecoration: 'none',\n        marginTop: 55\n    },\n    openedNotifications: {\n        marginTop: 72\n    },\n    list: {\n        width: 250,\n    },\n    fullList: {\n        width: 'auto',\n    },\n    notificationList: {\n        overflowY: 'scroll',\n        height: theme.spacing.unit * 50,\n    },\n    button: {\n        margin: 0,\n    },\n    filterRow: {\n        marginLeft: theme.spacing.unit * 3\n    },\n});\n\n\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport _action from '../../actions'\n//import { style } from './Style'\nimport Loader from '../loaderPage/LoaderPage'\n\n\n// CSS imports\n//import { withStyles } from '@material-ui/core/styles';\n//import PropTypes from 'prop-types';\n\n\n\nclass TransitionGithub extends React.Component {\n    componentDidMount () {\n        let params = this.props.location.pathname.split('/')\n        let memberToken = params[2]\n        localStorage.setItem('memberToken', memberToken)\n        this.props.onIsMemberLogged()\n    }\n\n\n    render() {\n        return (\n            <Loader/>\n        )\n    }\n\n\n}\n\n// Signin.propTypes = {\n//     classes: PropTypes.object.isRequired\n// }\n\nconst mapStateToProps = (state) => ({\n})\nconst mapDispatchToProps = {\n    onIsMemberLogged: _action.signinAction.isMemberLoggedGithub,\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TransitionGithub);","export const styles = theme => ({\n    card: {\n        backgroundColor: '#FFFAF0',\n        padding: theme.spacing.unit,\n    },\n    media: {\n        height: 0,\n        paddingTop: '56.25%', // 16:9\n    },\n    actions: {\n        display: 'flex',\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n        marginLeft: 'auto',\n        [theme.breakpoints.up('sm')]: {\n            marginRight: -8,\n        },\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n    paper: {\n        position: 'absolute',\n        width: theme.spacing.unit * 80,\n        backgroundColor: '#FFFAF0',\n        //backgroundColor: theme.palette.background.paper,\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing.unit * 4,\n        display: 'table',\n        clear: 'both'\n    },\n    marginCard: {\n        marginTop: 10,\n        marginLeft: 10\n    },\n    row: {\n        display: 'flex',\n        justifyContent: 'right',\n        margin: 5\n    },\n    rowRight: {\n        display: 'flex',\n        justifyContent: 'right',\n        float: 'right'\n    },\n    sizeButtonModal: {\n        margin: 5,\n        maxWidth: '40px',\n        maxHeight: '40px',\n        minWidth: '40px',\n        minHeight: '40px'\n    },\n    column: {\n        float: 'left',\n        width: '70%',\n        padding: '10px',\n        margin: 5,\n    },\n    button: {\n        margin: theme.spacing.unit,\n    },\n    divider:{\n        margin: 15\n    },\n    buttonIcon:{\n        width: 43,\n        height: 43,\n        marginTop: 5,\n        display: 'block',\n        marginLeft:  'auto',\n        marginRight: 0\n    },\n    editButton:{\n        height: '5%',\n        display: 'block',\n        marginTop: 15,\n        marginLeft:  'auto',\n        marginRight: 0,\n        backgroundColor: 'Transparent',\n        border: 'none'\n    },\n    textArea:{\n        width: '100%'\n    },\n    buttonModal:{\n        marginLeft: 12,\n        marginBottom: 10,\n        width: '23%'\n    },\n    comments:{\n        display: 'flex',\n        width:'100%'\n    },\n    iconComments:{\n        marginLeft:  15,\n        marginRight: 0,\n        display: 'block'\n    },\n    done:{\n        color:'green'\n    },\n    markdown:{\n        backgroundColor : 'lightgrey',\n    },\n    mdeSize: {\n        //height: 100\n    },\n    buttonLabel: {\n        margin: 0,\n        padding: 0,\n        width: '5px !important',\n        heigth: '5px !important'\n    },\n    orangeAvatar: {\n        margin: 2,\n        color: '#17394d',\n        backgroundColor: '#dfe3e6',\n        height: '28px',\n        width: '28px',\n        fontSize: '15px',\n        fontStyle: 'bold'\n    },\n    avatar: {\n        margin: 2,\n    },\n    littleAvatar: {\n        width: 28,\n        height: 28,\n    },\n    moreIcon: {\n        padding: 4,\n    },\n    firstRow: {\n        marginRight: 10\n    },\n    scrollContainer: {\n        overflowY: 'scroll',\n        height: theme.spacing.unit * 70,\n        paddingLeft: 2\n    },\n});","export const styles = theme => ({\n    form: {\n        margin: 20\n    },\n    deleteIcon: {\n        marginRight: 10\n    },\n    formLabel:{\n        marginTop: -17\n    },\n    addIcon: {\n        display: 'block',\n        marginLeft:  'auto',\n        marginRight: 20,\n        marginBottom: 20\n    },\n    button: {\n        margin: theme.spacing.unit,\n    },\n    dialogTitle:{\n        textAlign:`center`\n    },\n    memberList: {\n        overflowY: 'scroll',\n        height: theme.spacing.unit * 30,\n    },\n    marginBottom: {\n        marginBottom: 20\n    },\n    memberItem: {\n        //maxHeight: 10\n    },\n    validIcon:{\n        color:`#6bb53f`,\n    },\n    rightIcon: {\n        marginLeft: theme.spacing.unit,\n    },\n    marginSide: {\n        marginLeft: 5,\n        marginRight: 5\n    }\n});","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport { styles } from './StyleChecklist'\nimport Checkbox from \"@material-ui/core/Checkbox/Checkbox\";\nimport _action from \"../../../actions\";\nimport connect from \"react-redux/es/connect/connect\";\nimport * as PropTypes from \"prop-types\";\nimport MiniLoader from \"../../ui/loader/MiniLoader\";\nimport List from \"@material-ui/core/List/List\";\nimport ListItem from \"@material-ui/core/ListItem/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText/ListItemText\";\nimport {Cancel} from \"@material-ui/icons\";\nimport AddCircleIcon from '@material-ui/icons/AddCircle'\nimport IconButton from \"@material-ui/core/IconButton/IconButton\";\nimport Fade from \"@material-ui/core/Fade/Fade\";\nimport Tooltip from \"@material-ui/core/Tooltip/Tooltip\";\nimport Grid from \"@material-ui/core/Grid/Grid\";\nimport TextField from \"@material-ui/core/TextField/TextField\";\nimport Typography from \"@material-ui/core/Typography/Typography\";\n\nclass ChecklistDialog extends React.Component {\n    constructor (props) {\n        super(props)\n        this.handleRemoveTask = this.handleRemoveTask.bind(this)\n        this.state = {\n            card: this.props.card\n        }\n    }\n\n    handleClose = () => {\n        this.props.onClose(this.props.selectedValue);\n    };\n\n    handleChangeCheckbox = name => event => {\n        let index = event.target.id.split('/')[1]\n        let value = event.target.checked\n        let card = Object.assign({}, this.state.card)\n        card.TaskCardFks[index].chtState = value //TODO put and setState in this version its not immutable\n        let taskId = this.state.card.TaskCardFks[index].taskId\n\n        this.props.onUpdateTask(taskId, {chtState: value})\n        this.setState({ card: card });\n    };\n\n    handleCreateTask = event => {\n        let dom = document.querySelector('#newChecklist');\n        let value = dom.value;\n        if(value !== ''){\n            let cardId = this.props.card.cardId;\n            let newTask = {\n                taskTitle: value,\n                chtState: false,\n                cardId: cardId\n            };\n            let card = this.props.card\n            this.props.onCreateTask(newTask, card)\n        }\n    };\n\n    handleRemoveTask = event => {\n        let index = event.currentTarget.id;\n        let taskId = this.props.card.TaskCardFks[index].taskId\n        this.state.card.TaskCardFks.splice(index,1)\n        let card = this.props.card\n        this.props.onDeleteTask(taskId, card);\n        this.setState({ maj: true });\n    };\n\n    render() {\n        const { classes, onClose, selectedValue, onCreateTask, onUpdateTask, onDeleteTask, isLoading, ...other } = this.props;\n        return (\n            <Dialog onClose={this.handleClose} aria-labelledby=\"simple-dialog-title\" {...other} className={classes.dialog}>\n                <DialogTitle id=\"simple-dialog-title\" className={classes.dialogTitle}>Checklist</DialogTitle>\n                <List className={ classes.memberList + ' ' + classes.marginBottomTop }>\n                    { isLoading ? (\n                        <MiniLoader/>\n                    ) :  this.state.card.TaskCardFks ? this.props.card.TaskCardFks.map((task, index) => {\n                            return (\n                                <ListItem key={task.taskId} className={ classes.memberItem }>\n                                    <ListItemText primary={task.taskTitle}/>\n                                    <IconButton id={index} color=\"secondary\" onClick={this.handleRemoveTask}>\n                                        <Cancel />\n                                    </IconButton>\n                                    <Tooltip\n                                        TransitionComponent={Fade}\n                                        TransitionProps={{ timeout: 600 }}\n                                        title=\"Remove\"\n                                        placement=\"top-start\">\n                                        <Checkbox\n                                            checked={task.chtState}\n                                            id={'checklist/'+index}\n                                            onChange={this.handleChangeCheckbox('checklist')}\n                                            value='checklist'\n                                        />\n                                    </Tooltip>\n                                </ListItem>\n                            )\n                        }\n                    ) : null}\n                </List>\n                <Grid container justify='center'>\n                    <Grid xs={11} item>\n                        <Typography variant='caption'>\n                            Add a new task\n                        </Typography>\n                    </Grid>\n                </Grid>\n                <Grid justify='center' alignItems='flex-end' container className={ classes.marginBottom }>\n                    <Grid item xs={11}>\n                        <TextField\n                            id = 'newChecklist'\n                            label=\"task\"\n                            fullWidth\n                            //value={this.state.newTask}\n                            name=\"newChecklist\"\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            //onChange={this.handleChange('memberEmail')}\n                        />\n                    </Grid>\n                    <Grid item xs={11}>\n                        <Button\n                            fullWidth\n                            size='small'\n                            color=\"primary\"\n                            className={classes.validIcon}\n                            onClick={this.handleCreateTask.bind(this)}\n                        >\n                            Add\n                            <AddCircleIcon className={classes.rightIcon} />\n                        </Button>\n                    </Grid>\n                </Grid>\n            </Dialog>\n        );\n    }\n}\n\nChecklistDialog.propTypes = {\n    classes: PropTypes.object.isRequired,\n    onClose: PropTypes.func,\n    selectedValue: PropTypes.string,\n    onUpdateTask: PropTypes.func\n};\n\nconst ChecklistDialogWrapped = withStyles(styles)(ChecklistDialog);\n\n\nclass Checklist extends React.Component {\n    state = {\n        open: false\n    };\n\n    handleClickOpen = () => {\n        this.setState({\n            open: true,\n        });\n    };\n\n    handleClose = value => {\n        this.setState({open: false });\n    };\n\n    render() {\n        const { classes } = this.props\n\n        return (\n            <div>\n                <Button\n                    color=\"primary\"\n                    className={classes.button}\n                    fullWidth\n                    onClick={this.handleClickOpen}\n                >\n                    Checklist\n                </Button>\n                <ChecklistDialogWrapped\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    card = {this.props.card}\n                    onUpdateTask = {this.props.onUpdateTask}\n                    onDeleteTask = {this.props.onDeleteTask}\n                    onCreateTask = {this.props.onCreateTask}\n                />\n            </div>\n        );\n    }\n}\n\nChecklist.propTypes = {\n    classes: PropTypes.object,\n};\n\nconst mapStateToProps = (state) => ({\n    isLoading: state.card.isLoading\n});\nconst mapDispatchToProps = {\n    onUpdateTask : _action.cardAction.updateTask,\n    onDeleteTask : _action.cardAction.deleteTask,\n    onCreateTask : _action.cardAction.createTask\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Checklist));","export const styles = theme => ({\n    dialog: {\n      width: '300px'\n    },\n});","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport { styles } from './Style'\nimport _action from \"../../../actions/index\";\nimport connect from \"react-redux/es/connect/connect\";\nimport * as PropTypes from \"prop-types\";\nimport ListItem from \"@material-ui/core/ListItem/ListItem\";\nimport List from \"@material-ui/core/List/List\";\nimport Checkbox from \"@material-ui/core/Checkbox/Checkbox\";\nimport DialogContent from \"@material-ui/core/DialogContent/DialogContent\";\nimport Grid from \"@material-ui/core/Grid/Grid\";\n\n\nclass LabelDialog extends React.Component {\n    constructor (props) {\n        super(props);\n        this.handleChangeCheckbox = this.handleChangeCheckbox.bind(this)\n        this.state = {\n            card: this.props.card,\n            selectedIndex: 1,\n        }\n    }\n\n    handleChangeCheckbox = name => event => {\n        //let index = event.target.id.split('/')[1]\n        //let checked = event.target.checked\n        let index = event.target.id.split('/')[1]\n        let checked = event.target.checked\n        let label = this.props.labels[index]\n        let labelId = this.props.labels[index].labelId\n        let cardId = this.props.card.cardId\n\n        if(checked){\n            let newCard = Object.assign({}, this.state.card)\n            newCard.HaslabelCardFks.push({ cardId: cardId, labelId: labelId, Label: label  })\n            this.setState({card:newCard })\n            //this.state.card.HaslabelCardFks.push({ cardId: cardId, labelId: labelId, Label: label  }) //TODO use setState\n            this.props.onCreateLinkLabel({ cardId: cardId, labelId: labelId })\n        }else{\n            let indexLink = this.state.card.HaslabelCardFks.findIndex(list => list.labelId === labelId)\n            let newCard = Object.assign({}, this.state.card)\n            newCard.HaslabelCardFks.splice(indexLink,1)\n            this.setState({card:newCard })\n            //this.state.card.HaslabelCardFks.splice(indexLink,1) //TODO use setState\n            this.props.onDeleteLinkLabel({ cardId: cardId, labelId: labelId })\n        }\n        this.setState({ maj: true });\n    };\n\n    handleClose = () => {\n        this.props.onClose();\n    };\n\n    render() {\n        const { classes, onClose, selectedValue, onDeleteLinkLabel, onCreateLinkLabel, ...other } = this.props;\n        return (\n            <Dialog\n                onClose={this.handleClose}\n                aria-labelledby=\"simple-dialog-title\"\n                maxWidth=\"xs\"\n                {...other}\n            >\n                <DialogTitle id=\"simple-dialog-title\">Set labels</DialogTitle>\n                <DialogContent>\n                    <List component=\"nav\">\n                        { this.props.labels == null ? (\n                            null\n                        ) :  this.props.labels ? this.props.labels.map((label,index) => {\n                            return (\n                                <ListItem\n                                    key={label.labelId}\n                                    selected={this.state.selectedIndex === 2}\n                                >\n                                    <Grid justify='center' alignItems='center' container>\n                                        <Button variant=\"contained\" style={{backgroundColor: label.labelColor}}>\n                                            {' '}\n                                        </Button>\n                                        <Checkbox\n                                            style={{color: label.labelColor}}\n                                            id={'checklist/'+index}\n                                            onChange={this.handleChangeCheckbox('checklist')}\n                                            value='checklist'\n                                            checked = {!(this.state.card.HaslabelCardFks.find(link => link.labelId === label.labelId) === undefined)}\n                                        />\n                                    </Grid>\n                                </ListItem>\n                            )\n                        }):null}\n                        <ListItem>\n                            <Button\n                                color='primary'\n                                variant='outlined'\n                                fullWidth\n                                onClick={this.handleClose}\n                            >\n                                ok\n                            </Button>\n                        </ListItem>\n                    </List>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nLabelDialog.propTypes = {\n    classes: PropTypes.object.isRequired,\n    onClose: PropTypes.func,\n    selectedValue: PropTypes.string\n};\n\nconst LabelDialogWrapped = withStyles(styles)(LabelDialog);\n\n\nclass Label extends React.Component {\n    state = {\n        open: false\n    };\n\n    componentDidMount (){\n        this.props.onGetLabels(this.props.route.params.id)\n    };\n\n    handleClickOpen = () => {\n        this.setState({\n            open: true,\n        });\n    };\n\n    handleClose = value => {\n        this.setState({open: false });\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div>\n                <Button\n                    color=\"primary\"\n                    className={classes.button}\n                    fullWidth\n                    onClick={this.handleClickOpen}\n                >\n                    Label\n                </Button>\n                <LabelDialogWrapped\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    card = {this.props.card}\n                    labels = {this.props.labels}\n                    onCreateLinkLabel = {this.props.onCreateLinkLabel}\n                    onDeleteLinkLabel = {this.props.onDeleteLinkLabel}\n                />\n            </div>\n        );\n    }\n}\n\nLabel.propTypes = {\n    classes: PropTypes.object,\n};\n\nconst mapStateToProps = (state) => ({\n    labels: state.card.labels\n});\nconst mapDispatchToProps = {\n    onGetLabels : _action.cardAction.getLabels,\n    onCreateLinkLabel : _action.cardAction.createLinkLabel,\n    onDeleteLinkLabel : _action.cardAction.deleteLinkLabel\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Label));","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport _action from \"../../../actions/index\";\nimport connect from \"react-redux/es/connect/connect\";\nimport { withStyles } from '@material-ui/core/styles';\nimport { styles } from '../Style'\n\nclass ConfirmationDialog extends React.Component {\n    state = {\n        open: false,\n        type: this.props.content.type\n    };\n\n    handleClickOpen = () => {\n        this.setState({ open: true });\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    changeStatusArchived = () => {\n        if(this.state.type === 'archive'){\n\n           this.props.onUpdateCard(this.props.card, {cardStatus : 1}, this.props.listIndex, this.props.cardIndex);\n           this.props.handleParentClose()\n           this.setState({ open: false });\n        }else{\n\n            this.props.onDeleteCard(this.props.card.cardId, this.props.listIndex, this.props.cardIndex);\n            this.props.handleParentClose()\n            this.setState({ open: false });\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div>\n                <Button\n                    color=\"primary\"\n                    className={classes.button}\n                    fullWidth\n                    onClick={this.handleClickOpen}\n                >\n                    {this.state.type}\n                </Button>\n                <Dialog\n                    open={this.state.open}\n                    keepMounted\n                    onClose={this.handleClose}\n                    aria-labelledby=\"alert-dialog-slide-title\"\n                    aria-describedby=\"alert-dialog-slide-description\"\n                >\n                    <DialogTitle id=\"alert-dialog-slide-title\">\n                        {\"Confirmation\"}\n                    </DialogTitle>\n                    <DialogContent>\n                        <DialogContentText id=\"alert-dialog-slide-description\">\n                            Are you sure you want to {this.state.type} this card ?\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"secondary\">\n                            Cancel\n                        </Button>\n                        <Button onClick={this.changeStatusArchived} color=\"primary\">\n                            {this.state.type}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\n/*\nConfirmationDialog.propTypes = {\n    classes: PropTypes.object.isRequired,\n};*/\n\nconst mapStateToProps = (state) => ({\n})\nconst mapDispatchToProps = {\n    onUpdateCard : _action.cardAction.updatecard,\n    onDeleteCard : _action.cardAction.deleteCard\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ConfirmationDialog));","import React, { Component } from 'react';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport {Send} from '@material-ui/icons';\nimport Button from '@material-ui/core/Button';\nimport {withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { connect } from 'react-redux'\nimport _action from '../../../actions'\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport { styles } from './Style'\nimport Grid from \"@material-ui/core/Grid/Grid\";\nimport Fade from \"@material-ui/core/Fade/Fade\";\nimport Tooltip from \"@material-ui/core/Tooltip/Tooltip\";\nimport MiniLoader from \"../../ui/loader/MiniLoader\";\nimport MenuItem from \"@material-ui/core/MenuItem/MenuItem\";\nimport Select from \"@material-ui/core/Select/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl/FormControl\";\n\nclass MemberOnCard extends Component {\n    constructor(props){\n        super(props)\n        this.addMember = this.addMember.bind(this)\n        this.removeMember = this.removeMember.bind(this)\n        this.handleOpenDialog = this.handleOpenDialog.bind(this)\n        this.handleCloseDialog = this.handleCloseDialog.bind(this)\n        this.componentDidMount = this.componentDidMount.bind(this)\n\n        this.state = {\n            open: false\n        }\n    }\n\n    /** We get both array from the store */\n    componentDidMount () {\n        this.props.onGetMembersOnCard(this.props.card.cardId, this.props.route.params.id)\n\n        this.setState({\n            membersOnCard: this.props.membersOnCard,\n            membersOffCard: this.props.membersOffCard,\n            newMemberIndex: -1\n        })\n    }\n\n    /** Close the modal */\n    handleOpenDialog = () => {\n        this.setState({ open: true });\n    };\n\n    handleCloseDialog = () => {\n        this.setState({ open: false });\n    };\n\n    /** ==================== ADD / REMOVE MEMBERS ==================== */\n    addMember (event) {\n        const { onAddMember, listindex, cardindex } = this.props\n\n        let index = this.state.newMemberIndex\n        let member = this.props.membersOffCard[index]\n        let cardId = this.props.card.cardId\n\n        //We copy previous arrays\n        let membersOnCard = Array.from(this.props.membersOnCard)\n        let membersOffCard = Array.from(this.props.membersOffCard)\n\n        membersOnCard.push(member)\n        membersOffCard.splice(index, 1)\n\n        if(member) onAddMember(member.memberId, cardId, membersOnCard, membersOffCard, listindex, cardindex, member)\n\n        this.setState({\n            membersOnCard: membersOnCard,\n            membersOffCard: membersOffCard\n        })\n    }\n\n    removeMember = name => event => {\n        const { onRemoveMember, listindex, cardindex } = this.props\n\n        let index = event.currentTarget.id.split('/')[1]\n        let member = this.props.membersOnCard[index]\n        let cardId = this.props.card.cardId\n\n        //We copy previous arrays\n        let membersOnCard = Array.from(this.props.membersOnCard)\n        let membersOffCard = Array.from(this.props.membersOffCard)\n\n        //New arrays\n        membersOffCard.push(member)\n        membersOnCard.splice(index, 1)\n\n        onRemoveMember(member.memberId, cardId, membersOnCard, membersOffCard, listindex, cardindex, index)\n        this.setState({ maj: true })\n    }\n\n    handleChangeNewMember = event => {\n        this.setState({ [event.target.name]: event.target.value });\n    };\n\n    render() {\n        const { membersOnCard, membersOffCard, classes, ...other } = this.props;\n\n        /** Members on the card */\n        const activeMembersList = (\n            <List className={ classes.memberList + ' ' + classes.marginBottomTop + ' ' + classes.modalWidth}>\n                {this.props.isloading  === 'true' ?\n                    <MiniLoader size={15} />\n                    :\n                    <div>\n                        {membersOnCard.map((member, index) =>\n                            <ListItem key={member.memberId} className={classes.memberItem}>\n                                <ListItemText primary={member.memberPseudo}>\n                                </ListItemText>\n                                <Tooltip\n                                    TransitionComponent={Fade}\n                                    TransitionProps={{timeout: 600}}\n                                    title=\"Remove\"\n                                    placement=\"top-start\">\n                                    <Checkbox\n                                        checked={true}\n                                        id={\"members/\" + index}\n                                        onChange={this.removeMember('membersOnCard')}\n                                        value='membersOnCard'\n                                    />\n                                </Tooltip>\n                            </ListItem>\n                        )}\n                    </div>\n                }\n            </List>\n        )\n\n        /** Members off the card */\n        const otherMembers = (\n            <div className={ classes.modalWidth}>\n                {this.props.isloading === 'true' ?\n                    <MiniLoader size={15} />\n                    :\n                    <FormControl className={classes.formControl + ' ' + classes.modalWidth}>\n\n                        <InputLabel htmlFor=\"new-member\">Members</InputLabel>\n                        <Select\n                            value={this.state.newMemberIndex}\n                            onChange={this.handleChangeNewMember}\n                            inputProps={{\n                                name: 'newMemberIndex',\n                                id: 'new-member',\n                            }}\n                        >\n                            {membersOffCard.map((member, index) =>\n                                <MenuItem key={index} value={index}>{member.memberPseudo}</MenuItem>\n                            )}\n                        </Select>\n                    </FormControl>\n                }\n            </div>\n        )\n\n        return (\n            <div>\n                <Button\n                    color=\"primary\"\n                    className={classes.button}\n                    fullWidth\n                    onClick={this.handleOpenDialog}\n                >\n                    Members\n                </Button>\n                <Dialog\n                    open={this.state.open}\n                    onClose={this.handleCloseDialog.bind(this)}\n                    aria-labelledby=\"simple-dialog-title\"\n                    {...other}\n                >\n                    <DialogTitle id=\"simple-dialog-title\">Members</DialogTitle>\n                    <DialogContent className={ classes.modalWidth } >\n                        <Grid alignItems='flex-end' container className={ classes.marginBottom }>\n                            <Grid item xs={12}>\n                                {otherMembers}\n                            </Grid>\n                            <Grid item xs={12}>\n                                {activeMembersList}\n                            </Grid>\n                            <Grid item xs={12}>\n                                <Button\n                                    fullWidth\n                                    size='small'\n                                    color=\"primary\"\n                                    className={classes.validIcon}\n                                    onClick={this.addMember}\n                                >\n                                    Send\n                                    <Send className={classes.rightIcon} />\n                                </Button>\n                            </Grid>\n                        </Grid>\n                    </DialogContent>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    isloading: state.card.isLoading.toString(),\n    membersOnCard: state.card.membersOnCard,\n    membersOffCard: state.card.membersOffCard\n})\nconst mapDispatchToProps ={\n    onAddMember: _action.cardAction.addMember,\n    onRemoveMember: _action.cardAction.removeMember,\n    onGetMembersOnCard: _action.cardAction.getMembersOnCard\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(withStyles(styles)(MemberOnCard))","export const styles = theme => ({\n    dialogTitle:{\n        textAlign:`center`\n    },\n    validIcon:{\n        color:`#6bb53f`,\n    },\n    divider:{\n        paddingBottom:`60px`\n    },\n    rightIcon: {\n        marginLeft: theme.spacing.unit,\n    },\n    marginBottom: {\n        marginBottom: 20\n    },\n    marginBottomTop: {\n        marginTop: 15\n    },\n    memberList: {\n        overflowY: 'scroll',\n        height: theme.spacing.unit * 20\n    },\n    memberItem: {\n        //maxHeight: 15\n    },\n    errorMsg: {\n        color: '#f44336',\n    },\n    formControl: {\n        width: '100%'\n    },\n    button: {\n        margin: theme.spacing.unit,\n    },\n    modalWidth: {\n        width: '300px'\n    }\n})","/** REACT */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport connect from \"react-redux/es/connect/connect\";\n\n/** COMPONENTS */\nimport { styles } from './Style'\nimport _action from \"../../actions\";\nimport Checklist from './checklist/ChecklistDialog';\nimport LabelDialog from './label/LabelDialog'\nimport ConfirmationDialog from './confirmation/ConfirmationDialog';\nimport MiniLoader from \"../ui/loader/MiniLoader\";\nimport _helper from \"../../helpers\";\n\n/** MATERIAL UI */\nimport Card from '@material-ui/core/Card';\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from \"@material-ui/core/Avatar/Avatar\";\nimport TextField from \"@material-ui/core/TextField/TextField\";\nimport Grid from \"@material-ui/core/Grid/Grid\";\nimport Dialog from \"@material-ui/core/Dialog/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent/DialogContent\";\nimport IconButton from '@material-ui/core/IconButton';\nimport LabelIcon from '@material-ui/icons/Label'\nimport {Edit,Done,Cancel} from '@material-ui/icons';\nimport MemberOnCard from \"./membersOnCard/MembersOnCard\";\nimport classNames from 'classnames';\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\n\n/** MARKDOWN EDITOR */\nimport SimpleMDEReact from \"react-simplemde-editor\";\nimport \"simplemde/dist/simplemde.min.css\";\n\nclass Cardboard extends React.Component {\n    constructor (props) {\n        super(props)\n        this.updateCard = this.updateCard.bind(this)\n        this.handleChangeDueDate = this.handleChangeDueDate.bind(this)\n        this.handleEditDueDate = this.handleEditDueDate.bind(this)\n        this.handleValidDueDate = this.handleValidDueDate.bind(this)\n        this.handleCancelDueDate = this.handleCancelDueDate.bind(this)\n        this.handleChangeDescription = this.handleChangeDescription.bind(this)\n        this.editDescription = this.editDescription.bind(this)\n        this.validEditDescription = this.validEditDescription.bind(this)\n        this.handleEditTitle =  this.handleEditTitle.bind(this)\n        this.validEditTitle = this.validEditTitle.bind(this)\n\n        this.state = {\n            open: this.props.route.params.cardid ?\n                this.props.route.params.cardid.toString() === this.props.currentCard.cardId.toString() : false,\n            card: this.props.currentCard,\n            description: this.props.currentCard.cardDescription,\n            title : this.props.currentCard.cardTitle,\n            dueDate : this.props.currentCard.cardDateTarget,\n            editDueDate : false,\n            editDescription:false,\n            editTitle:false,\n            init: false,\n        };\n    }\n\n    componentDidUpdate (){\n        if(!this.state.init){\n            this.setState({\n                dueDate : this.props.currentCard.cardDateTarget,\n                init: true ,\n                description: this.props.currentCard.cardDescription,\n                title : this.props.currentCard.cardTitle\n            })\n        }\n        //this.props.onGetCard(this.props.currentCard.cardId)\n    };\n\n    /** Open/Close the card modal */\n    handleOpen = () => {\n        this.setState({ open: true });\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n\n    /** Update and create project */\n    handleChangeTitle = name => event => {\n        this.setState({title:event.target.value})\n    };\n\n    handleEditTitle(){\n        this.setState({editTitle : true})\n    }\n    validEditTitle(){\n\n        if(this.state.title !== '' ){\n            this.props.onUpdateTitle(this.props.currentCard, {cardTitle:this.state.title})\n            this.setState({editTitle : false})\n        }\n    }\n\n    updateCard () {\n        this.props.onUpdateCard(this.state.card, this.state.card);\n    }\n\n    handleChangeDueDate = name => event =>{\n        this.setState({\n            dueDate: event.target.value\n        })\n    }\n    handleEditDueDate(){\n        this.setState({editDueDate:true})\n    }\n    handleValidDueDate(){\n\n        if(this.state.dueDate) {\n            this.props.onUpdateDate(this.props.currentCard, {cardDateTarget:this.state.dueDate})\n            this.setState({editDueDate:false})\n        }\n    }\n\n    handleCancelDueDate(){\n\n        this.setState({editDueDate:false})\n    }\n\n    handleChangeDescription= name => event =>{\n\n        this.setState({description : event})\n    }\n\n    getInstance = (instance) => {\n        // You can now store and manipulate the simplemde instance. \n        this.setState({instance : instance})\n        instance.togglePreview();\n    }\n\n    editDescription(){\n        this.state.instance.togglePreview();\n        this.setState({\n            editDescription:true\n        })\n\n    }\n    validEditDescription(){\n        this.state.instance.togglePreview();\n        this.setState({\n            editDescription:false\n        })\n        this.props.onUpdateDescription(this.props.currentCard, {cardDescription:this.state.description})\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        _helper.History.listen( location =>  {\n            try {\n                let isOpen = location.pathname.split('/')[4].toString() === this.props.currentCard.cardId.toString()\n                this.setState({ open: isOpen })\n            } catch (err) {\n                // Nothing\n                this.setState({ open: false })\n            }\n        });\n\n        const cardDialog = (\n\n            <Dialog\n                open={this.state.open}\n                onClose={this.handleClose}\n                aria-labelledby=\"form-dialog-title\"\n            >\n                <DialogContent>\n                    { this.props.currentCard ? (\n                        <Grid justify='center' container>\n                            <Grid xs={8} item className={classes.scrollContainer}>\n                                <Grid item xs={12}>\n                                    {this.props.currentCard.HaslabelCardFks.map(label =>\n                                        label.Label ?\n                                            <LabelIcon\n                                                key={label.labelId}\n                                                style={{\n                                                    color: label.Label.labelColor,\n                                                }}\n                                            />\n                                            : null\n                                    )}\n                                    {this.props.refresh}\n                                </Grid>\n                                <Grid item xs={12}>\n\n                                    { this.props.isLoading ?\n                                        <MiniLoader/>\n                                        :\n                                        this.props.currentCard.MemberhascardCardFks ? this.props.currentCard.MemberhascardCardFks.map(member =>\n                                            member.Member.memberPicture ?\n                                                <Avatar\n                                                    key={member.memberId}\n                                                    alt={member.Member.memberFirstname + 'sharp'}\n                                                    src={member.Member.memberPicture}\n                                                    className={classNames(classes.avatar, classes.littleAvatar)}\n                                                />\n                                                :\n                                                <Avatar className={classes.orangeAvatar} key={member.memberId}>\n                                                    {member.Member.memberFirstname.toUpperCase()[0]}\n                                                </Avatar>\n                                        ) : null}\n                                </Grid>\n                                <form className={classes.container} noValidate autoComplete=\"off\">\n\n                                    <Grid container justify='space-between' alignItems='center'>\n                                        <Grid item xs={8}>\n                                            <TextField\n                                                id=\"cardTitle\"\n                                                label=\"Title\"\n                                                disabled={!this.state.editTitle}\n                                                className={classes.textField}\n                                                defaultValue={this.state.title}\n                                                onChange={this.handleChangeTitle('cardTitle')}\n                                                margin=\"normal\"\n                                                fullWidth\n                                            />\n                                        </Grid>\n                                        <Grid item xs={2}>\n                                            {this.state.editTitle ?\n                                                <IconButton\n                                                    className={classes.done}\n                                                    size=\"small\"\n                                                    aria-label=\"valid\"\n                                                    onClick={this.validEditTitle}\n                                                >\n                                                    <Done fontSize=\"small\"/>\n                                                </IconButton>\n                                                :\n                                                <IconButton\n                                                    color='primary'\n                                                    size=\"small\"\n                                                    aria-label=\"valid\"\n                                                    onClick={this.handleEditTitle}\n                                                >\n                                                    <Edit fontSize=\"small\" />\n                                                </IconButton>\n                                            }\n                                        </Grid>\n                                    </Grid>\n\n                                    {!this.state.editDueDate ?\n                                        <Grid container justify=\"space-between\" alignItems='center' >\n                                            <Grid item xs={10}>\n                                                <TextField\n                                                    id=\"date\"\n                                                    label=\"Due Date\"\n                                                    type=\"date\"\n                                                    disabled={!this.state.editDueDate}\n                                                    value={this.state.dueDate ? this.state.dueDate : ''}\n                                                    className={classes.textField}\n                                                    InputLabelProps={{\n                                                        shrink: true,\n                                                    }}\n                                                    onChange={this.handleChangeDueDate('dueDate')}\n                                                />\n                                            </Grid>\n\n                                            <Grid item xs={2}>\n                                                <IconButton\n                                                    color='primary'\n                                                    size=\"small\" aria-label=\"valid\"\n                                                    onClick={this.handleEditDueDate}\n                                                >\n                                                    <Edit fontSize=\"small\"/>\n                                                </IconButton>\n                                            </Grid>\n                                        </Grid>\n                                        :\n                                        <Grid container justify=\"space-between\" alignItems='center' >\n                                            <Grid item xs={8}>\n\n                                                <TextField\n                                                    id=\"date\"\n                                                    label=\"Due Date\"\n                                                    type=\"date\"\n                                                    disabled={!this.state.editDueDate}\n                                                    value={this.state.dueDate ? this.state.dueDate : ''}\n                                                    className={classes.textField}\n                                                    InputLabelProps={{\n                                                        shrink: true,\n                                                    }}\n                                                    onChange={this.handleChangeDueDate('dueDate')}\n                                                />\n                                            </Grid>\n                                            <Grid item xs={2}>\n                                                <IconButton className={classes.done} size=\"small\" aria-label=\"valid\" onClick={this.handleValidDueDate}>\n                                                    <Done fontSize=\"small\" />\n                                                </IconButton>\n                                            </Grid>\n                                            <Grid item xs={2}>\n                                                <IconButton  color=\"secondary\" size=\"small\" aria-label=\"valid\" onClick={this.handleCancelDueDate}>\n                                                    <Cancel fontSize=\"small\" />\n                                                </IconButton>\n                                            </Grid>\n                                        </Grid>\n\n                                    }\n                                    <Grid container justify=\"space-between\" alignItems='center' >\n                                        <Grid item xs={10}>\n                                            <Typography variant='subtitle1' gutterBottom>\n                                                Description\n                                            </Typography>\n                                        </Grid>\n                                        <Grid item xs={2}>\n                                            { this.state.editDescription ?\n                                                <IconButton\n                                                    className={classes.done}\n                                                    size=\"small\"\n                                                    aria-label=\"valid\"\n                                                    onClick={this.validEditDescription}\n                                                >\n                                                    <Done fontSize=\"small\" />\n                                                </IconButton>\n                                                :\n                                                <IconButton  color=\"primary\" size=\"small\" aria-label=\"valid\" onClick={this.editDescription}>\n                                                    <Edit fontSize=\"small\" />\n                                                </IconButton>\n                                            }\n                                        </Grid>\n                                        <Grid item xs={12}>\n                                            <SimpleMDEReact\n                                                className={classes.markdown + ' ' + classes.mdeSize}\n                                                getMdeInstance={this.getInstance}\n                                                value={this.state.description}\n                                                onChange={this.handleChangeDescription('description')}\n                                                options={{\n                                                    autofocus: true,\n                                                }}\n                                            />\n                                        </Grid>\n                                    </Grid>\n\n                                </form>\n                            </Grid>\n                            <Grid xs={4} item>\n                                <MemberOnCard\n                                    route={this.props.route}\n                                    card={this.props.currentCard}\n                                    listindex={this.props.listIndex}\n                                    cardindex={this.props.cardIndex}\n                                />\n                                <LabelDialog\n                                    route={this.props.route}\n                                    card={this.props.currentCard}\n                                />\n                                <Checklist\n                                    card={this.props.currentCard}\n                                />\n                                <ConfirmationDialog\n                                    content = {{type:'archive'}}\n                                    card={this.state.card}\n                                    listIndex={this.props.listIndex}\n                                    cardIndex={this.props.cardIndex}\n                                    handleParentClose={this.handleClose}\n                                />\n                                <ConfirmationDialog\n                                    content = {{type:'delete'}}\n                                    card={this.state.card}\n                                    listIndex={this.props.listIndex}\n                                    cardIndex={this.props.cardIndex}\n                                    handleParentClose={this.handleClose}\n                                />\n                            </Grid>\n                        </Grid>\n\n                    ) : (\n                        <MiniLoader/>\n                    )}\n                </DialogContent>\n            </Dialog>\n        )\n\n        return (\n            <div>\n                {cardDialog}\n                <Card className={classes.card}>\n                    <Grid justify='center' alignItems='center' container>\n\n                        {this.props.currentCard.HaslabelCardFks && this.props.currentCard.HaslabelCardFks.length > 0 ?\n                            <Grid container alignItems='center' justify='space-between' className={ classes.firstRow }>\n                                <Grid item xs={11}>\n                                    {this.props.currentCard.HaslabelCardFks.map(label =>\n                                        label.Label ?\n                                            <LabelIcon\n                                                key={label.labelId}\n                                                style={{\n                                                    color: label.Label.labelColor,\n                                                }}\n                                            />\n                                            : null\n                                    )}\n                                </Grid>\n                                <Grid item xs={1}>\n                                    <IconButton\n                                        onClick={this.handleOpen}\n                                        aria-label=\"Comments\"\n                                        size=\"small\"\n                                        className={ classes.moreIcon }\n                                    >\n                                        <MoreVertIcon />\n                                    </IconButton>\n                                </Grid>\n                            </Grid>\n\n                            : null }\n\n                        {this.props.currentCard.HaslabelCardFks ?\n                            this.props.currentCard.HaslabelCardFks.length === 0 ?\n                                <Grid container alignItems='center' justify='space-between' className={ classes.firstRow }>\n                                    <Grid item xs={11}>\n                                        <Typography variant=\"subtitle2\">\n                                            {this.state.card.cardTitle}\n                                        </Typography>\n                                    </Grid>\n                                    <Grid item xs={1}>\n                                        <IconButton\n                                            onClick={this.handleOpen}\n                                            aria-label=\"Comments\"\n                                            size=\"small\"\n                                            className={ classes.moreIcon }\n                                        >\n                                            <MoreVertIcon />\n                                        </IconButton>\n                                    </Grid>\n                                </Grid>\n                                :\n                                <Grid container alignItems='center'>\n                                    <Typography variant=\"subtitle2\">\n                                        {this.state.card.cardTitle}\n                                    </Typography>\n                                </Grid>\n                            : null\n                        }\n                        <Grid container alignItems='center' justify='flex-end'>\n                            { this.props.isLoading ?\n                                <MiniLoader/>\n                                :\n                                this.props.currentCard.MemberhascardCardFks ? this.props.currentCard.MemberhascardCardFks.map(member =>\n                                    member.Member.memberPicture ?\n                                        <Avatar\n                                            key={member.memberId}\n                                            alt={member.Member.memberFirstname + 'sharp'}\n                                            src={member.Member.memberPicture}\n                                            className={classNames(classes.avatar, classes.littleAvatar)}\n                                        />\n                                        :\n                                        <Avatar className={classes.orangeAvatar} key={member.memberId}>\n                                            {member.Member.memberFirstname.toUpperCase()[0]}\n                                        </Avatar>\n                                ) : null}\n                        </Grid>\n                    </Grid>\n                </Card>\n            </div>\n        );\n    }\n}\n\nCardboard.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    isLoading: state.project.isLoading,\n    refresh: state.project.maj\n})\nconst mapDispatchToProps = {\n    onUpdateCard : _action.cardAction.updatecard,\n    onGetCard : _action.cardAction.getCard,\n    onUpdateDate: _action.listAction.updateDueDateCard,\n    onUpdateDescription: _action.listAction.updateDescription,\n    onUpdateTitle:_action.listAction.updateCardTitle\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Cardboard));","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport {  Draggable } from 'react-beautiful-dnd';\nimport { styles } from './Style'\n\nimport CardElement from '../../card/Card'\n\n\nclass Card extends Component{\n\n    render() {\n        const {classes} = this.props\n        return (\n            <div className={ classes.listElement }>\n                <Draggable\n                    key={this.props.card.cardId}\n                    draggableId={this.props.card.cardId}\n                    index={this.props.index}\n                >\n                    {(provided, snapshot) =>  {\n                        return (\n                            <div\n                                {...provided.draggableProps}\n                                {...provided.dragHandleProps}\n                                ref={provided.innerRef}\n                            >\n                                <CardElement\n                                    currentCard={this.props.card}\n                                    listIndex={this.props.listIndex}\n                                    cardIndex={this.props.cardIndex}\n                                    route={this.props.route}\n                                />\n                            </div>\n                        )}}\n                </Draggable>\n            </div>\n        )\n    }\n}\n\nexport default withStyles(styles)(Card)","export const styles = theme => ({\n    card: {\n        margin: theme.spacing.unit * 1,\n        border:`1px solid lightgrey` ,\n        borderRadius: '4px',\n        padding:theme.spacing.unit * 2,\n        maxWidth: `250px`,\n        wordWrap: `break-word`,\n        whiteSpace: `normal`,\n        backgroundColor:'white'\n        \n    },\n    typography: {\n        useNextVariants: true,\n      },\n    paragraph:{\n        wordWrap: `break-word`\n    },\n    listElement: {\n        marginBottom: theme.spacing.unit * 1\n    }\n});","export const styles = theme => ({\n    dialogTitle:{\n        textAlign:`center`\n    },\n    validIcon:{\n        color:`#6bb53f`,\n    },\n    divider:{\n        paddingBottom:`60px`\n    },\n    rightIcon: {\n        marginLeft: theme.spacing.unit,\n    },\n    marginBottom: {\n        marginBottom: 20\n    },\n    marginBottomTop: {\n        marginTop: 15\n    },\n    memberList: {\n        overflowY: 'scroll',\n        height: theme.spacing.unit * 10,\n    },\n    memberItem: {\n        //maxHeight: 10\n    },\n    errorMsg: {\n        color: '#f44336',\n    },\n    memberDialog: {\n        width: '440px'\n    }\n})","import React, { Component } from 'react';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport {withStyles } from '@material-ui/core/styles';\nimport { styles } from './Style'\n\nclass SimpleDialog extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      newTitle:'',\n      submitted:false\n    }\n  }\n  \n\n\n    handleClose = () => {\n      const newTitle = this.state.newTitle\n      this.setState({newTitle:''}, function() { \n        if(!this.state.submitted) this.props.onClose('')\n        else this.props.onClose(newTitle)}\n      )\n     \n    };\n\n    handleSubmit = () => {\n        this.setState({submitted:true}, function() { this.handleClose()} )      \n      };\n    \n    close = () =>{\n        this.setState({submitted:false}, function() { this.handleClose()} )\n    }\n    \n    handleChange = name => event => {\n        this.setState({\n          [name]: event.target.value,\n        });\n    };\n\n    render() {\n      const { classes, onClose, selectedValue, ...other } = this.props;\n      \n      return (\n        <Dialog onClose={this.close} aria-labelledby=\"simple-dialog-title\" {...other}>\n            <DialogTitle id=\"simple-dialog-title\" className={classes.dialogTitle}>Add a new {this.props.type} </DialogTitle>\n            <DialogContent>\n                <TextField\n                        id=\"outlined-multiline-static\"\n                        label={this.props.type+\" name\"}\n                        name=\"selectedValue\"\n                        multiline\n                        rows=\"3\"         \n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        onChange={this.handleChange('newTitle')}\n                        />\n            </DialogContent>\n            <DialogActions>\n                    <Button variant=\"contained\" disabled={this.state.newTitle ? false : true} onClick={this.handleSubmit.bind(this)} color=\"primary\" fullWidth size=\"small\">\n                        Add {this.props.type}\n                    </Button>\n            </DialogActions>\n        </Dialog>\n      );\n    }\n  }\n\n  export default withStyles(styles)(SimpleDialog)","export const styles = theme => ({\n    listArea: {\n        whiteSpace: `nowrap`,\n        overflowY: `auto`,\n        flexWrap: 'inherit',\n    },\n    listHeight: {\n        height: '100%'\n    },\n    list: {\n        width: '272px',\n        margin: '7px',\n        marginRight: 0,\n        backgroundColor:`#1e88e5`,\n    },\n    borderRadius: {\n        borderTopLeftRadius: '10px',\n        borderTopRightRadius: '10px'\n    },\n    borderRadiusBottom: {\n        borderBottomLeftRadius: '10px',\n        borderBottomRightRadius: '10px'\n    },\n    listTitle: {\n        textAlign:`left`,\n        color : `black`,\n        backgroundColor:'red',\n        border:`1px solid grey`,\n        fontWeight: `lighter`,\n        wordBreak: `break-all`\n    },\n    buttonList:{\n        marginTop:`15px`,\n        marginLeft:`30px`\n    },\n    button:{\n        fontSize: '11px',\n        color: 'white',\n        backgroundColor: '#155fa0'\n    },\n    dropSpace:{\n        padding:'10px',\n        minHeight:`20px`\n    },\n    textField:{\n        marginLeft:theme.spacing.unit,\n        marginRight:theme.spacing.unit,\n    },\n    textField2:{\n        padding: 0,\n        margin: 0,\n        color: 'white'\n    },\n    dialogBox:{\n        marginLeft: theme.spacing.unit,\n    },\n    badge:{\n        left:'0',\n        marginRight: theme.spacing.unit * 2,\n        color: 'white'\n    },\n    validEditTitle:{\n        color : 'white',\n        left:'0',\n        marginRight: theme.spacing.unit * 2,\n    },\n    listElement: {\n        marginBottom: 20\n    },\n    listsGrid: {\n        paddingLeft:  theme.spacing.unit * 5,\n        paddingRight: theme.spacing.unit * 5,\n        maxWidth: '100%'\n    },\n    listTitle2: {\n        backgroundColor: '#155fa0',\n    },\n    noPadding: {\n        padding: 0\n    },\n    TexfieldGrid: {\n        padding: 0,\n    },\n    cardSlot: {\n        backgroundColor: '1e88e5'\n    },\n    whiteText: {\n        color: 'white'\n    },\n    widthMax: {\n        maxWidth: '100%',\n        paddingLeft: theme.spacing.unit * 5,\n        height: '100%'\n    },\n    gridList: {\n        display: 'grid',\n        flexWrap: 'nowrap',\n        transform: 'translateZ(0)',\n    },\n    buttonAddList: {\n        marginBottom: theme.spacing.unit * 5,\n    },\n    listItem: {\n        width: '200px',\n    },\n    horizontalScrollWrapper: {\n        width: '100%',\n        overflowY: 'auto',\n        overflowX: 'hidden',\n        backgroundColor: 'red',\n    }\n});","import React, { Component } from 'react';\nimport Card from '../card/Card'\nimport { withStyles } from '@material-ui/core/styles';\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\nimport Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/Add';\nimport SimpleDialog from '../../ui/dialog/SimpleDialog'\nimport { styles } from './Style'\n\nimport List from '@material-ui/core/List';\nimport Badge from '@material-ui/core/Badge';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport { Done} from '@material-ui/icons';\nimport ListItem from \"@material-ui/core/ListItem/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText/ListItemText\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction/ListItemSecondaryAction\";\nimport Typography from \"@material-ui/core/Typography/Typography\";\n\nconst ITEM_HEIGHT = 38;\n\nclass ListPrello extends Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            editListTitle : false,\n            newListTitle:'',\n            newCardTitle:'',\n            isOpenAddCardDialog: false,\n            anchorEl: null,\n            isOpenDeleteDialog: false,\n            open:false,\n\n        }\n        this.handleArchivedList = this.handleArchivedList.bind(this)\n        this.handleEditTitle = this.handleEditTitle.bind(this)\n        this.handleCloseDeleteListDialog = this.handleCloseDeleteListDialog.bind(this)\n        this.handleConfirmDeleteList = this.handleConfirmDeleteList.bind(this)\n    }\n\n\n\n    createNewCard(){\n        let cardName = this.state.newCardTitle\n        let listId = this.props.list.listId\n        let cardFather = this.props.list.CardListFks.length\n        if(cardName) this.props.createCard(cardName,listId,this.props.idProject, this.props.member, cardFather)\n    }\n\n\n\n    handleClickOpen = () => {\n        this.setState({\n            open: true,\n        });\n    };\n\n\n    handleClose = (value) => {\n        this.setState({ newCardTitle: value, open: false }, function(){  this.createNewCard()});\n\n    };\n\n    handleClickMenu = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleCloseMenu = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    /* =============DELETE LIST ================= */\n    handleDeleteList = () =>{\n\n        this.setState({ isOpenDeleteDialog: true });\n    }\n\n    handleCloseDeleteListDialog(){\n\n        this.setState({ isOpenDeleteDialog: false });\n    }\n\n    handleConfirmDeleteList(){\n\n        const {list, idProject} = this.props\n        this.props.deleteList(list.listId,idProject)\n    }\n\n    /*===============Edit title ====================*/\n    handleOpenMenu = name => event =>{\n        this.setState({ [name]: true });\n    }\n\n    handleChange = name => event => {\n\n        this.setState({\n            [name]: event.target.value,\n        });\n    };\n\n    handleEditTitle(){\n\n        if(this.state.newListTitle) this.props.updateListTitle(this.state.newListTitle,this.props.list.listId)\n        this.setState({editListTitle: false}, ()=>{\n        })\n    }\n\n\n    /*============== Archived list ==============*/\n    handleArchivedList (){\n        const {list} = this.props\n        this.handleCloseMenu()\n        this.props.archiveList(list.listId,1)\n    }\n\n\n\n    render() {\n        const {classes,list} = this.props\n        const { editListTitle, anchorEl } = this.state;\n        const open = Boolean(anchorEl);\n\n        const confirmDeleteDialog = (\n            <Dialog\n                open={this.state.isOpenDeleteDialog}\n                keepMounted\n                onClose={this.handleCloseDeleteListDialog}\n                aria-labelledby=\"alert-dialog-slide-title\"\n                aria-describedby=\"alert-dialog-slide-description\"\n            >\n                <DialogTitle id=\"alert-dialog-slide-title\">\n                    {\"Warning\"}\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-slide-description\">\n                        Are you sure you want to delete this list ?\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCloseDeleteListDialog} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={this.handleConfirmDeleteList} color=\"primary\">\n                        Yes\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        )\n\n        const MenuList = (\n            <ListItemSecondaryAction>\n                <IconButton\n                    onClick={this.handleClickMenu}\n                    aria-label=\"Comments\"\n                    size=\"small\"\n                    className={ classes.whiteText }\n                >\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id=\"long-menu\"\n                    anchorEl={anchorEl}\n                    open={open}\n                    onClose={this.handleCloseMenu}\n                    PaperProps={{\n                        style: {\n                            maxHeight: ITEM_HEIGHT * 4.5,\n                            width: 200,\n                        },\n                    }}\n                >\n\n                    <MenuItem key=\"editListTitle\"  onClick={this.handleOpenMenu('editListTitle')}>\n                        Edit title\n                    </MenuItem>\n                    <MenuItem key=\"deleteList\"  onClick={this.handleDeleteList}>\n                        Delete\n                    </MenuItem>\n                    {confirmDeleteDialog}\n                    <MenuItem key=\"archivedList\"  onClick={this.handleArchivedList}>\n                        Archived\n                    </MenuItem>\n\n                    ))}\n                </Menu>\n            </ListItemSecondaryAction>\n        )\n\n\n        return (\n            <Draggable draggableId={\"List:\"+this.props.list.listId} index={this.props.index}>\n                {(provided,snapshot) => {\n                    return (\n                        <div className={classes.list + ' ' + classes.borderRadius + ' ' + classes.borderRadiusBottom}\n                             {...provided.draggableProps}\n                             ref={provided.innerRef}\n                        >\n                            <List\n                                component=\"nav\"\n                                disablePadding={true}\n                                dense={true}\n                                className={ classes.borderRadius }\n                            >\n                                <ListItem {...provided.dragHandleProps} className={classes.listTitle2 + ' ' + classes.borderRadius}>\n                                    <ListItemText>\n                                        {!editListTitle ?\n                                            <Grid justify='flex-start' alignItems='center' container>\n                                                <Badge\n                                                    badgeContent={list.CardListFks ? list.CardListFks.filter(card => card.cardStatus === 0).length : 0}\n                                                    className={classes.badge}\n                                                    color='error'\n                                                >\n                                                    <p style={{color:'#155fa0'}}>p</p>\n                                                </Badge>\n                                                <Typography variant='overline' className={ classes.whiteText }>\n                                                    {this.props.list.listTitle}\n                                                </Typography>\n                                                {MenuList}\n                                            </Grid>\n                                            :\n                                            <Grid justify='flex-start' alignItems='center' container className={ classes.noPadding }>\n                                                <Badge\n                                                    badgeContent={list.CardListFks ? list.CardListFks.filter(card => card.cardStatus === 0).length : 0}\n                                                    className={classes.badge}\n                                                    color='error'\n                                                />\n                                                <Grid item xs={9} className={ classes.TexfieldGrid }>\n                                                    <TextField\n                                                        id=\"standard-bare\"\n                                                        className={classes.textField2}\n                                                        defaultValue={list.listTitle}\n                                                        margin=\"normal\"\n                                                        onChange={this.handleChange('newListTitle')}\n                                                    />\n                                                </Grid>\n                                                <ListItemSecondaryAction>\n                                                    <IconButton\n                                                        onClick={this.handleEditTitle}\n                                                        aria-label=\"valid\"\n                                                        size=\"small\"\n                                                        className={ classes.validEditTitle }\n                                                    >\n                                                        <Done />\n                                                    </IconButton>\n                                                </ListItemSecondaryAction>\n                                            </Grid>\n                                        }\n                                    </ListItemText>\n\n                                </ListItem>\n                                <Droppable droppableId={this.props.list.listId+\":\"+this.props.list.listTitle} type=\"CARD\">\n                                    {(provided) => {\n                                        return (\n                                            <div\n                                                ref={provided.innerRef}\n\n                                                className={classes.dropSpace + ' ' + classes.cardSlot} style={{flexGrow:1}} >\n\n                                                {list.CardListFks.filter(card => card.cardStatus === 0 ).map((card,index) =>\n                                                    <div key={index}>\n                                                        <Card\n                                                            key={card.cardId}\n                                                            card={card}\n                                                            listIndex={this.props.listIndex}\n                                                            cardIndex={index}\n                                                            index={index}\n                                                            route={this.props.route}\n                                                        />\n                                                    </div>\n\n\n\n                                                )}\n\n                                                {provided.placeholder}\n\n                                            </div>\n                                        )}}\n                                </Droppable>\n                                <Grid container justify=\"space-between\">\n                                    <Grid item xs={12}>\n                                        <Button\n                                            fullWidth\n                                            color='primary'\n                                            size=\"small\"\n                                            className={classes.button + ' ' + classes.borderRadiusBottom}\n                                            onClick={this.handleClickOpen}>\n                                            <AddIcon /> new card\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n\n                                <SimpleDialog\n                                    type=\"card\"\n                                    open={this.state.open}\n                                    onClose={this.handleClose}\n                                />\n                            </List>\n                        </div>\n                    )}\n                }\n            </Draggable>\n        )\n    }\n}\n\n\n\n\n\nexport default withStyles(styles)(ListPrello)\n\n","import React, { Component } from 'react';\nimport List from './List'\nimport { withStyles } from '@material-ui/core/styles';\nimport { Droppable } from 'react-beautiful-dnd';\nimport AddIcon from '@material-ui/icons/Add';\nimport Button from '@material-ui/core/Button';\nimport { styles } from './Style'\nimport SimpleDialog from '../../ui/dialog/SimpleDialog'\nimport Grid from \"@material-ui/core/Grid/Grid\";\n\n\n\n\nclass Lists extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            newListname:'',\n            open: false,\n        }\n    }\n\n\n    createNewList(){\n        let listName = this.state.newListname\n        let idProject = this.props.idProject\n        if(listName) this.props.createListCallback(listName,idProject)\n    }\n\n\n    handleChange = name => event => {\n        this.setState({\n            [name]: event.target.value,\n        });\n\n    };\n\n    handleClickOpen = () => {\n        this.setState({\n            open: true,\n        });\n    };\n\n    handleClose = (value) => {\n        this.setState({ newListname: value, open: false }, function(){  this.createNewList()});\n    };\n\n\n\n\n    render() {\n        const { classes,lists,idProject} = this.props;\n\n        return (\n\n            <Droppable droppableId=\"allList\" direction=\"horizontal\" type=\"LIST\">\n                {(provided) =>(\n                    <div\n                        className={ classes.widthMax + ' ' + classes.listHeight }\n                        ref={provided.innerRef}\n                        {...provided.droppableProps}\n                    >\n                        <Grid container justify='flex-start' className={ classes.buttonAddList }>\n                            <Button\n                                onClick={this.handleClickOpen}\n                                variant=\"outlined\"\n                                color='primary'\n                                aria-label=\"Add\"\n                                className={classes.buttonList}\n                            >\n                                <AddIcon />\n                                New list\n                            </Button>\n                        </Grid>\n                        <Grid container id='listScroll' className={classes.listArea}>\n                            {lists.length === 0 ? '' :lists.filter(list => list.listStatus === 0).map((list, index) =>\n                                <Grid item key={list.listTitle+list.listId}>\n                                    <List\n                                        idProject={idProject}\n                                        list={list}\n                                        listIndex={index}\n                                        index={index}\n                                        deleteList = {this.props.deleteList}\n                                        updateListTitle = {this.props.updateListTitle}\n                                        archiveList = {this.props.archiveList}\n                                        createCard = {this.props.createCard}\n                                        member={this.props.member}\n                                        route = {this.props.route}\n                                    />\n                                </Grid>\n                            )}\n                            {provided.placeholder}\n                            <SimpleDialog\n                                type=\"list\"\n                                open={this.state.open}\n                                onClose={this.handleClose}\n                            />\n                        </Grid>\n                    </div>\n                )}\n\n            </Droppable>\n        )\n    }\n}\n\n\n\n\nexport default withStyles(styles)(Lists)","import React, { Component } from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from \"@material-ui/core/Typography/Typography\";\nimport Grid from \"@material-ui/core/Grid/Grid\";\nimport Divider from \"@material-ui/core/Divider/Divider\";\n\nclass ActivityList extends Component{\n    render() {\n        return (\n            <List>\n            {this.props.activities.length > 0 ?\n                this.props.activities.map( (activity, index) =>\n                    <ListItem key={index}>\n                        <Grid justify=\"space-between\" container>\n                            <Typography variant='h6'>\n                                {activity.actionTitle}\n                            </Typography>\n                            <Typography variant='caption'>\n                                {activity.actionDateCreation}\n                            </Typography>\n                            <Grid xs={12} item>\n                                <Typography variant='body2'>\n                                    {activity.actionDescription}\n                                </Typography>\n                                <Divider/>\n                            </Grid>\n                        </Grid>\n                    </ListItem>\n                 )\n                :\n                <ListItem key=\"0\">\n                    <ListItemText primary=\"0 activity founds\"/>\n                </ListItem>\n            }\n            \n        </List>\n        )\n    }\n}\nexport default ActivityList;","import React, { Component } from 'react';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport IconButton from '@material-ui/core/IconButton';\nimport {Send,Cancel} from '@material-ui/icons';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Divider from '@material-ui/core/Divider';\nimport {withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { connect } from 'react-redux'\nimport _action from '../../../actions'\nimport _helper from '../../../helpers'\nimport Checkbox from '@material-ui/core/Checkbox';\nimport MiniLoader from '../../ui/loader/MiniLoader'\n\nimport { styles } from './Style'\nimport Grid from \"@material-ui/core/Grid/Grid\";\nimport Typography from \"@material-ui/core/Typography/Typography\";\nimport Fade from \"@material-ui/core/Fade/Fade\";\nimport Tooltip from \"@material-ui/core/Tooltip/Tooltip\";\n\n\n\nclass MemberDialog extends Component {\n    constructor(props){\n        super(props)\n        this.handleRemoveFromProject = this.handleRemoveFromProject.bind(this)\n        this.handleChangeCheckbox = this.handleChangeCheckbox.bind(this)\n\n        this.state = {\n            memberEmail: '',\n            submitted: false,\n            errorMsg: '',\n            members: []\n        }\n    }\n\n    componentWillReceiveProps () {\n        this.setState({members: this.props.members})\n    }\n\n    close = () =>{\n        this.setState({\n            memberEmail: '',\n            submitted: false,\n            errorMsg: ''\n        })\n        this.props.onClose()\n    }\n\n    handleChange = name => event => {\n        this.setState({\n            [name]: event.target.value,\n        });\n    };\n\n    submitInvitation(){\n        if (_helper.Method.isTypeEmail(this.state.memberEmail)) {\n            this.setState({ errorMsg: '' })\n            let body = {\n                memberEmail: this.state.memberEmail,\n                projectId: this.props.projectInfo.projectId\n            }\n            this.props.sendInvitation(body)\n            this.setState({ memberEmail: '' })\n        } else {\n            this.setState({ errorMsg: 'Please, provide a valid email adress.' })\n        }\n    }\n\n    handleRemoveFromProject (event) {\n        let query = {\n            projectId: this.props.projectInfo.projectId,\n            memberId: event.currentTarget.id.split('/')[1]\n        }\n        this.props.removeMemberFromProject(query)\n        this.setState({ maj: true });\n    }\n\n    handleChangeCheckbox = name => event => {\n        let index = event.target.id.split('/')[1]\n        let mhppState = event.target.checked\n        let member = Object.assign({}, this.props.members[index])\n        console.log('INDEX', index)\n        console.log('STATE', this.state)\n        console.log('PROPS', this.props)\n\n        if (member.Member) {\n            member.Member.HaspermissionprojectMember1Fks[0].mhppState = mhppState\n            let projectId = this.props.projectInfo.projectId\n            let memberId = member.memberId\n            let permissionId = member.Member.HaspermissionprojectMember1Fks[0].permissionId\n            this.props.onUpdatePermission(projectId, memberId, permissionId, mhppState, this.props.members)\n        }\n        this.setState({ maj: true });\n    };\n\n    render() {\n        const {onUpdatePermission, isLoading, isAdmin, setAsAdministrator,removeMemberFromProject, sendInvitation, projectInfo, classes, onClose, selectedValue, ...other } = this.props;\n        return (\n            <Dialog\n                onClose={this.close.bind(this)}\n                aria-labelledby=\"simple-dialog-title\"\n                {...other}\n            >\n                <DialogTitle id=\"simple-dialog-title\" className={classes.dialogTitle}>Members</DialogTitle>\n                <DialogContent className={ classes.memberDialog }>\n                    <DialogContentText>\n                        Add a user on the project\n                    </DialogContentText>\n                    <Grid alignItems='flex-end' container className={ classes.marginBottom }>\n                        <Grid item xs={12}>\n                            <TextField\n                                id=\"invitationEmail\"\n                                label=\"Email\"\n                                disabled={this.props.isLoading || this.props.isAdmin === false}\n                                error={this.state.errorMsg !== ''}\n                                fullWidth\n                                value={this.state.memberEmail}\n                                type='email'\n                                name=\"invitationEmail\"\n                                margin=\"normal\"\n                                variant=\"outlined\"\n                                onChange={this.handleChange('memberEmail')}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Button\n                                fullWidth\n                                size='small'\n                                disabled={!this.props.isAdmin}\n                                color=\"primary\"\n                                className={classes.validIcon}\n                                onClick={this.submitInvitation.bind(this)}\n                            >\n                                Send\n                                <Send className={classes.rightIcon} />\n                            </Button>\n                        </Grid>\n                    </Grid>\n\n                    <Typography variant='caption' className={ classes.errorMsg }>\n                        {this.state.errorMsg}\n                    </Typography>\n\n                    <DialogContentText>\n                        Active members\n                    </DialogContentText>\n                    <Divider/>\n                    <List className={ classes.memberList + ' ' + classes.marginBottomTop }>\n                        { isLoading ? (\n                            <MiniLoader/>\n                        ) :  this.props.members ? this.props.members.map(member =>\n                            member.memberhasprojectStatus === 1 ? (\n                                <ListItem key={member.Member.memberId} className={ classes.memberItem }>\n                                    <ListItemText primary={member.Member.memberPseudo}/>\n                                    <div>\n                                        {this.props.isAdmin === true && member.memberId !== this.props.currentmemberid ?\n                                            <div>\n                                                <IconButton id={'member/' + member.Member.memberId} color=\"secondary\"  onClick={this.handleRemoveFromProject}>\n                                                    <Cancel />\n                                                </IconButton>\n                                                <Tooltip\n                                                    TransitionComponent={Fade}\n                                                    TransitionProps={{ timeout: 600 }}\n                                                    title=\"Admin\"\n                                                    placement=\"top-start\">\n                                                    <Checkbox\n                                                        checked={member.Member.HaspermissionprojectMember1Fks[0].mhppState}\n                                                        id={'isAdmin/' + this.props.members.indexOf(member).toString()}\n                                                        onChange={this.handleChangeCheckbox('members')}\n                                                        value='members'\n                                                    />\n                                                </Tooltip>\n                                            </div> : '' }\n                                    </div>\n                                </ListItem>\n                            ) : null\n                        ) : null }\n                    </List>\n\n                    <DialogContentText>\n                        Invited members\n                    </DialogContentText>\n                    <Divider/>\n                    <List className={ classes.memberList }>\n                        { isLoading ? (\n                            <MiniLoader/>\n                        ) :  this.props.members ? this.props.members.map(member =>\n                            member.memberhasprojectStatus !== 1 ? (\n                                <ListItem key={member.Member.memberId} className={ classes.memberItem }>\n                                    <ListItemText primary={member.Member.memberEmail}>\n                                    </ListItemText>\n                                    <div>\n                                        {this.props.isAdmin === true ?\n                                            <Button id={'member/' + member.Member.memberId} onClick={this.handleRemoveFromProject}>\n                                                <Cancel />\n                                            </Button> : '' }\n                                    </div>\n                                </ListItem>\n                            ) : null\n                        ) : null }\n                    </List>\n                </DialogContent>\n                <DialogActions>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    projectInfo : state.project.projectInfo || [],\n    members : state.project.members,\n    currentmemberid: state.signin.member.memberId,\n    isLoading: state.project.isLoading\n})\nconst mapDispatchToProps ={\n    sendInvitation: _action.projectAction.sendInvitationProject,\n    onUpdatePermission: _action.projectAction.updatePermissionMember,\n    removeMemberFromProject : _action.projectAction.removeMemberFromProject\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(withStyles(styles)(MemberDialog))","import React, { Component } from 'react';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport {Done} from '@material-ui/icons';\nimport Button from '@material-ui/core/Button';\nimport {withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { connect } from 'react-redux'\nimport _action from '../../../actions'\n\nimport { styles } from './Style'\n\n\n\nclass VisibilityDialog extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      newTitle:'',\n      submitted:false,\n      visibility: ''\n    }\n  }\n\n  componentDidUpdate(prevProps){\n    \n    if(this.props.projectInfo !== prevProps.projectInfo ){\n        this.setState( {visibility : this.props.projectInfo.visibility})\n    }\n}\n\n    componentWillReceiveProps(){\n      if (this.props.projectInfo) this.setState({visibility: this.props.projectInfo.projectVisibility})\n    }\n\n    \n    close = () =>{\n        this.props.onClose()\n    }\n    \n    handleChange = name => event => {\n        this.setState({\n          [name]: event.target.value,\n        });\n    };\n\n    updateVisibility(){\n\n      if(this.state.visibility === 1){\n          this.setState({visibility:0})\n          this.props.updateProjectVisibility(0,this.props.projectInfo.projectId)\n      }\n      else{\n        this.setState({visibility:1})\n        this.props.updateProjectVisibility(1,this.props.projectInfo.projectId)\n      }    \n    }\n\n    render() {\n      const { isAdmin, updateProjectVisibility,projectInfo, classes, onClose, selectedValue, ...other } = this.props;\n\n      return (\n        <Dialog onClose={this.close.bind(this)} aria-labelledby=\"simple-dialog-title\" {...other}>\n            <DialogTitle id=\"simple-dialog-title\" className={classes.dialogTitle}>Project visibility</DialogTitle>\n            <DialogContent>\n                <List>\n                    <ListItem><Button disabled={this.state.visibility === 0 || !this.props.isAdmin ?true : false} onClick={this.updateVisibility.bind(this)} value={0}><ListItemText primary=\"Public\" secondary=\"This project is visible by everyone. Read Only\"></ListItemText>{this.state.visibility === 0? <Done/>:''}</Button></ListItem>\n                    <ListItem><Button disabled={this.state.visibility === 1 || !this.props.isAdmin ?true : false} onClick={this.updateVisibility.bind(this)} value={1}><ListItemText primary=\"Private\" secondary=\"This project is only visible by project members\"></ListItemText>{this.state.visibility === 1? <Done/>:''}</Button></ListItem>\n                </List>\n            </DialogContent>\n            <DialogActions>\n            </DialogActions>\n        </Dialog>\n      );\n    }\n  }\n\n  const mapStateToProps = (state) => ({ \n    projectInfo : state.project.projectInfo || ''\n})\n\n  const mapDispatchToProps ={\n    updateProjectVisibility: _action.projectAction.updateProjectVisibility,\n  }\nexport default connect(mapStateToProps,mapDispatchToProps)(withStyles(styles)(VisibilityDialog))","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\n\n//Helpers and actions\nimport _action from '../../actions'\nimport _helper from '../../helpers'\nimport _service from '../../services'\n\n// Drag and drop \nimport { DragDropContext} from 'react-beautiful-dnd';\n\n// Components\nimport Lists from './list/Lists'\nimport ActivityList from '../ui/activity/ActivityList'\nimport LoaderPage from '../ui/loader/Loader'\n\n// Material Ui\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { Button } from '@material-ui/core';\nimport {RestorePage, Archive, SupervisorAccount,RemoveRedEye,Description,Edit, Done} from '@material-ui/icons';\nimport TextField from '@material-ui/core/TextField';\nimport MemberDialog from '../ui/dialog/MemberDialog'\nimport VisibilityDialog from '../ui/dialog/VisibilityDialog'\nimport Drawer from '@material-ui/core/Drawer';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport IconButton from '@material-ui/core/IconButton';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\n\n// Styles\nimport {withStyles } from '@material-ui/core/styles';\nimport { styles } from './Style'\n\n// Socket IO\nimport socket from '../../helpers/SocketIo.helper'\n\n\n\n\n\nclass Project extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            lists : [],\n            updateLists : false,\n            editProjectTitle : false,\n            newProjectTitle : '',\n            openMemberDialog:false,\n            openVisibilityDialog:false,\n            members:[],\n            openActivity:false,\n            openFilter:false,\n            openArchived:false,\n            projectInfo:''\n        }\n\n        this.socket = socket\n        this.handleRestoreArchived = this.handleRestoreArchived.bind(this)\n        this.deleteList = this.deleteList.bind(this)\n        this.updateListTitle = this.updateListTitle.bind(this)\n        this.archiveList = this.archiveList.bind(this)\n        this.createCard = this.createCard.bind(this)\n        this.createNewList = this.createNewList.bind(this)\n\n        this.socket.on('updateLists', this.socketUpdateLists.bind(this))\n        this.socket.on('updateProject', this.socketUpdateProject.bind(this))\n\n\n\n    }\n\n    socketUpdateLists(lists){\n         this.props.loadLists(lists)\n     }\n    \n     socketUpdateProject(project){\n         console.log(project)\n        this.props.loadProjectInfo(project)\n    }\n\n    componentWillMount() {\n        const {match, currentMemberId, logged, getMemberHasProject, getProjectInfo,getAllListsWithCards, getMemberStatus,getActivity} = this.props\n\n        this.socket.emit(\"subscribe\", this.props.match.params.id)\n        const projectId = this.props.match.params.id\n\n        // Get project informations\n        getProjectInfo(match.params.id)\n\n        getMemberHasProject(logged.memberId, match.params.id)\n\n        // Get all lists of this project with associated cards\n        getAllListsWithCards(match.params.id)\n\n        // Get all project members\n        this.props.getAllMembers(this.props.match.params.id)\n\n        // Verify if it's a project administrator\n        getMemberStatus(match.params.id, currentMemberId)\n\n        //Get all activity related to this project\n        getActivity(match.params.id)\n\n        //this.props.getLabels()\n        this.props.onGetAllPermissions(projectId)\n\n    }\n\n    componentWillUnmount(){\n        this.socket.emit(\"unsubscribe\",this.props.match.params.id)\n    }\n\n\n\n    //Will set the state with props\n    componentWillReceiveProps(){\n        const {lists,members} = this.props\n\n        this.setState({ updateLists : false,\n            lists : lists,\n            members : members,\n        })\n    }\n\n    // When a change occurs on our props, we verify to change the state (re rendering) if necessary\n    componentDidUpdate(prevProps){\n        const {hasProject,projectInfo} = this.props\n\n        // verify if props exist\n        if(projectInfo){\n            // If Logged user is not a member of the project & project is private\n            if(hasProject === false && projectInfo.projectVisibility ===1)\n            //redirect to home\n                _helper.History.push('/home')\n        }\n\n\n        // If a change occurs on lists props\n        if(this.props.lists !== prevProps.lists ){\n\n            this.setState( {lists : this.props.lists},()=>{\n            })\n            // this.orderList(this.props.lists)\n        }\n\n        //If a change occurs on projectInfo\n        if(this.props.projectInfo !== prevProps.projectInfo ){\n            this.setState( {projectInfo : this.props.projectInfo})\n        }\n    }\n\n\n\n    /**\n     * Create a new List by calling the action \"createList\"\n     * @param listName title of the new list\n     * @param idProject project id associated to the new list\n     */\n    createNewList(listName,idProject){\n        const {lists} = this.state\n\n\n        //this.socket.emit('add',\"new list\")\n\n\n        // if its the first list created for this project, the list has no father\n        if(lists.length === 0 ){\n            this.props.createList(listName,idProject,0,  this.props.currentMember)\n\n            // we call creatList action specifying the title, project id and father list id.\n        }else{\n            this.props.createList(listName,idProject,lists.length, this.props.currentMember)\n        }\n\n    }\n    deleteList(listId,idProject){\n        this.props.deleteList(listId,idProject)\n    }\n\n    updateListTitle(newListTitle,listId){\n        this.props.updateListTitle(newListTitle,listId)\n    }\n    archiveList(listId){\n        this.props.archiveList(listId,1)\n    }\n\n    /*============= CARD ACTIONS ======================*/\n    createCard(cardName,listId,idProject, member, cardFather){\n        this.props.createCard(cardName,listId,idProject, this.props.currentMember, cardFather)\n    }\n\n\n\n\n\n\n\n    /**\n     * Will occurs when something has been dragged\n     */\n    onDragEnd = (result) => {\n\n        //retrieve source and destination data (given by dnd)\n        const { source, destination,draggableId } = result;\n        //retrieve lists\n        const {lists} = this.state\n        const notArchivedList = Array.from(lists.filter(list => list.listStatus === 0))\n        const archivedList = Array.from(lists.filter(list => list.listStatus === 1))\n\n        // dropped outside the droppagble area\n        if (!destination) {\n            return;\n        }\n\n\n        //When a list has been dragged and dropped\n        if(result.type === 'LIST'){\n\n            let dragId = draggableId.split(':');\n            dragId = Number.parseInt(dragId[1])\n            let findList = notArchivedList.find(list => list.listId === dragId)\n\n            let indexOfList = notArchivedList.findIndex(list => list.listId === findList.listId)\n            let newLists = Array.from(notArchivedList)\n\n            //remove list from list of list\n            newLists.splice(indexOfList,1,)\n\n            //Insert list in new index\n            newLists.splice(destination.index,0,findList)\n\n            const newArrayList = newLists.concat(archivedList)\n\n            //set state with the new list           \n            this.setState({lists:newArrayList},() =>{\n             })\n\n            /** Keeps order list updated */\n            let listsOrder = _helper.Method.computeListOrder(this.state.lists)\n            this.props.updatePositionLists(newArrayList, listsOrder)\n        }\n\n        // When a card has been dragged and dropped\n        if (result.type === 'CARD') {\n\n            let sourceListId =  Number.parseInt(source.droppableId.split(':')[0])\n            let sourceList = Object.assign({},lists.find(list => list.listId === sourceListId ))\n\n            let destinationListId = Number.parseInt(destination.droppableId.split(':')[0])\n            let destinationList =  Object.assign({},lists.find(list => list.listId === destinationListId ))\n            let draggedCard = sourceList.CardListFks.find(card => card.cardId === draggableId )\n\n            // When card has been dragged in another list\n            if(destinationListId !== sourceListId){\n\n                const notArchivedCardsSource = Array.from(sourceList.CardListFks.filter(card => card.cardStatus === 0))\n                const archivedCardsSource = Array.from(sourceList.CardListFks.filter(card => card.cardStatus === 1))\n\n                let deleteSourceList = Array.from(notArchivedCardsSource)\n                deleteSourceList.splice(source.index,1,)\n\n\n                const notArchivedCardsDestination = Array.from(destinationList.CardListFks.filter(card => card.cardStatus === 0))\n                const archivedCardsDestination = Array.from(destinationList.CardListFks.filter(card => card.cardStatus === 1))\n\n                let addDestinationList = Array.from(notArchivedCardsDestination)\n                addDestinationList.splice(destination.index,0,draggedCard)\n\n                sourceList.CardListFks = deleteSourceList.concat(archivedCardsSource)\n                destinationList.CardListFks = addDestinationList.concat(archivedCardsDestination)\n\n                let sourceListIndex = lists.findIndex(list => list.listId === sourceList.listId )\n                let destinationListIndex = lists.findIndex(list => list.listId === destinationList.listId )\n\n                let newList = Array.from(lists)\n                newList.splice(sourceListIndex,1,)\n                newList.splice(sourceListIndex,0,sourceList)\n                newList.splice(destinationListIndex,1,)\n                newList.splice(destinationListIndex,0,destinationList)\n\n                this.setState({lists: newList}, () =>{\n                    \n                    this.props.updateCard(draggedCard.cardId, destinationList.listId,newList)\n                })\n                let listsOrder = _helper.Method.computeCardOrder(this.state.lists)\n                this.props.onUpdatePositionCard(listsOrder)\n            }\n            else{\n\n                const notArchivedCardsSource = Array.from(sourceList.CardListFks.filter(card => card.cardStatus === 0))\n                const archivedCardsSource = Array.from(sourceList.CardListFks.filter(card => card.cardStatus === 1))\n\n                let newSourceList = Array.from(notArchivedCardsSource)\n                newSourceList.splice(source.index,1,)\n                newSourceList.splice(destination.index,0,draggedCard)\n\n                sourceList.CardListFks = newSourceList.concat(archivedCardsSource)\n\n                let sourceListIndex = lists.findIndex(list => list.listId === sourceList.listId )\n\n                let newList = Array.from(lists)\n\n                newList.splice(sourceListIndex,1,)\n                newList.splice(sourceListIndex,0, sourceList)\n                this.setState({lists: newList}, () =>{\n                    this.props.updatePositionLists(newList)\n                    \n                })\n                let listsOrder = _helper.Method.computeCardOrder(this.state.lists)\n                this.props.onUpdatePositionCard(listsOrder)\n            }\n\n        }\n\n    };\n\n    //Make title editable\n    handleEditTitle(){\n        this.setState({editProjectTitle:true})\n    }\n\n    // Edit project Title\n    handleValidationEditTitle(){\n        this.setState({editProjectTitle:false})\n        const {newProjectTitle} = this.state\n        // update Project title \n        if(newProjectTitle) this.props.updateTitle(newProjectTitle, this.props.match.params.id)\n    }\n\n    handleChange = name => event => {\n        this.setState({\n            [name]: event.target.value,\n        });\n    };\n\n    handleClickOpen = () => {\n        this.setState({\n            openMemberDialog: true,\n        });\n    };\n\n    handleClickOpenVisibility= () => {\n        this.setState({\n            openVisibilityDialog: true,\n        });\n    };\n\n    handleClose (){\n        this.setState({ openMemberDialog: false,openVisibilityDialog:false });\n    };\n\n    // Open/Close the left side drawer (for filter and activity)\n    toggleDrawer = (side, open) => () => {\n        this.setState({\n            [side]: open,\n        });\n    };\n\n    // Restore archived card or list\n    handleRestoreArchived = (name,type) => event =>{\n\n        if(type === \"list\") {\n\n            this.props.restoreList(name,0)\n        }\n        if(type === \"card\") {\n\n            this.props.restoreCard(name,{cardStatus:0})\n        }\n        //this.toggleDrawer('openArchived', false)\n    }\n\n    render() {\n\n        const {classes, match, projectInfo } = this.props\n\n        /* ================= ACTIVITY DRAWER================= */\n        const renderActivity = (\n            <Drawer\n                anchor=\"right\"\n                open={this.state.openActivity}\n                onClose={this.toggleDrawer('openActivity', false)}\n            >\n                <div\n                    tabIndex={0}\n                    role=\"button\"\n                    onKeyDown={this.toggleDrawer('openActivity', false)}\n                >\n                    <Grid alignItems='center' justify='center' container >\n                        <Grid xs={2} item>\n                            <IconButton\n                                onClick={this.toggleDrawer('openActivity', false)}\n                                color=\"inherit\"\n                            >\n                                <ChevronLeftIcon color='primary' />\n                            </IconButton>\n                        </Grid>\n                        <Grid xs={8} item>\n                            <Button fullWidth color=\"primary\" className={classes.drawer}>\n                                Activity\n                            </Button>\n                        </Grid>\n                        <Grid xs={2} item>\n                        </Grid>\n                    </Grid>\n                    <div className={classes.drawerList}>\n                        <ActivityList activities={this.props.activities}/>\n                    </div>\n                </div>\n            </Drawer>\n        );\n\n        /* ================= ARCHIVED DRAWER================= */\n        const renderArchived = (\n            <Drawer\n                anchor=\"right\"\n                open={this.state.openArchived}\n                onClose={this.toggleDrawer('openArchived', false)}\n            >\n                <div\n                    tabIndex={0}\n                    role=\"button\"\n                    onKeyDown={this.toggleDrawer('openArchived', false)}\n                >\n                    <Grid alignItems='center' justify='center' container >\n                        <Grid xs={2} item>\n                            <IconButton\n                                onClick={this.toggleDrawer('openArchived', false)}\n                                color=\"inherit\"\n                            >\n                                <ChevronLeftIcon color='primary' />\n                            </IconButton>\n                        </Grid>\n                        <Grid xs={8} item>\n                            <Button fullWidth color=\"primary\" className={classes.drawer}>\n                                Archived\n                            </Button>\n                        </Grid>\n                        <Grid xs={2} item>\n                        </Grid>\n                        <div className={classes.expandPanel}>\n                            <ExpansionPanel>\n                                <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                                    <Typography className={classes.heading}>Lists</Typography>\n                                </ExpansionPanelSummary>\n                                <ExpansionPanelDetails>\n                                    <Grid key={1} xs={12} item>\n                                        {this.props.lists ? this.props.lists.filter(list => list.listStatus === 1).map((list,index) =>\n\n                                            <Paper key={index} className={classes.paper}>\n                                                <Grid alignItems='center' justify=\"space-between\" wrap=\"nowrap\" container >\n                                                    <Grid xs={10} item>\n                                                        {list.listTitle}\n                                                    </Grid>\n                                                    <Grid xs={2} item>\n                                                        <IconButton size=\"small\" aria-label=\"valid\" className={classes.restoreButton} onClick={this.handleRestoreArchived(list.listId,\"list\")}>\n                                                            <RestorePage fontSize=\"small\" />\n                                                        </IconButton>\n                                                    </Grid>\n                                                </Grid>\n                                            </Paper>\n\n                                        ): <Paper className={classes.paper}> 0 list archived</Paper>}\n                                    </Grid>\n                                </ExpansionPanelDetails>\n                            </ExpansionPanel>\n                            <ExpansionPanel>\n                                <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                                    <Typography className={classes.heading}>Cards</Typography>\n                                </ExpansionPanelSummary>\n                                <ExpansionPanelDetails>\n                                    <Grid key={1} xs={12} item>\n                                        {this.props.lists ? this.props.lists.map((list,index) => list.CardListFks.filter((card,index) => card.cardStatus === 1).map(card =>\n                                                <Paper key={index+card.cardId} className={classes.paper}>\n                                                    <Grid alignItems='center' justify=\"space-between\" wrap=\"nowrap\" container >\n                                                        <Grid xs={10} item>\n                                                            {card.cardTitle}\n                                                        </Grid>\n                                                        <Grid xs={2} item>\n                                                            <IconButton size=\"small\" aria-label=\"valid\" className={classes.restoreButton}  onClick={this.handleRestoreArchived(card,\"card\")}>\n                                                                <RestorePage fontSize=\"small\" />\n                                                            </IconButton>\n                                                        </Grid>\n                                                    </Grid>\n                                                </Paper>\n                                            )\n                                        ): <Paper className={classes.paper}> 0 card archived</Paper>}\n                                    </Grid>\n                                </ExpansionPanelDetails>\n                            </ExpansionPanel>\n                        </div>\n                    </Grid>\n                </div>\n            </Drawer>\n        );\n\n        const header =(\n            <Grid container spacing={16} className={classes.projectHeader}>\n\n                {/*===================  TITLE EDIT  ========================================= */}\n                <Typography variant=\"h5\" gutterBottom className={classes.projectTitle}>\n                    {this.state.editProjectTitle === false ? <div>{projectInfo? projectInfo.projectTitle : ''}\n                            {this.props.isAdmin === true ?<Edit className={classes.rightIcon} onClick={this.handleEditTitle.bind(this)} fontSize=\"small\" />:''}\n                        </div>:\n                        <div>\n                            <TextField\n                                id=\"standard-name\"\n                                label=\"Project title\"\n                                defaultValue={projectInfo.projectTitle}\n                                onChange={this.handleChange('newProjectTitle')}\n                                className={classes.textField}\n                                margin=\"normal\"\n                            />\n                            <Button color=\"primary\" className={classes.button}>\n                                <Done className={classes.validIcon} onClick={this.handleValidationEditTitle.bind(this)} />\n                            </Button>\n                        </div>}\n                </Typography>\n                <Grid item xs={12} className={ classes.maxWidth } >\n                    <Grid container className={ classes.maxWidth } spacing={24}>\n\n                        {/**===================  MEMBERS BUTTON  ========================================= */}\n                        <Button color=\"primary\" className={classes.button} onClick={this.handleClickOpen}>\n                            <SupervisorAccount className={classes.leftIcon} />\n                            {this.props.members? this.props.members.length : 0} Members\n                        </Button>\n                        <MemberDialog  isAdmin={this.props.isAdmin} open={this.state.openMemberDialog} onClose={this.handleClose.bind(this)} />\n\n                        {/**===================  VISIBILITY BUTTON  ========================================= */}\n                        < Button color=\"primary\" className={classes.button} onClick={this.handleClickOpenVisibility}>\n                            <RemoveRedEye className={classes.leftIcon} />\n                            Visibility\n                        </Button>\n                        <VisibilityDialog isAdmin={this.props.isAdmin} open={this.state.openVisibilityDialog} onClose={this.handleClose.bind(this)}/>\n\n                        {/*===================  ACTIVITY BUTTON  ========================================= */}\n                        < Button color=\"primary\" className={classes.button} onClick={this.toggleDrawer('openActivity', true)}>\n                            <Description className={classes.leftIcon} />\n                            Activity\n                        </Button>\n                        {renderActivity}\n\n                        {/*===================  FILTER BUTTON  ========================================= */}\n                        {/*< Button color=\"primary\" className={classes.button} onClick={this.toggleDrawer('openFilter', true)}>\n                            <FilterList className={classes.leftIcon} />\n                            Filter\n                        </Button>\n                        {renderFilter}*/}\n\n                        {/*===================  ARCHIVED BUTTON  ========================================= */}\n                        < Button color=\"primary\" className={classes.button} onClick={this.toggleDrawer('openArchived', true)}>\n                            <Archive className={classes.leftIcon} />\n                            Archived\n                        </Button>\n                        {renderArchived}\n                    </Grid>\n                </Grid>\n            </Grid>\n        );\n\n        const dndArea = (\n            <DragDropContext onDragEnd={this.onDragEnd}>\n                <Lists key=\"1\"\n                       idProject={match.params.id}\n                       lists={this.state.lists}\n                       member={this.props.currentMember}\n                       createListCallback={this.createNewList}\n                       deleteList = {this.deleteList}\n                       updateListTitle = {this.updateListTitle}\n                       archiveList = {this.archiveList}\n                       createCard = {this.createCard}\n                       route = {match}\n                />\n            </DragDropContext>\n        )\n\n        return (\n            <div className={classes.projectBody}>\n                {header}\n                {this.props.isLoading ? (\n                    <Grid container justify='center' alignItems='center'>\n                        <LoaderPage/>\n                    </Grid>\n                ) : (\n                    <div className={classes.fullHeight} id='container1'>\n                        {dndArea}\n                    </div>\n                )}\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    lists: state.project.lists,\n    projectInfo : state.project.projectInfo,\n    members : state.project.members || [],\n    currentMember: state.signin.member,\n    isAdmin: state.project.isAdmin || false,\n    logged: state.signin.member,\n    hasProject : state.project.loggedHasProject,\n    activities: state.project.activities,\n    currentMemberId: state.signin.member.memberId,\n    isLoading: state.project.isLoading\n    \n})\n\nconst mapDispatchToProps ={\n    getAllListsWithCards: _action.projectAction.findAllLists,\n    createList: _action.projectAction.createList,\n    moveList: _action.projectAction.updateLists,\n    updateCard: _action.listAction.updateCard,\n    updateCardsPosition : _action.listAction.updateCardPosition,\n    getProjectInfo: _action.projectAction.getProjectInfo,\n    updateTitle: _action.projectAction.updateProjectTitle,\n    getAllMembers : _action.projectAction.findAllMembers,\n    getMemberStatus:  _action.projectAction.getMemberStatus,\n    getActivity: _action.projectAction.getActivity,\n    getMemberHasProject : _action.projectAction.getMemberHasProject,\n    onGetAllPermissions: _action.projectAction.getAllPermissions,\n    restoreList: _action.listAction.updateListStatus,\n    restoreCard : _action.listAction.restoreCard,\n    updatePositionLists: _action.listAction.updatePositionLists,\n    createCard: _action.listAction.createCard,\n    updateListTitle: _action.listAction.updateListTitle,\n    deleteList: _action.listAction.deleteList,\n    archiveList: _action.listAction.updateListStatus,\n    loadLists:  _action.projectAction.loadLists,\n    loadProjectInfo:  _action.projectAction.loadProjectInfo,\n    onUpdatePositionCard:  _action.cardAction.updatePositionCard\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(withStyles(styles)(Project))\n\n","export const styles = theme => ({\n    projectBody: {\n        fontFamily : `\"Roboto\", \"Helvetica\", \"Arial\", sans-serif`,\n        minHeight: '85%',\n    },\n    fullHeight: {\n        minHeight: '85'\n    },\n    projectHeader: {\n        marginTop: theme.spacing.unit * 1,\n        paddingLeft: theme.spacing.unit * 4,\n        paddingBottom: theme.spacing.unit * 3,\n        alignText: `left`,\n        width: '100%'\n\n    },\n    projectTitle: {\n        marginTop: theme.spacing.unit * 1,\n        marginLeft: theme.spacing.unit * 2,\n        alignText: `left`,\n        color:`#3f51b5`\n\n    },\n    button: {\n        margin: theme.spacing.unit,\n\n    },\n    leftIcon:{\n        marginRight: theme.spacing.unit,\n    },\n    rightIcon:{\n        marginLeft: theme.spacing.unit,\n        cusor:`pointer`\n    },\n    validIcon:{\n        marginLeft: theme.spacing.unit,\n        color:`#6bb53f`,\n        paddingTop: `25px`\n    },\n    cancelIcon:{\n        color:`red`,\n        paddingTop: `25px`\n    },\n    drawer:{\n        width:`250px`\n    },\n    drawerList: {\n        overflowY: 'scroll',\n        maxHeight: theme.spacing.unit * 60\n    },\n    paper: {\n        padding: theme.spacing.unit * 1,\n        textAlign: 'left',\n        color: 'black',\n        fontFamily : `\"Roboto\", \"Helvetica\", \"Arial\", sans-serif`,\n        boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n        border : `1px solid lightgrey`,\n        margin: '10px',\n        borderRadius:'10px'\n    },\n    restoreButton: {\n        color: 'green',\n        border : `1px solid green`,\n    },\n    expandPanel:{\n        width: '100%',\n    },\n    widthMax: {\n        maxWidth: '100%'\n    }\n\n})","export const style = theme => ({\n    marginBottom: {\n        marginBottom: theme.spacing.unit * 10\n    },\n    logo: {\n        marginTop: theme.spacing.unit * 5,\n        marginBottom: theme.spacing.unit * 10\n    },\n    rightIcon: {\n        marginLeft: theme.spacing.unit,\n    },\n    button: {\n        margin: theme.spacing.unit,\n    },\n});","import React from 'react'\nimport { connect } from 'react-redux'\nimport { style } from './Style'\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Grid from \"@material-ui/core/Grid/Grid\";\nimport Typography from \"@material-ui/core/Typography/Typography\";\nimport logo from \"../../../public/images/prello-logo-2.png\";\nimport DoneIcon from \"@material-ui/icons/Done\";\nimport Button from \"@material-ui/core/Button/Button\";\nimport _helper from \"../../../helpers\"\n\nclass accountConfirmation extends React.Component {\n\n    componentWillMount () {\n        if (!this.props.isAccountValidNow) {\n            _helper.History.push('/login')\n\n        }\n    }\n\n    goToLogin () {\n        _helper.History.push('/login')\n    }\n\n    render() {\n        const {classes} = this.props;\n        return (\n           <Grid container justify=\"center\">\n               <Grid justify='center' container className={classes.logo}>\n                   <Grid item>\n                       <img src={logo} width=\"100\" alt=\"prello logo\"/>\n                   </Grid>\n               </Grid>\n\n               <Typography variant=\"h4\" gutterBottom className={classes.marginBottom}>\n                   Your account is now ready for Prello.\n               </Typography>\n\n               <Grid container justify=\"center\">\n                   <Button\n                       variant=\"outlined\"\n                       color=\"primary\"\n                       onClick={this.goToLogin}\n                       className={classes.button}\n                   >\n                       Let's start\n                       <DoneIcon className={classes.rightIcon} />\n                   </Button>\n               </Grid>\n           </Grid>\n        )\n    }\n}\n\naccountConfirmation.propTypes = {\n    classes: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n    isAccountValidNow: state.signup.isAccountValidNow,\n    isLoading: state.signup.isLoading\n})\n\nconst mapDispatchToProps = {\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(style)(accountConfirmation));","import React from 'react'\nimport { connect } from 'react-redux'\nimport { style } from './Style'\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport LoaderPage from \"../../loaderPage/LoaderPage\";\nimport _action from \"../../../actions\"\n\n\nclass TokenVerification extends React.Component {\n\n    componentDidMount () {\n        let params = this.props.location.pathname.split('/')\n        let token = params[2]\n        this.props.onValidateAccountWithToken(token)\n        //Method that decrypt the token in server, update the given email else error\n        // push to account-validation if ok, push to home else\n    }\n\n    render() {\n        return (\n            <div>\n                <LoaderPage/>\n            </div>\n        )\n    }\n}\n\nTokenVerification.propTypes = {\n    classes: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n})\n\nconst mapDispatchToProps = {\n    onValidateAccountWithToken: _action.signupAction.validateAccountWithToken\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(style)(TokenVerification));","import React from 'react'\nimport { connect } from 'react-redux'\nimport { style } from './Style'\nimport { withStyles } from '@material-ui/core/styles';\nimport _helper from \"../../../helpers\"\nimport Grid from \"@material-ui/core/Grid/Grid\";\nimport logo from \"../../../public/images/prello-logo-2.png\";\nimport Button from \"@material-ui/core/Button/Button\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport TextField from \"@material-ui/core/TextField/TextField\";\nimport Typography from \"@material-ui/core/Typography/Typography\";\nimport _action from '../../../actions'\nimport Snackbar from \"../../ui/snackbar/Snackbar\";\n\n\nclass PasswordForgotten extends React.Component {\n    constructor (props) {\n        super(props)\n        this.submit = this.submit.bind(this)\n        this.goToLogin = this.goToLogin.bind(this)\n        this.state = {\n            memberEmail: '',\n            openSnackbar: this.props.isPasswordReset\n        }\n    }\n\n    goToLogin () {\n        this.props.onResetField()\n        _helper.History.push('/login')\n    }\n\n    submit () {\n        this.props.onSendNewPassword(this.state.memberEmail)\n        this.setState({\n            memberEmail: '',\n            openSnackbar: true\n        })\n    }\n\n    handleChange (event) {\n        var { name, value } = event.target;\n        this.setState({ [name]: value });\n    }\n\n    // Handle the snackbar state\n    handleSnackbarClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        this.setState({ openSnackbar: false });\n    };\n\n    render() {\n        const {classes} = this.props;\n        return (\n            <Grid container justify=\"center\">\n                <Grid justify='center' container className={classes.logo}>\n                    <Grid item>\n                        <img src={logo} width=\"70\" alt=\"logo of prello\"/>\n                    </Grid>\n                </Grid>\n\n                <Grid justify='center' container >\n                    <Typography variant=\"h6\" gutterBottom className={ classes.paddingText }>\n                        Please, provide the email linked to your account. You will receive a new password.\n                    </Typography>\n                </Grid>\n\n                <Grid item xs={8} sm={5} md={3}>\n                    <Grid container justify=\"center\">\n                        <TextField\n                            required\n                            id='memberEmail'\n                            name=\"memberEmail\"\n                            label=\"Email\"\n                            margin=\"normal\"\n                            value={this.state.memberEmail}\n                            fullWidth\n                            variant=\"outlined\"\n                            type=\"email\"\n                            onChange={this.handleChange.bind(this)}\n                        />\n                    </Grid>\n                    <Grid container justify=\"center\" className={classes.marginBottom}>\n                        <Button\n                            size=\"large\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={this.submit}\n                        >\n                            Send a new password\n                        </Button>\n                    </Grid>\n                    <Grid container justify=\"center\">\n\n                        <Button\n                            variant=\"outlined\"\n                            fullWidth\n                            color=\"secondary\"\n                            onClick={this.goToLogin}\n                        >\n                            Back\n                            <CloseIcon className={classes.rightIcon} />\n                        </Button>\n                    </Grid>\n                </Grid>\n                <Snackbar\n                    handleSnackbarClose={this.handleSnackbarClose}\n                    open={this.state.openSnackbar}\n                    message={this.props.resetPasswordMsg}\n                />\n            </Grid>\n        )\n    }\n}\n\nPasswordForgotten.propTypes = {\n}\n\nconst mapStateToProps = (state) => ({\n    resetPasswordMsg: state.signin.resetPasswordMsg,\n    isPasswordReset: state.signin.isPasswordReset\n})\n\nconst mapDispatchToProps = {\n    onSendNewPassword: _action.signinAction.sendNewPassword,\n    onResetField: _action.signinAction.resetField\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(style)(PasswordForgotten));","export const style = theme => ({\n    marginBottom: {\n        marginBottom: theme.spacing.unit * 10\n    },\n    logo: {\n        marginTop: theme.spacing.unit * 5,\n        marginBottom: theme.spacing.unit * 10\n    },\n    rightIcon: {\n        marginLeft: theme.spacing.unit,\n    },\n    paddingText: {\n        padding: 10\n    }\n});","/** REACT */\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport _helper from '../../helpers'\nimport _action from '../../actions'\n\n/** MATERIAL UI */\nimport { style } from './Style'\nimport Grid from \"@material-ui/core/Grid/Grid\";\nimport LoaderPage from \"../loaderPage/LoaderPage\";\nimport IconButton from \"@material-ui/core/IconButton/IconButton\";\nimport StarIcon from '@material-ui/icons/Star'\nimport AddIcon from '@material-ui/icons/Add'\nimport StarBorderIcon from '@material-ui/icons/StarBorder'\nimport Typography from \"@material-ui/core/Typography/Typography\";\nimport Divider from \"@material-ui/core/Divider/Divider\";\nimport Button from \"@material-ui/core/Button/Button\";\nimport Dialog from \"@material-ui/core/Dialog/Dialog\";\nimport TextField from \"@material-ui/core/TextField/TextField\";\nimport Switch from \"@material-ui/core/Switch/Switch\";\nimport Paper from \"@material-ui/core/Paper/Paper\";\nimport FolderOpenIcon from \"@material-ui/icons/FolderOpen\";\n\n/** ICONS */\nclass DashboardFix extends React.Component {\n\n    constructor (props) {\n        super(props)\n        this.createProject = this.createProject.bind(this)\n        this.goToProject = this.goToProject.bind(this)\n        this.handleProjectFavorite = this.handleProjectFavorite.bind(this)\n        this.state = {\n            open: false,\n            projectTitle: '',\n            isPublic: false\n        };\n    }\n\n    componentWillMount () {\n        const { onFindAllProjectsMember, memberId } = this.props;\n        onFindAllProjectsMember(memberId)\n    }\n\n    /** Handle Dialog */\n    handleClickOpen = () => {\n        this.setState({ open: true });\n    };\n\n    handleClose = () => {\n        this.setState({ open: false })\n    };\n\n    handleChange = name => event => {\n        this.setState({\n            [name]: event.target.value,\n        });\n    };\n\n    handleChangeCheckbox = name => event => {\n        this.setState({ [name]: event.target.checked });\n    };\n\n    createProject () {\n        const { onCreateProject, memberId, member } = this.props;\n        let projectVisibility = 1\n        if (this.state.isPublic) projectVisibility = 0\n        let projectTitle = this.state.projectTitle\n\n        onCreateProject(memberId, projectTitle, projectVisibility, member)\n    }\n\n    handleProjectFavorite (event) {\n        const { onSetProjectAsFavorite, memberId, projects } = this.props;\n        let index = event.currentTarget.id\n        let project = projects[index].project\n        let projectIsFavorite = !project.projectIsFavorite\n        let projectId = project.projectId\n        onSetProjectAsFavorite(memberId, projectId, projectIsFavorite, index)\n    }\n\n    goToProject (event) {\n        let route = '/project/' + event.currentTarget.id\n        _helper.History.push(route)\n    }\n\n    render() {\n        const { classes, isLoading, projects } = this.props;\n\n        /** Dialog */\n        const createProjectDialog = (\n            <Dialog\n                onClose={this.handleClose}\n                aria-labelledby=\"simple-dialog-title\"\n                open={this.state.open}\n            >\n                <Grid container justify='center' className={ classes.dialogCreation }>\n                    <Typography variant='overline'>\n                        Create Project\n                    </Typography>\n                    <Grid item xs={12}>\n                        <Divider/>\n                    </Grid>\n                    <Grid item xs={12} className={ classes.textfield }>\n                        <TextField\n                            id=\"projectTitle\"\n                            label=\"Title\"\n                            fullWidth\n                            className={classes.textField}\n                            value={this.state.projectTitle}\n                            onChange={this.handleChange('projectTitle')}\n                            margin=\"normal\"\n                        />\n                    </Grid>\n                    <Grid container justify='center' >\n                        <Switch\n                            checked={this.state.isPublic}\n                            onChange={this.handleChangeCheckbox('isPublic')}\n                            value=\"isPublic\"\n                            color=\"default\"\n                        />\n                    </Grid>\n                    <Grid container justify='center' >\n                        <Button\n                            color=\"primary\"\n                            className={classes.button}\n                            onClick={this.createProject}\n                            disabled={this.state.projectTitle.trim() === ''}\n                        >\n                            Create\n                        </Button>\n                    </Grid>\n                </Grid>\n            </Dialog>\n        )\n\n        /** Personal project */\n        const projectList = (\n            <div className={classes.maxWidth} >\n                <div id='projectScroll' className={classes.projectArea}>\n                    {projects.map((project, index) =>\n                        !project.project.projectIsFavorite ? (\n                            <Paper\n                                key={project.project.projectId}\n                                className={ classes.project }\n                            >\n                                <Grid container alignItems='center' style={{height: '100%', width: '272px'}}>\n                                    <Grid container justify='space-between' alignItems='center'>\n                                        <Typography variant='overline' className={ classes.whiteText }  >\n                                            {project.project.Project.projectTitle}\n                                        </Typography>\n                                        <Button\n                                            color=\"primary\"\n                                            variant=\"contained\"\n                                            id={project.project.projectId}\n                                            className={classes.button + ' ' + classes.personalBtn}\n                                            onClick={this.goToProject}\n                                        >\n                                            <FolderOpenIcon /> Open\n                                        </Button>\n                                    </Grid>\n                                    <Grid container justify='space-between' alignItems='center'>\n                                        <Typography variant='body2' className={ classes.whiteText } >\n                                            {'Contributors : ' + project.contributors}\n                                        </Typography>\n                                        <IconButton\n                                            id={index}\n                                            onClick={this.handleProjectFavorite}\n                                            className={classes.addFavoriteButtonIcon}\n                                        >\n                                            <StarBorderIcon />\n                                        </IconButton>\n                                    </Grid>\n                                </Grid>\n                            </Paper>\n                        ) : null\n                    )}\n                </div>\n            </div>\n        )\n\n        /** Favorite project */\n        const favoriteList = (\n            <div className={classes.maxWidth}>\n                <div id='projectScroll' className={classes.projectArea}>\n                    {projects.map((project, index) =>\n                        project.project.projectIsFavorite ? (\n                            <Paper\n                                key={project.project.projectId}\n                                className={ classes.favorite }\n                            >\n                                <Grid container alignItems='center' style={{height: '100%', width: '272px'}}>\n                                    <Grid container justify='space-between' alignItems='center'>\n                                        <Typography variant='overline' className={ classes.whiteText }  >\n                                            {project.project.Project.projectTitle}\n                                        </Typography>\n                                        <Button\n                                            variant=\"contained\"\n                                            id={project.project.projectId}\n                                            className={classes.button + ' ' + classes.favoriteBtn}\n                                            onClick={this.goToProject}\n                                        >\n                                            <FolderOpenIcon /> Open\n                                        </Button>\n                                    </Grid>\n                                    <Grid container justify='space-between' alignItems='center'>\n                                        <Typography variant='body2' className={ classes.whiteText } >\n                                            {'Contributors : ' + project.contributors}\n                                        </Typography>\n                                        <IconButton\n                                            id={index}\n                                            onClick={this.handleProjectFavorite}\n                                            className={classes.addFavoriteButtonIcon}\n                                        >\n                                            <StarIcon />\n                                        </IconButton>\n                                    </Grid>\n                                </Grid>\n                            </Paper>\n                        ) : null\n                    )}\n                </div>\n            </div>\n        )\n\n        /** Button creation */\n        const creationButton = (\n            <Button\n                color=\"primary\"\n                className={classes.button}\n                onClick={this.handleClickOpen}\n            >\n                <AddIcon /> New\n            </Button>\n        )\n\n        return (\n            <Grid container justify=\"center\">\n                {isLoading ? (\n                        <LoaderPage/>\n                    ) :\n                    <Grid container className={ classes.mainContainer + ' ' + classes.maxWidth }>\n                        {createProjectDialog}\n                        <Grid container>\n                            <Typography variant='overline'>\n                                FAVORITE PROJECTS\n                            </Typography>\n                        </Grid>\n                        <Grid container>\n                            <Grid item xs={12}>\n                                <Divider/>\n                            </Grid>\n                        </Grid>\n                        {favoriteList}\n                        <Grid container justify='space-between' className={ classes.marginTop }>\n                            <Typography variant='overline'>\n                                PERSONAL PROJECTS\n                            </Typography>\n                            {creationButton}\n                        </Grid>\n                        <Grid container>\n                            <Grid item xs={12}>\n                                <Divider/>\n                            </Grid>\n                        </Grid>\n                        {projectList}\n                    </Grid>\n                }\n            </Grid>\n        )\n    }\n}\n\nDashboardFix.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    isLoading: state.dashboardFix.isLoading,\n    projects: state.dashboardFix.projects,\n    memberId: state.signin.member.memberId,\n    member: state.signin.member\n})\n\nconst mapDispatchToProps = {\n    onFindAllProjectsMember: _action.dashboardFixAction.findAllProjectsMember,\n    onCreateProject: _action.dashboardFixAction.createProject,\n    onSetProjectAsFavorite: _action.dashboardFixAction.setAsProjectFavorite\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(withStyles(style)(DashboardFix));","import Typography from \"@material-ui/core/Typography/Typography\";\nimport React from \"react\";\n\nexport const style = theme => ({\n    root: {\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        overflow: 'hidden',\n        backgroundColor: theme.palette.background.paper,\n    },\n    projectArea: {\n        whiteSpace: `nowrap`,\n        overflowY: `auto`,\n        flexWrap: 'inherit',\n        display: 'flex',\n    },\n    project: {\n        width: '272px',\n        height: '120px',\n        margin: '7px',\n        //marginRight: 0,\n        backgroundColor:`#2c387e`,\n        color: 'white',\n        padding: theme.spacing.unit,\n    },\n    favorite: {\n        width: '272px',\n        height: '120px',\n        margin: '7px',\n        //marginRight: 0,\n        backgroundColor:`#f44336`,\n        color: 'white',\n        padding: theme.spacing.unit,\n    },\n    whiteText: {\n        color: 'white',\n    },\n    favoriteButtonIcon: {\n        color: '#ffeb3b',\n        '&:hover': {\n            color: '#ffc107',\n        }\n    },\n    addFavoriteButtonIcon: {\n        color: '#ffffe6',\n        '&:hover': {\n            color: '#ffc107',\n        }\n    },\n    personalBtn: {\n        backgroundColor: '#3f51b5'\n    },\n    favoriteBtn: {\n        backgroundColor: '#b41f18',\n        color: 'white',\n        '&:hover': {\n            backgroundColor: '#f6685e',\n        }\n    },\n    projectContainer: {\n        paddingLeft: theme.spacing.unit,\n        paddingRight: theme.spacing.unit,\n    },\n    mainContainer: {\n        marginLeft: 30,\n        marginRight: 30\n    },\n    gridList: {\n        flexWrap: 'nowrap',\n        // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n        transform: 'translateZ(0)',\n    },\n    title: {\n        color: theme.palette.primary.light,\n    },\n    titleBar: {\n        background:\n            'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\n    },\n    projectContent: {\n        backgroundColor: 'red',\n        heigth: '100%',\n        width: '100%'\n    },\n    marginTop: {\n        marginTop: 30\n    },\n    dialogCreation: {\n        //margin: '10px'\n    },\n    textfield: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        marginBottom: theme.spacing.unit,\n    },\n    maxWidth: {\n        maxWidth: '100%'\n    }\n\n});\n\n\n","/** REACT */\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport _helper from '../../helpers'\n\n/** MATERIAL UI */\nimport { style } from './Style'\nimport Grid from \"@material-ui/core/Grid/Grid\";\nimport logo from \"../../public/images/prello-logo-2.png\";\nimport downloadPicture from \"../../public/images/download-picture.png\";\nimport Typography from \"@material-ui/core/Typography/Typography\";\nimport Button from \"@material-ui/core/Button/Button\";\nimport GetAppIcon from '@material-ui/icons/GetApp'\nimport CloseIcon from \"@material-ui/icons/Close\";\n\n/** ICONS */\nclass Download extends React.Component {\n\n    leavePage () {\n        _helper.History.push('/home')\n    }\n\n    goToLink (event) {\n        const type = event.currentTarget.id\n\n        const windowsLink = 'https://drive.google.com/open?id=1T_1kY6ZImpbK8B5d9Mi88dvk2P2ucRLj'\n        const linuxLink = 'https://drive.google.com/open?id=1r6_hcyRj3lUi73n_7h-SQdgKsrp6XBPL'\n        const macLink = 'https://drive.google.com/open?id=10kXDiLWnG8eUSSLbefu3Z6wSTS2fugUX'\n\n        if (type === 'linux') window.open(linuxLink)\n        else if (type === 'mac') window.open(macLink)\n        else if (type === 'windows') window.open(windowsLink)\n    }\n\n    render() {\n        const { classes } = this.props;\n\n\n        return (\n            <Grid container justify=\"center\">\n                {!this.props.isLogged ? (\n                    <Grid justify='center' container className={classes.logo}>\n                        <Grid item>\n                            <img src={logo} width=\"100\" alt=\"prello logo\"/>\n                        </Grid>\n                    </Grid>\n                ) : null}\n\n                <Typography variant=\"h4\" gutterBottom className={classes.marginBottom}>\n                    Download Prello for Desktop\n                </Typography>\n\n                <Grid container justify=\"center\" alignItems=\"center\">\n                    <Grid xs={5} item>\n                        <Grid container justify=\"center\" alignItems=\"center\">\n                            <Typography variant=\"overline\">\n                                Available for linux and Mac\n                            </Typography>\n                        </Grid>\n                        <Grid justify='center' container alignItems=\"center\">\n                            <Grid item xs={8}>\n                                <Grid justify='center' container alignItems=\"center\">\n                                    <Typography variant=\"caption\" className={ classes.marginBottomXs }>\n                                        By downloading Prello, you agree to the terms of use and the privacy policy.\n                                    </Typography>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid justify='center' container alignItems=\"center\">\n                            <Grid item xs={4} className={ classes.marginBottomXs }>\n                                <Button\n                                    id='linux'\n                                    onClick={this.goToLink}\n                                    download\n                                    variant=\"outlined\"\n                                    color=\"primary\"\n                                    fullWidth\n                                    className={classes.button}\n                                >\n                                    Get on LINUX\n                                    <GetAppIcon className={classes.rightIcon} />\n                                </Button>\n                            </Grid>\n                        </Grid>\n                        <Grid justify='center' container alignItems=\"center\">\n                            <Grid item xs={4} className={ classes.marginBottomXs }>\n                                <Button\n                                    id='mac'\n                                    onClick={this.goToLink}\n                                    download\n                                    variant=\"outlined\"\n                                    color=\"primary\"\n                                    fullWidth\n                                    className={classes.button}\n                                >\n                                    Get on MAC\n                                    <GetAppIcon className={classes.rightIcon} />\n                                </Button>\n                            </Grid>\n                        </Grid>\n                        <Grid justify='center' container alignItems=\"center\">\n                            <Grid item xs={4}>\n                                <Button\n                                    id='windows'\n                                    onClick={this.goToLink}\n                                    download\n                                    variant=\"outlined\"\n                                    color=\"primary\"\n                                    fullWidth\n                                    className={classes.button}\n                                >\n                                    Get on WINDOWS\n                                    <GetAppIcon className={classes.rightIcon} />\n                                </Button>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid xs={5} item>\n                        <Grid container justify=\"center\" alignItems=\"center\">\n                            <img src={downloadPicture} alt='download' className={classes.downloadPicture}/>\n                        </Grid>\n                    </Grid>\n                    {!this.props.isLogged ? (\n                        <Grid className={ classes.marginTop } container justify='center'>\n                            <Grid xs={2} container>\n                                <Button\n                                    variant=\"outlined\"\n                                    color=\"secondary\"\n                                    fullWidth\n                                    onClick={this.leavePage}\n                                    className={classes.button}\n                                >\n                                    Back\n                                    <CloseIcon className={classes.rightIcon} />\n                                </Button>\n                            </Grid>\n                        </Grid>\n                    ) : null}\n                </Grid>\n            </Grid>\n        )\n    }\n}\n\nDownload.propTypes = {\n    classes: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n    isLogged: state.signin.isLogged\n})\n\nconst mapDispatchToProps = {\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(withStyles(style)(Download));","export const style = theme => ({\n    marginBottom: {\n        marginBottom: theme.spacing.unit * 10\n    },\n    marginTop: {\n        marginTop: theme.spacing.unit * 5\n    },\n    logo: {\n        marginTop: theme.spacing.unit * 5,\n        marginBottom: theme.spacing.unit * 10\n    },\n    rightIcon: {\n        marginLeft: theme.spacing.unit,\n    },\n    marginBottomXs: {\n        marginBottom: theme.spacing.unit * 2\n    },\n    downloadPicture: {\n        height: 200\n    }\n});\n\n\n","import React, { Component } from 'react';\nimport Dashboard from './dashboard/Dashboard'\nimport {Router, Route, Switch, Redirect} from 'react-router-dom'\nimport Signin from \"./signin/Signin\";\nimport Signup from \"./signup/Signup\";\nimport Invitation from \"./invitation/Invitation\";\nimport Profile from './profile/Profile'\nimport Navbar from \"./layout/navbar/Navbar\"\nimport TransitionGithub from './transitionGithub/TransitionGithub'\nimport _helper from '../helpers'\nimport connect from \"react-redux/es/connect/connect\";\nimport _action from \"../actions\";\nimport LoaderPage from \"./loaderPage/LoaderPage\";\nimport Project from './project/Project'\nimport { style } from './Style'\nimport {withStyles} from \"@material-ui/core\";\nimport AccountConfirmation from \"./signup/accountConfirmation/AccountConfirmation\"\nimport TokenVerification from \"./signup/accountConfirmation/TokenVerification\"\nimport PasswordForgotten from \"./signin/passwordForgotten/PasswordForgotten\"\nimport SearchResults from \"./layout/navbar/searchResults/SearchResults\"\nimport DashboardFix from './dashboardFix/DashboardFix'\nimport Download from \"./download/Download\"\n\nclass App extends Component {\n    constructor (props) {\n        super(props)\n        this.routesAuthorization = this.routesAuthorization.bind(this);\n        this.LoginContainer = this.LoginContainer.bind(this)\n        this.LoaderPageContainer = this.LoaderPageContainer.bind(this)\n        this.DefaultContainer = this.DefaultContainer.bind(this)\n\n    }\n\n    componentWillMount () {\n        this.props.onIsMemberLogged()\n    }\n\n    /* If the user is logged we choose the default component with all components of the application\n     * Else we display only the login component\n     */\n    routesAuthorization () {\n        if (this.props.isLoading) {\n            return this.LoaderPageContainer\n        }\n        if (this.props.isLogged) {\n            return this.DefaultContainer\n        } else {\n            return this.LoginContainer\n        }\n    }\n\n    LoginContainer = () => {\n        const { classes } = this.props;\n\n        return(\n            <div className={classes.layout}>\n                <Switch>\n                    <Route exact path=\"/login\" component={Signin} />\n                    <Route exact path=\"/login/:memberEmail/:token\" component={Signin} />\n                    <Route exact path=\"/signup\" component={Signup} />\n                    <Route path=\"/invitation/:token\" component={Invitation} />\n                    <Route exact path=\"/password-forgotten\" component={PasswordForgotten} />\n                    <Route exact path=\"/account-confirmation\" component={AccountConfirmation} />\n                    <Route path=\"/account-confirmation/:token\" component={TokenVerification} />\n                    <Route exact path=\"/download\" component={Download} />\n                    <Route path=\"/github_verification/:token\" component={TransitionGithub} />\n                    <Route path='*' render={() => <Redirect to=\"/login\" />}/>\n                </Switch>\n            </div>\n        )\n    }\n\n    LoaderPageContainer = () => {\n        const { classes } = this.props;\n\n        return(\n            <div className={classes.layout}>\n                <Route component={LoaderPage} />\n            </div>\n        )\n    }\n\n    DefaultContainer = () => {\n        const { classes } = this.props;\n        return(\n            <div className={classes.layout}>\n                <Navbar/>\n                <Switch>\n                    <Route path=\"/home\" component={DashboardFix}/>\n                    <Route path=\"/profile\" component={Profile}/>\n                    <Route path=\"/results\" component={SearchResults}/>\n                    <Route exact path=\"/download\" component={Download} />\n                    <Route path=\"/invitation/:token\" component={Invitation} />\n                    <Route path=\"/project/:id/:listid/:cardid\" component={Project}/>\n                    <Route path=\"/project/:id\" component={Project}/>\n                    <Route path='*' render={() => <Redirect to=\"/home\" />}/>\n                </Switch>\n            </div>\n        )\n    }\n    // <Route path=\"/\" render={() => <Redirect to=\"/home\" />} />\n\n    render() {\n        return (\n            <Router history={_helper.History}>\n                <Switch>\n                    <Route component={this.routesAuthorization()}/>\n                </Switch>\n            </Router>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    isLogged: state.signin.isLogged,\n    isLoading: state.signin.isLoading\n})\n\nconst mapDispatchToProps = {\n    onIsMemberLogged: _action.signinAction.isMemberLogged\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(style)(App));\n","export const style = theme => ({\n    layout: {\n        height: '100%',\n        margin: '0'\n    },\n    paddingSide: {\n        paddingLeft: 10,\n        paddingRight: 10\n    }\n});","import React from 'react'\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { Store } from './helpers';\nimport App from './components/App';\n\nrender(\n    <Provider store={Store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n)"],"sourceRoot":""}